

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Oct 11 16:59:30 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	intentry,global,class=CODE,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    65                           	dabs	1,0x7E,2
    66  0000                     
    67                           ; Version 2.35
    68                           ; Generated 13/04/2021 GMT
    69                           ; 
    70                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC16F18855 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     	;# 
   103  0001                     	;# 
   104  0002                     	;# 
   105  0003                     	;# 
   106  0004                     	;# 
   107  0005                     	;# 
   108  0006                     	;# 
   109  0007                     	;# 
   110  0008                     	;# 
   111  0009                     	;# 
   112  000A                     	;# 
   113  000B                     	;# 
   114  000C                     	;# 
   115  000D                     	;# 
   116  000E                     	;# 
   117  0010                     	;# 
   118  0011                     	;# 
   119  0012                     	;# 
   120  0013                     	;# 
   121  0016                     	;# 
   122  0017                     	;# 
   123  0018                     	;# 
   124  001C                     	;# 
   125  001C                     	;# 
   126  001D                     	;# 
   127  001D                     	;# 
   128  001E                     	;# 
   129  001F                     	;# 
   130  008C                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  008E                     	;# 
   135  008F                     	;# 
   136  0090                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  010E                     	;# 
   155  010F                     	;# 
   156  0110                     	;# 
   157  0110                     	;# 
   158  0111                     	;# 
   159  0112                     	;# 
   160  0112                     	;# 
   161  0113                     	;# 
   162  0114                     	;# 
   163  0114                     	;# 
   164  0115                     	;# 
   165  0116                     	;# 
   166  0116                     	;# 
   167  0117                     	;# 
   168  0119                     	;# 
   169  0119                     	;# 
   170  0119                     	;# 
   171  011A                     	;# 
   172  011A                     	;# 
   173  011A                     	;# 
   174  011B                     	;# 
   175  011B                     	;# 
   176  011B                     	;# 
   177  011B                     	;# 
   178  011B                     	;# 
   179  011C                     	;# 
   180  011C                     	;# 
   181  011C                     	;# 
   182  011D                     	;# 
   183  011D                     	;# 
   184  011D                     	;# 
   185  011E                     	;# 
   186  011E                     	;# 
   187  011E                     	;# 
   188  011F                     	;# 
   189  011F                     	;# 
   190  011F                     	;# 
   191  011F                     	;# 
   192  011F                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195  018E                     	;# 
   196  018F                     	;# 
   197  0190                     	;# 
   198  0191                     	;# 
   199  0192                     	;# 
   200  0196                     	;# 
   201  0197                     	;# 
   202  0198                     	;# 
   203  0199                     	;# 
   204  019A                     	;# 
   205  019B                     	;# 
   206  019C                     	;# 
   207  020C                     	;# 
   208  020C                     	;# 
   209  020D                     	;# 
   210  020E                     	;# 
   211  020F                     	;# 
   212  020F                     	;# 
   213  0210                     	;# 
   214  0210                     	;# 
   215  0211                     	;# 
   216  0211                     	;# 
   217  0212                     	;# 
   218  0212                     	;# 
   219  0213                     	;# 
   220  0214                     	;# 
   221  0215                     	;# 
   222  0215                     	;# 
   223  0216                     	;# 
   224  0216                     	;# 
   225  0217                     	;# 
   226  0217                     	;# 
   227  0218                     	;# 
   228  0218                     	;# 
   229  0219                     	;# 
   230  021A                     	;# 
   231  021B                     	;# 
   232  021B                     	;# 
   233  021C                     	;# 
   234  021C                     	;# 
   235  021D                     	;# 
   236  021D                     	;# 
   237  021E                     	;# 
   238  021F                     	;# 
   239  028C                     	;# 
   240  028C                     	;# 
   241  028D                     	;# 
   242  028D                     	;# 
   243  028E                     	;# 
   244  028F                     	;# 
   245  0290                     	;# 
   246  0290                     	;# 
   247  0291                     	;# 
   248  0292                     	;# 
   249  0292                     	;# 
   250  0293                     	;# 
   251  0293                     	;# 
   252  0294                     	;# 
   253  0295                     	;# 
   254  0296                     	;# 
   255  0296                     	;# 
   256  0297                     	;# 
   257  0298                     	;# 
   258  0298                     	;# 
   259  0299                     	;# 
   260  0299                     	;# 
   261  029A                     	;# 
   262  029B                     	;# 
   263  029C                     	;# 
   264  029C                     	;# 
   265  029D                     	;# 
   266  030C                     	;# 
   267  030C                     	;# 
   268  030D                     	;# 
   269  030E                     	;# 
   270  030F                     	;# 
   271  0310                     	;# 
   272  0310                     	;# 
   273  0311                     	;# 
   274  0312                     	;# 
   275  0313                     	;# 
   276  0314                     	;# 
   277  0314                     	;# 
   278  0315                     	;# 
   279  0316                     	;# 
   280  0317                     	;# 
   281  0318                     	;# 
   282  0318                     	;# 
   283  0319                     	;# 
   284  031A                     	;# 
   285  031B                     	;# 
   286  031C                     	;# 
   287  031C                     	;# 
   288  031D                     	;# 
   289  031E                     	;# 
   290  031F                     	;# 
   291  038C                     	;# 
   292  038C                     	;# 
   293  038D                     	;# 
   294  038E                     	;# 
   295  0390                     	;# 
   296  0390                     	;# 
   297  0391                     	;# 
   298  0392                     	;# 
   299  040C                     	;# 
   300  040D                     	;# 
   301  040E                     	;# 
   302  040F                     	;# 
   303  0410                     	;# 
   304  0411                     	;# 
   305  0416                     	;# 
   306  0416                     	;# 
   307  0417                     	;# 
   308  0418                     	;# 
   309  0418                     	;# 
   310  0419                     	;# 
   311  041A                     	;# 
   312  041A                     	;# 
   313  041B                     	;# 
   314  041C                     	;# 
   315  041C                     	;# 
   316  041D                     	;# 
   317  041E                     	;# 
   318  041F                     	;# 
   319  048C                     	;# 
   320  048C                     	;# 
   321  048D                     	;# 
   322  048E                     	;# 
   323  048F                     	;# 
   324  048F                     	;# 
   325  0490                     	;# 
   326  0491                     	;# 
   327  0492                     	;# 
   328  0492                     	;# 
   329  0493                     	;# 
   330  0494                     	;# 
   331  0495                     	;# 
   332  0495                     	;# 
   333  0496                     	;# 
   334  0497                     	;# 
   335  0498                     	;# 
   336  0499                     	;# 
   337  049A                     	;# 
   338  049B                     	;# 
   339  049C                     	;# 
   340  049D                     	;# 
   341  050C                     	;# 
   342  050C                     	;# 
   343  050D                     	;# 
   344  050E                     	;# 
   345  050F                     	;# 
   346  050F                     	;# 
   347  0510                     	;# 
   348  0511                     	;# 
   349  0512                     	;# 
   350  0512                     	;# 
   351  0513                     	;# 
   352  0514                     	;# 
   353  0515                     	;# 
   354  0515                     	;# 
   355  0516                     	;# 
   356  0517                     	;# 
   357  0518                     	;# 
   358  0519                     	;# 
   359  051A                     	;# 
   360  051B                     	;# 
   361  051C                     	;# 
   362  051D                     	;# 
   363  058C                     	;# 
   364  058C                     	;# 
   365  058D                     	;# 
   366  058E                     	;# 
   367  058F                     	;# 
   368  058F                     	;# 
   369  0590                     	;# 
   370  0591                     	;# 
   371  0592                     	;# 
   372  0593                     	;# 
   373  060C                     	;# 
   374  060D                     	;# 
   375  060E                     	;# 
   376  060F                     	;# 
   377  0610                     	;# 
   378  0611                     	;# 
   379  0612                     	;# 
   380  0613                     	;# 
   381  0614                     	;# 
   382  0616                     	;# 
   383  0617                     	;# 
   384  0618                     	;# 
   385  0619                     	;# 
   386  061A                     	;# 
   387  061B                     	;# 
   388  061C                     	;# 
   389  061D                     	;# 
   390  061E                     	;# 
   391  068C                     	;# 
   392  068D                     	;# 
   393  068E                     	;# 
   394  068F                     	;# 
   395  0690                     	;# 
   396  0691                     	;# 
   397  0692                     	;# 
   398  0693                     	;# 
   399  0694                     	;# 
   400  070C                     	;# 
   401  070D                     	;# 
   402  070E                     	;# 
   403  070F                     	;# 
   404  0710                     	;# 
   405  0711                     	;# 
   406  0712                     	;# 
   407  0713                     	;# 
   408  0714                     	;# 
   409  0716                     	;# 
   410  0717                     	;# 
   411  0718                     	;# 
   412  0719                     	;# 
   413  071A                     	;# 
   414  071B                     	;# 
   415  071C                     	;# 
   416  071D                     	;# 
   417  071E                     	;# 
   418  0796                     	;# 
   419  0797                     	;# 
   420  0798                     	;# 
   421  0799                     	;# 
   422  079A                     	;# 
   423  079B                     	;# 
   424  080C                     	;# 
   425  080D                     	;# 
   426  080E                     	;# 
   427  080F                     	;# 
   428  0810                     	;# 
   429  0811                     	;# 
   430  0812                     	;# 
   431  0813                     	;# 
   432  0814                     	;# 
   433  081A                     	;# 
   434  081B                     	;# 
   435  081C                     	;# 
   436  081D                     	;# 
   437  081E                     	;# 
   438  081F                     	;# 
   439  088C                     	;# 
   440  088D                     	;# 
   441  088E                     	;# 
   442  088F                     	;# 
   443  0890                     	;# 
   444  0891                     	;# 
   445  0892                     	;# 
   446  0893                     	;# 
   447  0895                     	;# 
   448  0896                     	;# 
   449  0897                     	;# 
   450  0898                     	;# 
   451  0899                     	;# 
   452  089A                     	;# 
   453  089B                     	;# 
   454  090C                     	;# 
   455  090E                     	;# 
   456  090F                     	;# 
   457  091F                     	;# 
   458  091F                     	;# 
   459  098F                     	;# 
   460  098F                     	;# 
   461  0990                     	;# 
   462  0991                     	;# 
   463  0992                     	;# 
   464  0993                     	;# 
   465  0994                     	;# 
   466  0995                     	;# 
   467  0996                     	;# 
   468  0997                     	;# 
   469  0E0F                     	;# 
   470  0E10                     	;# 
   471  0E11                     	;# 
   472  0E12                     	;# 
   473  0E13                     	;# 
   474  0E14                     	;# 
   475  0E15                     	;# 
   476  0E16                     	;# 
   477  0E17                     	;# 
   478  0E18                     	;# 
   479  0E19                     	;# 
   480  0E1A                     	;# 
   481  0E1B                     	;# 
   482  0E1C                     	;# 
   483  0E1D                     	;# 
   484  0E1E                     	;# 
   485  0E1F                     	;# 
   486  0E20                     	;# 
   487  0E21                     	;# 
   488  0E22                     	;# 
   489  0E23                     	;# 
   490  0E24                     	;# 
   491  0E25                     	;# 
   492  0E26                     	;# 
   493  0E27                     	;# 
   494  0E28                     	;# 
   495  0E29                     	;# 
   496  0E2A                     	;# 
   497  0E2B                     	;# 
   498  0E2C                     	;# 
   499  0E2D                     	;# 
   500  0E2E                     	;# 
   501  0E2F                     	;# 
   502  0E30                     	;# 
   503  0E31                     	;# 
   504  0E32                     	;# 
   505  0E33                     	;# 
   506  0E34                     	;# 
   507  0E35                     	;# 
   508  0E36                     	;# 
   509  0E37                     	;# 
   510  0E8F                     	;# 
   511  0E90                     	;# 
   512  0E91                     	;# 
   513  0E92                     	;# 
   514  0E93                     	;# 
   515  0E94                     	;# 
   516  0E95                     	;# 
   517  0E96                     	;# 
   518  0E97                     	;# 
   519  0E9C                     	;# 
   520  0E9D                     	;# 
   521  0E9E                     	;# 
   522  0EA1                     	;# 
   523  0EA2                     	;# 
   524  0EA3                     	;# 
   525  0EA4                     	;# 
   526  0EA5                     	;# 
   527  0EA9                     	;# 
   528  0EAA                     	;# 
   529  0EAB                     	;# 
   530  0EAC                     	;# 
   531  0EB1                     	;# 
   532  0EB2                     	;# 
   533  0EB3                     	;# 
   534  0EB8                     	;# 
   535  0EB9                     	;# 
   536  0EBA                     	;# 
   537  0EBB                     	;# 
   538  0EBC                     	;# 
   539  0EBD                     	;# 
   540  0EBE                     	;# 
   541  0EC3                     	;# 
   542  0EC5                     	;# 
   543  0EC6                     	;# 
   544  0EC7                     	;# 
   545  0EC8                     	;# 
   546  0EC9                     	;# 
   547  0ECA                     	;# 
   548  0ECB                     	;# 
   549  0ECC                     	;# 
   550  0F10                     	;# 
   551  0F11                     	;# 
   552  0F12                     	;# 
   553  0F13                     	;# 
   554  0F14                     	;# 
   555  0F15                     	;# 
   556  0F16                     	;# 
   557  0F17                     	;# 
   558  0F18                     	;# 
   559  0F19                     	;# 
   560  0F1A                     	;# 
   561  0F1B                     	;# 
   562  0F1C                     	;# 
   563  0F1D                     	;# 
   564  0F1E                     	;# 
   565  0F1F                     	;# 
   566  0F20                     	;# 
   567  0F21                     	;# 
   568  0F22                     	;# 
   569  0F23                     	;# 
   570  0F24                     	;# 
   571  0F25                     	;# 
   572  0F26                     	;# 
   573  0F27                     	;# 
   574  0F38                     	;# 
   575  0F39                     	;# 
   576  0F3A                     	;# 
   577  0F3B                     	;# 
   578  0F3C                     	;# 
   579  0F3D                     	;# 
   580  0F3E                     	;# 
   581  0F3F                     	;# 
   582  0F40                     	;# 
   583  0F41                     	;# 
   584  0F43                     	;# 
   585  0F44                     	;# 
   586  0F45                     	;# 
   587  0F46                     	;# 
   588  0F47                     	;# 
   589  0F48                     	;# 
   590  0F49                     	;# 
   591  0F4A                     	;# 
   592  0F4B                     	;# 
   593  0F4C                     	;# 
   594  0F4E                     	;# 
   595  0F4F                     	;# 
   596  0F50                     	;# 
   597  0F51                     	;# 
   598  0F52                     	;# 
   599  0F53                     	;# 
   600  0F54                     	;# 
   601  0F55                     	;# 
   602  0F56                     	;# 
   603  0F57                     	;# 
   604  0F65                     	;# 
   605  0F68                     	;# 
   606  0F69                     	;# 
   607  0F6A                     	;# 
   608  0F6B                     	;# 
   609  0FE4                     	;# 
   610  0FE5                     	;# 
   611  0FE6                     	;# 
   612  0FE7                     	;# 
   613  0FE8                     	;# 
   614  0FE9                     	;# 
   615  0FEA                     	;# 
   616  0FEB                     	;# 
   617  0FED                     	;# 
   618  0FEE                     	;# 
   619  0FEF                     	;# 
   620  0000                     	;# 
   621  0001                     	;# 
   622  0002                     	;# 
   623  0003                     	;# 
   624  0004                     	;# 
   625  0005                     	;# 
   626  0006                     	;# 
   627  0007                     	;# 
   628  0008                     	;# 
   629  0009                     	;# 
   630  000A                     	;# 
   631  000B                     	;# 
   632  000C                     	;# 
   633  000D                     	;# 
   634  000E                     	;# 
   635  0010                     	;# 
   636  0011                     	;# 
   637  0012                     	;# 
   638  0013                     	;# 
   639  0016                     	;# 
   640  0017                     	;# 
   641  0018                     	;# 
   642  001C                     	;# 
   643  001C                     	;# 
   644  001D                     	;# 
   645  001D                     	;# 
   646  001E                     	;# 
   647  001F                     	;# 
   648  008C                     	;# 
   649  008C                     	;# 
   650  008D                     	;# 
   651  008E                     	;# 
   652  008E                     	;# 
   653  008F                     	;# 
   654  0090                     	;# 
   655  0090                     	;# 
   656  0091                     	;# 
   657  0093                     	;# 
   658  0094                     	;# 
   659  0095                     	;# 
   660  0096                     	;# 
   661  0097                     	;# 
   662  0098                     	;# 
   663  0099                     	;# 
   664  009A                     	;# 
   665  009B                     	;# 
   666  009C                     	;# 
   667  009D                     	;# 
   668  009E                     	;# 
   669  010C                     	;# 
   670  010D                     	;# 
   671  010E                     	;# 
   672  010E                     	;# 
   673  010F                     	;# 
   674  0110                     	;# 
   675  0110                     	;# 
   676  0111                     	;# 
   677  0112                     	;# 
   678  0112                     	;# 
   679  0113                     	;# 
   680  0114                     	;# 
   681  0114                     	;# 
   682  0115                     	;# 
   683  0116                     	;# 
   684  0116                     	;# 
   685  0117                     	;# 
   686  0119                     	;# 
   687  0119                     	;# 
   688  0119                     	;# 
   689  011A                     	;# 
   690  011A                     	;# 
   691  011A                     	;# 
   692  011B                     	;# 
   693  011B                     	;# 
   694  011B                     	;# 
   695  011B                     	;# 
   696  011B                     	;# 
   697  011C                     	;# 
   698  011C                     	;# 
   699  011C                     	;# 
   700  011D                     	;# 
   701  011D                     	;# 
   702  011D                     	;# 
   703  011E                     	;# 
   704  011E                     	;# 
   705  011E                     	;# 
   706  011F                     	;# 
   707  011F                     	;# 
   708  011F                     	;# 
   709  011F                     	;# 
   710  011F                     	;# 
   711  018C                     	;# 
   712  018D                     	;# 
   713  018E                     	;# 
   714  018F                     	;# 
   715  0190                     	;# 
   716  0191                     	;# 
   717  0192                     	;# 
   718  0196                     	;# 
   719  0197                     	;# 
   720  0198                     	;# 
   721  0199                     	;# 
   722  019A                     	;# 
   723  019B                     	;# 
   724  019C                     	;# 
   725  020C                     	;# 
   726  020C                     	;# 
   727  020D                     	;# 
   728  020E                     	;# 
   729  020F                     	;# 
   730  020F                     	;# 
   731  0210                     	;# 
   732  0210                     	;# 
   733  0211                     	;# 
   734  0211                     	;# 
   735  0212                     	;# 
   736  0212                     	;# 
   737  0213                     	;# 
   738  0214                     	;# 
   739  0215                     	;# 
   740  0215                     	;# 
   741  0216                     	;# 
   742  0216                     	;# 
   743  0217                     	;# 
   744  0217                     	;# 
   745  0218                     	;# 
   746  0218                     	;# 
   747  0219                     	;# 
   748  021A                     	;# 
   749  021B                     	;# 
   750  021B                     	;# 
   751  021C                     	;# 
   752  021C                     	;# 
   753  021D                     	;# 
   754  021D                     	;# 
   755  021E                     	;# 
   756  021F                     	;# 
   757  028C                     	;# 
   758  028C                     	;# 
   759  028D                     	;# 
   760  028D                     	;# 
   761  028E                     	;# 
   762  028F                     	;# 
   763  0290                     	;# 
   764  0290                     	;# 
   765  0291                     	;# 
   766  0292                     	;# 
   767  0292                     	;# 
   768  0293                     	;# 
   769  0293                     	;# 
   770  0294                     	;# 
   771  0295                     	;# 
   772  0296                     	;# 
   773  0296                     	;# 
   774  0297                     	;# 
   775  0298                     	;# 
   776  0298                     	;# 
   777  0299                     	;# 
   778  0299                     	;# 
   779  029A                     	;# 
   780  029B                     	;# 
   781  029C                     	;# 
   782  029C                     	;# 
   783  029D                     	;# 
   784  030C                     	;# 
   785  030C                     	;# 
   786  030D                     	;# 
   787  030E                     	;# 
   788  030F                     	;# 
   789  0310                     	;# 
   790  0310                     	;# 
   791  0311                     	;# 
   792  0312                     	;# 
   793  0313                     	;# 
   794  0314                     	;# 
   795  0314                     	;# 
   796  0315                     	;# 
   797  0316                     	;# 
   798  0317                     	;# 
   799  0318                     	;# 
   800  0318                     	;# 
   801  0319                     	;# 
   802  031A                     	;# 
   803  031B                     	;# 
   804  031C                     	;# 
   805  031C                     	;# 
   806  031D                     	;# 
   807  031E                     	;# 
   808  031F                     	;# 
   809  038C                     	;# 
   810  038C                     	;# 
   811  038D                     	;# 
   812  038E                     	;# 
   813  0390                     	;# 
   814  0390                     	;# 
   815  0391                     	;# 
   816  0392                     	;# 
   817  040C                     	;# 
   818  040D                     	;# 
   819  040E                     	;# 
   820  040F                     	;# 
   821  0410                     	;# 
   822  0411                     	;# 
   823  0416                     	;# 
   824  0416                     	;# 
   825  0417                     	;# 
   826  0418                     	;# 
   827  0418                     	;# 
   828  0419                     	;# 
   829  041A                     	;# 
   830  041A                     	;# 
   831  041B                     	;# 
   832  041C                     	;# 
   833  041C                     	;# 
   834  041D                     	;# 
   835  041E                     	;# 
   836  041F                     	;# 
   837  048C                     	;# 
   838  048C                     	;# 
   839  048D                     	;# 
   840  048E                     	;# 
   841  048F                     	;# 
   842  048F                     	;# 
   843  0490                     	;# 
   844  0491                     	;# 
   845  0492                     	;# 
   846  0492                     	;# 
   847  0493                     	;# 
   848  0494                     	;# 
   849  0495                     	;# 
   850  0495                     	;# 
   851  0496                     	;# 
   852  0497                     	;# 
   853  0498                     	;# 
   854  0499                     	;# 
   855  049A                     	;# 
   856  049B                     	;# 
   857  049C                     	;# 
   858  049D                     	;# 
   859  050C                     	;# 
   860  050C                     	;# 
   861  050D                     	;# 
   862  050E                     	;# 
   863  050F                     	;# 
   864  050F                     	;# 
   865  0510                     	;# 
   866  0511                     	;# 
   867  0512                     	;# 
   868  0512                     	;# 
   869  0513                     	;# 
   870  0514                     	;# 
   871  0515                     	;# 
   872  0515                     	;# 
   873  0516                     	;# 
   874  0517                     	;# 
   875  0518                     	;# 
   876  0519                     	;# 
   877  051A                     	;# 
   878  051B                     	;# 
   879  051C                     	;# 
   880  051D                     	;# 
   881  058C                     	;# 
   882  058C                     	;# 
   883  058D                     	;# 
   884  058E                     	;# 
   885  058F                     	;# 
   886  058F                     	;# 
   887  0590                     	;# 
   888  0591                     	;# 
   889  0592                     	;# 
   890  0593                     	;# 
   891  060C                     	;# 
   892  060D                     	;# 
   893  060E                     	;# 
   894  060F                     	;# 
   895  0610                     	;# 
   896  0611                     	;# 
   897  0612                     	;# 
   898  0613                     	;# 
   899  0614                     	;# 
   900  0616                     	;# 
   901  0617                     	;# 
   902  0618                     	;# 
   903  0619                     	;# 
   904  061A                     	;# 
   905  061B                     	;# 
   906  061C                     	;# 
   907  061D                     	;# 
   908  061E                     	;# 
   909  068C                     	;# 
   910  068D                     	;# 
   911  068E                     	;# 
   912  068F                     	;# 
   913  0690                     	;# 
   914  0691                     	;# 
   915  0692                     	;# 
   916  0693                     	;# 
   917  0694                     	;# 
   918  070C                     	;# 
   919  070D                     	;# 
   920  070E                     	;# 
   921  070F                     	;# 
   922  0710                     	;# 
   923  0711                     	;# 
   924  0712                     	;# 
   925  0713                     	;# 
   926  0714                     	;# 
   927  0716                     	;# 
   928  0717                     	;# 
   929  0718                     	;# 
   930  0719                     	;# 
   931  071A                     	;# 
   932  071B                     	;# 
   933  071C                     	;# 
   934  071D                     	;# 
   935  071E                     	;# 
   936  0796                     	;# 
   937  0797                     	;# 
   938  0798                     	;# 
   939  0799                     	;# 
   940  079A                     	;# 
   941  079B                     	;# 
   942  080C                     	;# 
   943  080D                     	;# 
   944  080E                     	;# 
   945  080F                     	;# 
   946  0810                     	;# 
   947  0811                     	;# 
   948  0812                     	;# 
   949  0813                     	;# 
   950  0814                     	;# 
   951  081A                     	;# 
   952  081B                     	;# 
   953  081C                     	;# 
   954  081D                     	;# 
   955  081E                     	;# 
   956  081F                     	;# 
   957  088C                     	;# 
   958  088D                     	;# 
   959  088E                     	;# 
   960  088F                     	;# 
   961  0890                     	;# 
   962  0891                     	;# 
   963  0892                     	;# 
   964  0893                     	;# 
   965  0895                     	;# 
   966  0896                     	;# 
   967  0897                     	;# 
   968  0898                     	;# 
   969  0899                     	;# 
   970  089A                     	;# 
   971  089B                     	;# 
   972  090C                     	;# 
   973  090E                     	;# 
   974  090F                     	;# 
   975  091F                     	;# 
   976  091F                     	;# 
   977  098F                     	;# 
   978  098F                     	;# 
   979  0990                     	;# 
   980  0991                     	;# 
   981  0992                     	;# 
   982  0993                     	;# 
   983  0994                     	;# 
   984  0995                     	;# 
   985  0996                     	;# 
   986  0997                     	;# 
   987  0E0F                     	;# 
   988  0E10                     	;# 
   989  0E11                     	;# 
   990  0E12                     	;# 
   991  0E13                     	;# 
   992  0E14                     	;# 
   993  0E15                     	;# 
   994  0E16                     	;# 
   995  0E17                     	;# 
   996  0E18                     	;# 
   997  0E19                     	;# 
   998  0E1A                     	;# 
   999  0E1B                     	;# 
  1000  0E1C                     	;# 
  1001  0E1D                     	;# 
  1002  0E1E                     	;# 
  1003  0E1F                     	;# 
  1004  0E20                     	;# 
  1005  0E21                     	;# 
  1006  0E22                     	;# 
  1007  0E23                     	;# 
  1008  0E24                     	;# 
  1009  0E25                     	;# 
  1010  0E26                     	;# 
  1011  0E27                     	;# 
  1012  0E28                     	;# 
  1013  0E29                     	;# 
  1014  0E2A                     	;# 
  1015  0E2B                     	;# 
  1016  0E2C                     	;# 
  1017  0E2D                     	;# 
  1018  0E2E                     	;# 
  1019  0E2F                     	;# 
  1020  0E30                     	;# 
  1021  0E31                     	;# 
  1022  0E32                     	;# 
  1023  0E33                     	;# 
  1024  0E34                     	;# 
  1025  0E35                     	;# 
  1026  0E36                     	;# 
  1027  0E37                     	;# 
  1028  0E8F                     	;# 
  1029  0E90                     	;# 
  1030  0E91                     	;# 
  1031  0E92                     	;# 
  1032  0E93                     	;# 
  1033  0E94                     	;# 
  1034  0E95                     	;# 
  1035  0E96                     	;# 
  1036  0E97                     	;# 
  1037  0E9C                     	;# 
  1038  0E9D                     	;# 
  1039  0E9E                     	;# 
  1040  0EA1                     	;# 
  1041  0EA2                     	;# 
  1042  0EA3                     	;# 
  1043  0EA4                     	;# 
  1044  0EA5                     	;# 
  1045  0EA9                     	;# 
  1046  0EAA                     	;# 
  1047  0EAB                     	;# 
  1048  0EAC                     	;# 
  1049  0EB1                     	;# 
  1050  0EB2                     	;# 
  1051  0EB3                     	;# 
  1052  0EB8                     	;# 
  1053  0EB9                     	;# 
  1054  0EBA                     	;# 
  1055  0EBB                     	;# 
  1056  0EBC                     	;# 
  1057  0EBD                     	;# 
  1058  0EBE                     	;# 
  1059  0EC3                     	;# 
  1060  0EC5                     	;# 
  1061  0EC6                     	;# 
  1062  0EC7                     	;# 
  1063  0EC8                     	;# 
  1064  0EC9                     	;# 
  1065  0ECA                     	;# 
  1066  0ECB                     	;# 
  1067  0ECC                     	;# 
  1068  0F10                     	;# 
  1069  0F11                     	;# 
  1070  0F12                     	;# 
  1071  0F13                     	;# 
  1072  0F14                     	;# 
  1073  0F15                     	;# 
  1074  0F16                     	;# 
  1075  0F17                     	;# 
  1076  0F18                     	;# 
  1077  0F19                     	;# 
  1078  0F1A                     	;# 
  1079  0F1B                     	;# 
  1080  0F1C                     	;# 
  1081  0F1D                     	;# 
  1082  0F1E                     	;# 
  1083  0F1F                     	;# 
  1084  0F20                     	;# 
  1085  0F21                     	;# 
  1086  0F22                     	;# 
  1087  0F23                     	;# 
  1088  0F24                     	;# 
  1089  0F25                     	;# 
  1090  0F26                     	;# 
  1091  0F27                     	;# 
  1092  0F38                     	;# 
  1093  0F39                     	;# 
  1094  0F3A                     	;# 
  1095  0F3B                     	;# 
  1096  0F3C                     	;# 
  1097  0F3D                     	;# 
  1098  0F3E                     	;# 
  1099  0F3F                     	;# 
  1100  0F40                     	;# 
  1101  0F41                     	;# 
  1102  0F43                     	;# 
  1103  0F44                     	;# 
  1104  0F45                     	;# 
  1105  0F46                     	;# 
  1106  0F47                     	;# 
  1107  0F48                     	;# 
  1108  0F49                     	;# 
  1109  0F4A                     	;# 
  1110  0F4B                     	;# 
  1111  0F4C                     	;# 
  1112  0F4E                     	;# 
  1113  0F4F                     	;# 
  1114  0F50                     	;# 
  1115  0F51                     	;# 
  1116  0F52                     	;# 
  1117  0F53                     	;# 
  1118  0F54                     	;# 
  1119  0F55                     	;# 
  1120  0F56                     	;# 
  1121  0F57                     	;# 
  1122  0F65                     	;# 
  1123  0F68                     	;# 
  1124  0F69                     	;# 
  1125  0F6A                     	;# 
  1126  0F6B                     	;# 
  1127  0FE4                     	;# 
  1128  0FE5                     	;# 
  1129  0FE6                     	;# 
  1130  0FE7                     	;# 
  1131  0FE8                     	;# 
  1132  0FE9                     	;# 
  1133  0FEA                     	;# 
  1134  0FEB                     	;# 
  1135  0FED                     	;# 
  1136  0FEE                     	;# 
  1137  0FEF                     	;# 
  1138  0000                     	;# 
  1139  0001                     	;# 
  1140  0002                     	;# 
  1141  0003                     	;# 
  1142  0004                     	;# 
  1143  0005                     	;# 
  1144  0006                     	;# 
  1145  0007                     	;# 
  1146  0008                     	;# 
  1147  0009                     	;# 
  1148  000A                     	;# 
  1149  000B                     	;# 
  1150  000C                     	;# 
  1151  000D                     	;# 
  1152  000E                     	;# 
  1153  0010                     	;# 
  1154  0011                     	;# 
  1155  0012                     	;# 
  1156  0013                     	;# 
  1157  0016                     	;# 
  1158  0017                     	;# 
  1159  0018                     	;# 
  1160  001C                     	;# 
  1161  001C                     	;# 
  1162  001D                     	;# 
  1163  001D                     	;# 
  1164  001E                     	;# 
  1165  001F                     	;# 
  1166  008C                     	;# 
  1167  008C                     	;# 
  1168  008D                     	;# 
  1169  008E                     	;# 
  1170  008E                     	;# 
  1171  008F                     	;# 
  1172  0090                     	;# 
  1173  0090                     	;# 
  1174  0091                     	;# 
  1175  0093                     	;# 
  1176  0094                     	;# 
  1177  0095                     	;# 
  1178  0096                     	;# 
  1179  0097                     	;# 
  1180  0098                     	;# 
  1181  0099                     	;# 
  1182  009A                     	;# 
  1183  009B                     	;# 
  1184  009C                     	;# 
  1185  009D                     	;# 
  1186  009E                     	;# 
  1187  010C                     	;# 
  1188  010D                     	;# 
  1189  010E                     	;# 
  1190  010E                     	;# 
  1191  010F                     	;# 
  1192  0110                     	;# 
  1193  0110                     	;# 
  1194  0111                     	;# 
  1195  0112                     	;# 
  1196  0112                     	;# 
  1197  0113                     	;# 
  1198  0114                     	;# 
  1199  0114                     	;# 
  1200  0115                     	;# 
  1201  0116                     	;# 
  1202  0116                     	;# 
  1203  0117                     	;# 
  1204  0119                     	;# 
  1205  0119                     	;# 
  1206  0119                     	;# 
  1207  011A                     	;# 
  1208  011A                     	;# 
  1209  011A                     	;# 
  1210  011B                     	;# 
  1211  011B                     	;# 
  1212  011B                     	;# 
  1213  011B                     	;# 
  1214  011B                     	;# 
  1215  011C                     	;# 
  1216  011C                     	;# 
  1217  011C                     	;# 
  1218  011D                     	;# 
  1219  011D                     	;# 
  1220  011D                     	;# 
  1221  011E                     	;# 
  1222  011E                     	;# 
  1223  011E                     	;# 
  1224  011F                     	;# 
  1225  011F                     	;# 
  1226  011F                     	;# 
  1227  011F                     	;# 
  1228  011F                     	;# 
  1229  018C                     	;# 
  1230  018D                     	;# 
  1231  018E                     	;# 
  1232  018F                     	;# 
  1233  0190                     	;# 
  1234  0191                     	;# 
  1235  0192                     	;# 
  1236  0196                     	;# 
  1237  0197                     	;# 
  1238  0198                     	;# 
  1239  0199                     	;# 
  1240  019A                     	;# 
  1241  019B                     	;# 
  1242  019C                     	;# 
  1243  020C                     	;# 
  1244  020C                     	;# 
  1245  020D                     	;# 
  1246  020E                     	;# 
  1247  020F                     	;# 
  1248  020F                     	;# 
  1249  0210                     	;# 
  1250  0210                     	;# 
  1251  0211                     	;# 
  1252  0211                     	;# 
  1253  0212                     	;# 
  1254  0212                     	;# 
  1255  0213                     	;# 
  1256  0214                     	;# 
  1257  0215                     	;# 
  1258  0215                     	;# 
  1259  0216                     	;# 
  1260  0216                     	;# 
  1261  0217                     	;# 
  1262  0217                     	;# 
  1263  0218                     	;# 
  1264  0218                     	;# 
  1265  0219                     	;# 
  1266  021A                     	;# 
  1267  021B                     	;# 
  1268  021B                     	;# 
  1269  021C                     	;# 
  1270  021C                     	;# 
  1271  021D                     	;# 
  1272  021D                     	;# 
  1273  021E                     	;# 
  1274  021F                     	;# 
  1275  028C                     	;# 
  1276  028C                     	;# 
  1277  028D                     	;# 
  1278  028D                     	;# 
  1279  028E                     	;# 
  1280  028F                     	;# 
  1281  0290                     	;# 
  1282  0290                     	;# 
  1283  0291                     	;# 
  1284  0292                     	;# 
  1285  0292                     	;# 
  1286  0293                     	;# 
  1287  0293                     	;# 
  1288  0294                     	;# 
  1289  0295                     	;# 
  1290  0296                     	;# 
  1291  0296                     	;# 
  1292  0297                     	;# 
  1293  0298                     	;# 
  1294  0298                     	;# 
  1295  0299                     	;# 
  1296  0299                     	;# 
  1297  029A                     	;# 
  1298  029B                     	;# 
  1299  029C                     	;# 
  1300  029C                     	;# 
  1301  029D                     	;# 
  1302  030C                     	;# 
  1303  030C                     	;# 
  1304  030D                     	;# 
  1305  030E                     	;# 
  1306  030F                     	;# 
  1307  0310                     	;# 
  1308  0310                     	;# 
  1309  0311                     	;# 
  1310  0312                     	;# 
  1311  0313                     	;# 
  1312  0314                     	;# 
  1313  0314                     	;# 
  1314  0315                     	;# 
  1315  0316                     	;# 
  1316  0317                     	;# 
  1317  0318                     	;# 
  1318  0318                     	;# 
  1319  0319                     	;# 
  1320  031A                     	;# 
  1321  031B                     	;# 
  1322  031C                     	;# 
  1323  031C                     	;# 
  1324  031D                     	;# 
  1325  031E                     	;# 
  1326  031F                     	;# 
  1327  038C                     	;# 
  1328  038C                     	;# 
  1329  038D                     	;# 
  1330  038E                     	;# 
  1331  0390                     	;# 
  1332  0390                     	;# 
  1333  0391                     	;# 
  1334  0392                     	;# 
  1335  040C                     	;# 
  1336  040D                     	;# 
  1337  040E                     	;# 
  1338  040F                     	;# 
  1339  0410                     	;# 
  1340  0411                     	;# 
  1341  0416                     	;# 
  1342  0416                     	;# 
  1343  0417                     	;# 
  1344  0418                     	;# 
  1345  0418                     	;# 
  1346  0419                     	;# 
  1347  041A                     	;# 
  1348  041A                     	;# 
  1349  041B                     	;# 
  1350  041C                     	;# 
  1351  041C                     	;# 
  1352  041D                     	;# 
  1353  041E                     	;# 
  1354  041F                     	;# 
  1355  048C                     	;# 
  1356  048C                     	;# 
  1357  048D                     	;# 
  1358  048E                     	;# 
  1359  048F                     	;# 
  1360  048F                     	;# 
  1361  0490                     	;# 
  1362  0491                     	;# 
  1363  0492                     	;# 
  1364  0492                     	;# 
  1365  0493                     	;# 
  1366  0494                     	;# 
  1367  0495                     	;# 
  1368  0495                     	;# 
  1369  0496                     	;# 
  1370  0497                     	;# 
  1371  0498                     	;# 
  1372  0499                     	;# 
  1373  049A                     	;# 
  1374  049B                     	;# 
  1375  049C                     	;# 
  1376  049D                     	;# 
  1377  050C                     	;# 
  1378  050C                     	;# 
  1379  050D                     	;# 
  1380  050E                     	;# 
  1381  050F                     	;# 
  1382  050F                     	;# 
  1383  0510                     	;# 
  1384  0511                     	;# 
  1385  0512                     	;# 
  1386  0512                     	;# 
  1387  0513                     	;# 
  1388  0514                     	;# 
  1389  0515                     	;# 
  1390  0515                     	;# 
  1391  0516                     	;# 
  1392  0517                     	;# 
  1393  0518                     	;# 
  1394  0519                     	;# 
  1395  051A                     	;# 
  1396  051B                     	;# 
  1397  051C                     	;# 
  1398  051D                     	;# 
  1399  058C                     	;# 
  1400  058C                     	;# 
  1401  058D                     	;# 
  1402  058E                     	;# 
  1403  058F                     	;# 
  1404  058F                     	;# 
  1405  0590                     	;# 
  1406  0591                     	;# 
  1407  0592                     	;# 
  1408  0593                     	;# 
  1409  060C                     	;# 
  1410  060D                     	;# 
  1411  060E                     	;# 
  1412  060F                     	;# 
  1413  0610                     	;# 
  1414  0611                     	;# 
  1415  0612                     	;# 
  1416  0613                     	;# 
  1417  0614                     	;# 
  1418  0616                     	;# 
  1419  0617                     	;# 
  1420  0618                     	;# 
  1421  0619                     	;# 
  1422  061A                     	;# 
  1423  061B                     	;# 
  1424  061C                     	;# 
  1425  061D                     	;# 
  1426  061E                     	;# 
  1427  068C                     	;# 
  1428  068D                     	;# 
  1429  068E                     	;# 
  1430  068F                     	;# 
  1431  0690                     	;# 
  1432  0691                     	;# 
  1433  0692                     	;# 
  1434  0693                     	;# 
  1435  0694                     	;# 
  1436  070C                     	;# 
  1437  070D                     	;# 
  1438  070E                     	;# 
  1439  070F                     	;# 
  1440  0710                     	;# 
  1441  0711                     	;# 
  1442  0712                     	;# 
  1443  0713                     	;# 
  1444  0714                     	;# 
  1445  0716                     	;# 
  1446  0717                     	;# 
  1447  0718                     	;# 
  1448  0719                     	;# 
  1449  071A                     	;# 
  1450  071B                     	;# 
  1451  071C                     	;# 
  1452  071D                     	;# 
  1453  071E                     	;# 
  1454  0796                     	;# 
  1455  0797                     	;# 
  1456  0798                     	;# 
  1457  0799                     	;# 
  1458  079A                     	;# 
  1459  079B                     	;# 
  1460  080C                     	;# 
  1461  080D                     	;# 
  1462  080E                     	;# 
  1463  080F                     	;# 
  1464  0810                     	;# 
  1465  0811                     	;# 
  1466  0812                     	;# 
  1467  0813                     	;# 
  1468  0814                     	;# 
  1469  081A                     	;# 
  1470  081B                     	;# 
  1471  081C                     	;# 
  1472  081D                     	;# 
  1473  081E                     	;# 
  1474  081F                     	;# 
  1475  088C                     	;# 
  1476  088D                     	;# 
  1477  088E                     	;# 
  1478  088F                     	;# 
  1479  0890                     	;# 
  1480  0891                     	;# 
  1481  0892                     	;# 
  1482  0893                     	;# 
  1483  0895                     	;# 
  1484  0896                     	;# 
  1485  0897                     	;# 
  1486  0898                     	;# 
  1487  0899                     	;# 
  1488  089A                     	;# 
  1489  089B                     	;# 
  1490  090C                     	;# 
  1491  090E                     	;# 
  1492  090F                     	;# 
  1493  091F                     	;# 
  1494  091F                     	;# 
  1495  098F                     	;# 
  1496  098F                     	;# 
  1497  0990                     	;# 
  1498  0991                     	;# 
  1499  0992                     	;# 
  1500  0993                     	;# 
  1501  0994                     	;# 
  1502  0995                     	;# 
  1503  0996                     	;# 
  1504  0997                     	;# 
  1505  0E0F                     	;# 
  1506  0E10                     	;# 
  1507  0E11                     	;# 
  1508  0E12                     	;# 
  1509  0E13                     	;# 
  1510  0E14                     	;# 
  1511  0E15                     	;# 
  1512  0E16                     	;# 
  1513  0E17                     	;# 
  1514  0E18                     	;# 
  1515  0E19                     	;# 
  1516  0E1A                     	;# 
  1517  0E1B                     	;# 
  1518  0E1C                     	;# 
  1519  0E1D                     	;# 
  1520  0E1E                     	;# 
  1521  0E1F                     	;# 
  1522  0E20                     	;# 
  1523  0E21                     	;# 
  1524  0E22                     	;# 
  1525  0E23                     	;# 
  1526  0E24                     	;# 
  1527  0E25                     	;# 
  1528  0E26                     	;# 
  1529  0E27                     	;# 
  1530  0E28                     	;# 
  1531  0E29                     	;# 
  1532  0E2A                     	;# 
  1533  0E2B                     	;# 
  1534  0E2C                     	;# 
  1535  0E2D                     	;# 
  1536  0E2E                     	;# 
  1537  0E2F                     	;# 
  1538  0E30                     	;# 
  1539  0E31                     	;# 
  1540  0E32                     	;# 
  1541  0E33                     	;# 
  1542  0E34                     	;# 
  1543  0E35                     	;# 
  1544  0E36                     	;# 
  1545  0E37                     	;# 
  1546  0E8F                     	;# 
  1547  0E90                     	;# 
  1548  0E91                     	;# 
  1549  0E92                     	;# 
  1550  0E93                     	;# 
  1551  0E94                     	;# 
  1552  0E95                     	;# 
  1553  0E96                     	;# 
  1554  0E97                     	;# 
  1555  0E9C                     	;# 
  1556  0E9D                     	;# 
  1557  0E9E                     	;# 
  1558  0EA1                     	;# 
  1559  0EA2                     	;# 
  1560  0EA3                     	;# 
  1561  0EA4                     	;# 
  1562  0EA5                     	;# 
  1563  0EA9                     	;# 
  1564  0EAA                     	;# 
  1565  0EAB                     	;# 
  1566  0EAC                     	;# 
  1567  0EB1                     	;# 
  1568  0EB2                     	;# 
  1569  0EB3                     	;# 
  1570  0EB8                     	;# 
  1571  0EB9                     	;# 
  1572  0EBA                     	;# 
  1573  0EBB                     	;# 
  1574  0EBC                     	;# 
  1575  0EBD                     	;# 
  1576  0EBE                     	;# 
  1577  0EC3                     	;# 
  1578  0EC5                     	;# 
  1579  0EC6                     	;# 
  1580  0EC7                     	;# 
  1581  0EC8                     	;# 
  1582  0EC9                     	;# 
  1583  0ECA                     	;# 
  1584  0ECB                     	;# 
  1585  0ECC                     	;# 
  1586  0F10                     	;# 
  1587  0F11                     	;# 
  1588  0F12                     	;# 
  1589  0F13                     	;# 
  1590  0F14                     	;# 
  1591  0F15                     	;# 
  1592  0F16                     	;# 
  1593  0F17                     	;# 
  1594  0F18                     	;# 
  1595  0F19                     	;# 
  1596  0F1A                     	;# 
  1597  0F1B                     	;# 
  1598  0F1C                     	;# 
  1599  0F1D                     	;# 
  1600  0F1E                     	;# 
  1601  0F1F                     	;# 
  1602  0F20                     	;# 
  1603  0F21                     	;# 
  1604  0F22                     	;# 
  1605  0F23                     	;# 
  1606  0F24                     	;# 
  1607  0F25                     	;# 
  1608  0F26                     	;# 
  1609  0F27                     	;# 
  1610  0F38                     	;# 
  1611  0F39                     	;# 
  1612  0F3A                     	;# 
  1613  0F3B                     	;# 
  1614  0F3C                     	;# 
  1615  0F3D                     	;# 
  1616  0F3E                     	;# 
  1617  0F3F                     	;# 
  1618  0F40                     	;# 
  1619  0F41                     	;# 
  1620  0F43                     	;# 
  1621  0F44                     	;# 
  1622  0F45                     	;# 
  1623  0F46                     	;# 
  1624  0F47                     	;# 
  1625  0F48                     	;# 
  1626  0F49                     	;# 
  1627  0F4A                     	;# 
  1628  0F4B                     	;# 
  1629  0F4C                     	;# 
  1630  0F4E                     	;# 
  1631  0F4F                     	;# 
  1632  0F50                     	;# 
  1633  0F51                     	;# 
  1634  0F52                     	;# 
  1635  0F53                     	;# 
  1636  0F54                     	;# 
  1637  0F55                     	;# 
  1638  0F56                     	;# 
  1639  0F57                     	;# 
  1640  0F65                     	;# 
  1641  0F68                     	;# 
  1642  0F69                     	;# 
  1643  0F6A                     	;# 
  1644  0F6B                     	;# 
  1645  0FE4                     	;# 
  1646  0FE5                     	;# 
  1647  0FE6                     	;# 
  1648  0FE7                     	;# 
  1649  0FE8                     	;# 
  1650  0FE9                     	;# 
  1651  0FEA                     	;# 
  1652  0FEB                     	;# 
  1653  0FED                     	;# 
  1654  0FEE                     	;# 
  1655  0FEF                     	;# 
  1656  0000                     	;# 
  1657  0001                     	;# 
  1658  0002                     	;# 
  1659  0003                     	;# 
  1660  0004                     	;# 
  1661  0005                     	;# 
  1662  0006                     	;# 
  1663  0007                     	;# 
  1664  0008                     	;# 
  1665  0009                     	;# 
  1666  000A                     	;# 
  1667  000B                     	;# 
  1668  000C                     	;# 
  1669  000D                     	;# 
  1670  000E                     	;# 
  1671  0010                     	;# 
  1672  0011                     	;# 
  1673  0012                     	;# 
  1674  0013                     	;# 
  1675  0016                     	;# 
  1676  0017                     	;# 
  1677  0018                     	;# 
  1678  001C                     	;# 
  1679  001C                     	;# 
  1680  001D                     	;# 
  1681  001D                     	;# 
  1682  001E                     	;# 
  1683  001F                     	;# 
  1684  008C                     	;# 
  1685  008C                     	;# 
  1686  008D                     	;# 
  1687  008E                     	;# 
  1688  008E                     	;# 
  1689  008F                     	;# 
  1690  0090                     	;# 
  1691  0090                     	;# 
  1692  0091                     	;# 
  1693  0093                     	;# 
  1694  0094                     	;# 
  1695  0095                     	;# 
  1696  0096                     	;# 
  1697  0097                     	;# 
  1698  0098                     	;# 
  1699  0099                     	;# 
  1700  009A                     	;# 
  1701  009B                     	;# 
  1702  009C                     	;# 
  1703  009D                     	;# 
  1704  009E                     	;# 
  1705  010C                     	;# 
  1706  010D                     	;# 
  1707  010E                     	;# 
  1708  010E                     	;# 
  1709  010F                     	;# 
  1710  0110                     	;# 
  1711  0110                     	;# 
  1712  0111                     	;# 
  1713  0112                     	;# 
  1714  0112                     	;# 
  1715  0113                     	;# 
  1716  0114                     	;# 
  1717  0114                     	;# 
  1718  0115                     	;# 
  1719  0116                     	;# 
  1720  0116                     	;# 
  1721  0117                     	;# 
  1722  0119                     	;# 
  1723  0119                     	;# 
  1724  0119                     	;# 
  1725  011A                     	;# 
  1726  011A                     	;# 
  1727  011A                     	;# 
  1728  011B                     	;# 
  1729  011B                     	;# 
  1730  011B                     	;# 
  1731  011B                     	;# 
  1732  011B                     	;# 
  1733  011C                     	;# 
  1734  011C                     	;# 
  1735  011C                     	;# 
  1736  011D                     	;# 
  1737  011D                     	;# 
  1738  011D                     	;# 
  1739  011E                     	;# 
  1740  011E                     	;# 
  1741  011E                     	;# 
  1742  011F                     	;# 
  1743  011F                     	;# 
  1744  011F                     	;# 
  1745  011F                     	;# 
  1746  011F                     	;# 
  1747  018C                     	;# 
  1748  018D                     	;# 
  1749  018E                     	;# 
  1750  018F                     	;# 
  1751  0190                     	;# 
  1752  0191                     	;# 
  1753  0192                     	;# 
  1754  0196                     	;# 
  1755  0197                     	;# 
  1756  0198                     	;# 
  1757  0199                     	;# 
  1758  019A                     	;# 
  1759  019B                     	;# 
  1760  019C                     	;# 
  1761  020C                     	;# 
  1762  020C                     	;# 
  1763  020D                     	;# 
  1764  020E                     	;# 
  1765  020F                     	;# 
  1766  020F                     	;# 
  1767  0210                     	;# 
  1768  0210                     	;# 
  1769  0211                     	;# 
  1770  0211                     	;# 
  1771  0212                     	;# 
  1772  0212                     	;# 
  1773  0213                     	;# 
  1774  0214                     	;# 
  1775  0215                     	;# 
  1776  0215                     	;# 
  1777  0216                     	;# 
  1778  0216                     	;# 
  1779  0217                     	;# 
  1780  0217                     	;# 
  1781  0218                     	;# 
  1782  0218                     	;# 
  1783  0219                     	;# 
  1784  021A                     	;# 
  1785  021B                     	;# 
  1786  021B                     	;# 
  1787  021C                     	;# 
  1788  021C                     	;# 
  1789  021D                     	;# 
  1790  021D                     	;# 
  1791  021E                     	;# 
  1792  021F                     	;# 
  1793  028C                     	;# 
  1794  028C                     	;# 
  1795  028D                     	;# 
  1796  028D                     	;# 
  1797  028E                     	;# 
  1798  028F                     	;# 
  1799  0290                     	;# 
  1800  0290                     	;# 
  1801  0291                     	;# 
  1802  0292                     	;# 
  1803  0292                     	;# 
  1804  0293                     	;# 
  1805  0293                     	;# 
  1806  0294                     	;# 
  1807  0295                     	;# 
  1808  0296                     	;# 
  1809  0296                     	;# 
  1810  0297                     	;# 
  1811  0298                     	;# 
  1812  0298                     	;# 
  1813  0299                     	;# 
  1814  0299                     	;# 
  1815  029A                     	;# 
  1816  029B                     	;# 
  1817  029C                     	;# 
  1818  029C                     	;# 
  1819  029D                     	;# 
  1820  030C                     	;# 
  1821  030C                     	;# 
  1822  030D                     	;# 
  1823  030E                     	;# 
  1824  030F                     	;# 
  1825  0310                     	;# 
  1826  0310                     	;# 
  1827  0311                     	;# 
  1828  0312                     	;# 
  1829  0313                     	;# 
  1830  0314                     	;# 
  1831  0314                     	;# 
  1832  0315                     	;# 
  1833  0316                     	;# 
  1834  0317                     	;# 
  1835  0318                     	;# 
  1836  0318                     	;# 
  1837  0319                     	;# 
  1838  031A                     	;# 
  1839  031B                     	;# 
  1840  031C                     	;# 
  1841  031C                     	;# 
  1842  031D                     	;# 
  1843  031E                     	;# 
  1844  031F                     	;# 
  1845  038C                     	;# 
  1846  038C                     	;# 
  1847  038D                     	;# 
  1848  038E                     	;# 
  1849  0390                     	;# 
  1850  0390                     	;# 
  1851  0391                     	;# 
  1852  0392                     	;# 
  1853  040C                     	;# 
  1854  040D                     	;# 
  1855  040E                     	;# 
  1856  040F                     	;# 
  1857  0410                     	;# 
  1858  0411                     	;# 
  1859  0416                     	;# 
  1860  0416                     	;# 
  1861  0417                     	;# 
  1862  0418                     	;# 
  1863  0418                     	;# 
  1864  0419                     	;# 
  1865  041A                     	;# 
  1866  041A                     	;# 
  1867  041B                     	;# 
  1868  041C                     	;# 
  1869  041C                     	;# 
  1870  041D                     	;# 
  1871  041E                     	;# 
  1872  041F                     	;# 
  1873  048C                     	;# 
  1874  048C                     	;# 
  1875  048D                     	;# 
  1876  048E                     	;# 
  1877  048F                     	;# 
  1878  048F                     	;# 
  1879  0490                     	;# 
  1880  0491                     	;# 
  1881  0492                     	;# 
  1882  0492                     	;# 
  1883  0493                     	;# 
  1884  0494                     	;# 
  1885  0495                     	;# 
  1886  0495                     	;# 
  1887  0496                     	;# 
  1888  0497                     	;# 
  1889  0498                     	;# 
  1890  0499                     	;# 
  1891  049A                     	;# 
  1892  049B                     	;# 
  1893  049C                     	;# 
  1894  049D                     	;# 
  1895  050C                     	;# 
  1896  050C                     	;# 
  1897  050D                     	;# 
  1898  050E                     	;# 
  1899  050F                     	;# 
  1900  050F                     	;# 
  1901  0510                     	;# 
  1902  0511                     	;# 
  1903  0512                     	;# 
  1904  0512                     	;# 
  1905  0513                     	;# 
  1906  0514                     	;# 
  1907  0515                     	;# 
  1908  0515                     	;# 
  1909  0516                     	;# 
  1910  0517                     	;# 
  1911  0518                     	;# 
  1912  0519                     	;# 
  1913  051A                     	;# 
  1914  051B                     	;# 
  1915  051C                     	;# 
  1916  051D                     	;# 
  1917  058C                     	;# 
  1918  058C                     	;# 
  1919  058D                     	;# 
  1920  058E                     	;# 
  1921  058F                     	;# 
  1922  058F                     	;# 
  1923  0590                     	;# 
  1924  0591                     	;# 
  1925  0592                     	;# 
  1926  0593                     	;# 
  1927  060C                     	;# 
  1928  060D                     	;# 
  1929  060E                     	;# 
  1930  060F                     	;# 
  1931  0610                     	;# 
  1932  0611                     	;# 
  1933  0612                     	;# 
  1934  0613                     	;# 
  1935  0614                     	;# 
  1936  0616                     	;# 
  1937  0617                     	;# 
  1938  0618                     	;# 
  1939  0619                     	;# 
  1940  061A                     	;# 
  1941  061B                     	;# 
  1942  061C                     	;# 
  1943  061D                     	;# 
  1944  061E                     	;# 
  1945  068C                     	;# 
  1946  068D                     	;# 
  1947  068E                     	;# 
  1948  068F                     	;# 
  1949  0690                     	;# 
  1950  0691                     	;# 
  1951  0692                     	;# 
  1952  0693                     	;# 
  1953  0694                     	;# 
  1954  070C                     	;# 
  1955  070D                     	;# 
  1956  070E                     	;# 
  1957  070F                     	;# 
  1958  0710                     	;# 
  1959  0711                     	;# 
  1960  0712                     	;# 
  1961  0713                     	;# 
  1962  0714                     	;# 
  1963  0716                     	;# 
  1964  0717                     	;# 
  1965  0718                     	;# 
  1966  0719                     	;# 
  1967  071A                     	;# 
  1968  071B                     	;# 
  1969  071C                     	;# 
  1970  071D                     	;# 
  1971  071E                     	;# 
  1972  0796                     	;# 
  1973  0797                     	;# 
  1974  0798                     	;# 
  1975  0799                     	;# 
  1976  079A                     	;# 
  1977  079B                     	;# 
  1978  080C                     	;# 
  1979  080D                     	;# 
  1980  080E                     	;# 
  1981  080F                     	;# 
  1982  0810                     	;# 
  1983  0811                     	;# 
  1984  0812                     	;# 
  1985  0813                     	;# 
  1986  0814                     	;# 
  1987  081A                     	;# 
  1988  081B                     	;# 
  1989  081C                     	;# 
  1990  081D                     	;# 
  1991  081E                     	;# 
  1992  081F                     	;# 
  1993  088C                     	;# 
  1994  088D                     	;# 
  1995  088E                     	;# 
  1996  088F                     	;# 
  1997  0890                     	;# 
  1998  0891                     	;# 
  1999  0892                     	;# 
  2000  0893                     	;# 
  2001  0895                     	;# 
  2002  0896                     	;# 
  2003  0897                     	;# 
  2004  0898                     	;# 
  2005  0899                     	;# 
  2006  089A                     	;# 
  2007  089B                     	;# 
  2008  090C                     	;# 
  2009  090E                     	;# 
  2010  090F                     	;# 
  2011  091F                     	;# 
  2012  091F                     	;# 
  2013  098F                     	;# 
  2014  098F                     	;# 
  2015  0990                     	;# 
  2016  0991                     	;# 
  2017  0992                     	;# 
  2018  0993                     	;# 
  2019  0994                     	;# 
  2020  0995                     	;# 
  2021  0996                     	;# 
  2022  0997                     	;# 
  2023  0E0F                     	;# 
  2024  0E10                     	;# 
  2025  0E11                     	;# 
  2026  0E12                     	;# 
  2027  0E13                     	;# 
  2028  0E14                     	;# 
  2029  0E15                     	;# 
  2030  0E16                     	;# 
  2031  0E17                     	;# 
  2032  0E18                     	;# 
  2033  0E19                     	;# 
  2034  0E1A                     	;# 
  2035  0E1B                     	;# 
  2036  0E1C                     	;# 
  2037  0E1D                     	;# 
  2038  0E1E                     	;# 
  2039  0E1F                     	;# 
  2040  0E20                     	;# 
  2041  0E21                     	;# 
  2042  0E22                     	;# 
  2043  0E23                     	;# 
  2044  0E24                     	;# 
  2045  0E25                     	;# 
  2046  0E26                     	;# 
  2047  0E27                     	;# 
  2048  0E28                     	;# 
  2049  0E29                     	;# 
  2050  0E2A                     	;# 
  2051  0E2B                     	;# 
  2052  0E2C                     	;# 
  2053  0E2D                     	;# 
  2054  0E2E                     	;# 
  2055  0E2F                     	;# 
  2056  0E30                     	;# 
  2057  0E31                     	;# 
  2058  0E32                     	;# 
  2059  0E33                     	;# 
  2060  0E34                     	;# 
  2061  0E35                     	;# 
  2062  0E36                     	;# 
  2063  0E37                     	;# 
  2064  0E8F                     	;# 
  2065  0E90                     	;# 
  2066  0E91                     	;# 
  2067  0E92                     	;# 
  2068  0E93                     	;# 
  2069  0E94                     	;# 
  2070  0E95                     	;# 
  2071  0E96                     	;# 
  2072  0E97                     	;# 
  2073  0E9C                     	;# 
  2074  0E9D                     	;# 
  2075  0E9E                     	;# 
  2076  0EA1                     	;# 
  2077  0EA2                     	;# 
  2078  0EA3                     	;# 
  2079  0EA4                     	;# 
  2080  0EA5                     	;# 
  2081  0EA9                     	;# 
  2082  0EAA                     	;# 
  2083  0EAB                     	;# 
  2084  0EAC                     	;# 
  2085  0EB1                     	;# 
  2086  0EB2                     	;# 
  2087  0EB3                     	;# 
  2088  0EB8                     	;# 
  2089  0EB9                     	;# 
  2090  0EBA                     	;# 
  2091  0EBB                     	;# 
  2092  0EBC                     	;# 
  2093  0EBD                     	;# 
  2094  0EBE                     	;# 
  2095  0EC3                     	;# 
  2096  0EC5                     	;# 
  2097  0EC6                     	;# 
  2098  0EC7                     	;# 
  2099  0EC8                     	;# 
  2100  0EC9                     	;# 
  2101  0ECA                     	;# 
  2102  0ECB                     	;# 
  2103  0ECC                     	;# 
  2104  0F10                     	;# 
  2105  0F11                     	;# 
  2106  0F12                     	;# 
  2107  0F13                     	;# 
  2108  0F14                     	;# 
  2109  0F15                     	;# 
  2110  0F16                     	;# 
  2111  0F17                     	;# 
  2112  0F18                     	;# 
  2113  0F19                     	;# 
  2114  0F1A                     	;# 
  2115  0F1B                     	;# 
  2116  0F1C                     	;# 
  2117  0F1D                     	;# 
  2118  0F1E                     	;# 
  2119  0F1F                     	;# 
  2120  0F20                     	;# 
  2121  0F21                     	;# 
  2122  0F22                     	;# 
  2123  0F23                     	;# 
  2124  0F24                     	;# 
  2125  0F25                     	;# 
  2126  0F26                     	;# 
  2127  0F27                     	;# 
  2128  0F38                     	;# 
  2129  0F39                     	;# 
  2130  0F3A                     	;# 
  2131  0F3B                     	;# 
  2132  0F3C                     	;# 
  2133  0F3D                     	;# 
  2134  0F3E                     	;# 
  2135  0F3F                     	;# 
  2136  0F40                     	;# 
  2137  0F41                     	;# 
  2138  0F43                     	;# 
  2139  0F44                     	;# 
  2140  0F45                     	;# 
  2141  0F46                     	;# 
  2142  0F47                     	;# 
  2143  0F48                     	;# 
  2144  0F49                     	;# 
  2145  0F4A                     	;# 
  2146  0F4B                     	;# 
  2147  0F4C                     	;# 
  2148  0F4E                     	;# 
  2149  0F4F                     	;# 
  2150  0F50                     	;# 
  2151  0F51                     	;# 
  2152  0F52                     	;# 
  2153  0F53                     	;# 
  2154  0F54                     	;# 
  2155  0F55                     	;# 
  2156  0F56                     	;# 
  2157  0F57                     	;# 
  2158  0F65                     	;# 
  2159  0F68                     	;# 
  2160  0F69                     	;# 
  2161  0F6A                     	;# 
  2162  0F6B                     	;# 
  2163  0FE4                     	;# 
  2164  0FE5                     	;# 
  2165  0FE6                     	;# 
  2166  0FE7                     	;# 
  2167  0FE8                     	;# 
  2168  0FE9                     	;# 
  2169  0FEA                     	;# 
  2170  0FEB                     	;# 
  2171  0FED                     	;# 
  2172  0FEE                     	;# 
  2173  0FEF                     	;# 
  2174  0000                     	;# 
  2175  0001                     	;# 
  2176  0002                     	;# 
  2177  0003                     	;# 
  2178  0004                     	;# 
  2179  0005                     	;# 
  2180  0006                     	;# 
  2181  0007                     	;# 
  2182  0008                     	;# 
  2183  0009                     	;# 
  2184  000A                     	;# 
  2185  000B                     	;# 
  2186  000C                     	;# 
  2187  000D                     	;# 
  2188  000E                     	;# 
  2189  0010                     	;# 
  2190  0011                     	;# 
  2191  0012                     	;# 
  2192  0013                     	;# 
  2193  0016                     	;# 
  2194  0017                     	;# 
  2195  0018                     	;# 
  2196  001C                     	;# 
  2197  001C                     	;# 
  2198  001D                     	;# 
  2199  001D                     	;# 
  2200  001E                     	;# 
  2201  001F                     	;# 
  2202  008C                     	;# 
  2203  008C                     	;# 
  2204  008D                     	;# 
  2205  008E                     	;# 
  2206  008E                     	;# 
  2207  008F                     	;# 
  2208  0090                     	;# 
  2209  0090                     	;# 
  2210  0091                     	;# 
  2211  0093                     	;# 
  2212  0094                     	;# 
  2213  0095                     	;# 
  2214  0096                     	;# 
  2215  0097                     	;# 
  2216  0098                     	;# 
  2217  0099                     	;# 
  2218  009A                     	;# 
  2219  009B                     	;# 
  2220  009C                     	;# 
  2221  009D                     	;# 
  2222  009E                     	;# 
  2223  010C                     	;# 
  2224  010D                     	;# 
  2225  010E                     	;# 
  2226  010E                     	;# 
  2227  010F                     	;# 
  2228  0110                     	;# 
  2229  0110                     	;# 
  2230  0111                     	;# 
  2231  0112                     	;# 
  2232  0112                     	;# 
  2233  0113                     	;# 
  2234  0114                     	;# 
  2235  0114                     	;# 
  2236  0115                     	;# 
  2237  0116                     	;# 
  2238  0116                     	;# 
  2239  0117                     	;# 
  2240  0119                     	;# 
  2241  0119                     	;# 
  2242  0119                     	;# 
  2243  011A                     	;# 
  2244  011A                     	;# 
  2245  011A                     	;# 
  2246  011B                     	;# 
  2247  011B                     	;# 
  2248  011B                     	;# 
  2249  011B                     	;# 
  2250  011B                     	;# 
  2251  011C                     	;# 
  2252  011C                     	;# 
  2253  011C                     	;# 
  2254  011D                     	;# 
  2255  011D                     	;# 
  2256  011D                     	;# 
  2257  011E                     	;# 
  2258  011E                     	;# 
  2259  011E                     	;# 
  2260  011F                     	;# 
  2261  011F                     	;# 
  2262  011F                     	;# 
  2263  011F                     	;# 
  2264  011F                     	;# 
  2265  018C                     	;# 
  2266  018D                     	;# 
  2267  018E                     	;# 
  2268  018F                     	;# 
  2269  0190                     	;# 
  2270  0191                     	;# 
  2271  0192                     	;# 
  2272  0196                     	;# 
  2273  0197                     	;# 
  2274  0198                     	;# 
  2275  0199                     	;# 
  2276  019A                     	;# 
  2277  019B                     	;# 
  2278  019C                     	;# 
  2279  020C                     	;# 
  2280  020C                     	;# 
  2281  020D                     	;# 
  2282  020E                     	;# 
  2283  020F                     	;# 
  2284  020F                     	;# 
  2285  0210                     	;# 
  2286  0210                     	;# 
  2287  0211                     	;# 
  2288  0211                     	;# 
  2289  0212                     	;# 
  2290  0212                     	;# 
  2291  0213                     	;# 
  2292  0214                     	;# 
  2293  0215                     	;# 
  2294  0215                     	;# 
  2295  0216                     	;# 
  2296  0216                     	;# 
  2297  0217                     	;# 
  2298  0217                     	;# 
  2299  0218                     	;# 
  2300  0218                     	;# 
  2301  0219                     	;# 
  2302  021A                     	;# 
  2303  021B                     	;# 
  2304  021B                     	;# 
  2305  021C                     	;# 
  2306  021C                     	;# 
  2307  021D                     	;# 
  2308  021D                     	;# 
  2309  021E                     	;# 
  2310  021F                     	;# 
  2311  028C                     	;# 
  2312  028C                     	;# 
  2313  028D                     	;# 
  2314  028D                     	;# 
  2315  028E                     	;# 
  2316  028F                     	;# 
  2317  0290                     	;# 
  2318  0290                     	;# 
  2319  0291                     	;# 
  2320  0292                     	;# 
  2321  0292                     	;# 
  2322  0293                     	;# 
  2323  0293                     	;# 
  2324  0294                     	;# 
  2325  0295                     	;# 
  2326  0296                     	;# 
  2327  0296                     	;# 
  2328  0297                     	;# 
  2329  0298                     	;# 
  2330  0298                     	;# 
  2331  0299                     	;# 
  2332  0299                     	;# 
  2333  029A                     	;# 
  2334  029B                     	;# 
  2335  029C                     	;# 
  2336  029C                     	;# 
  2337  029D                     	;# 
  2338  030C                     	;# 
  2339  030C                     	;# 
  2340  030D                     	;# 
  2341  030E                     	;# 
  2342  030F                     	;# 
  2343  0310                     	;# 
  2344  0310                     	;# 
  2345  0311                     	;# 
  2346  0312                     	;# 
  2347  0313                     	;# 
  2348  0314                     	;# 
  2349  0314                     	;# 
  2350  0315                     	;# 
  2351  0316                     	;# 
  2352  0317                     	;# 
  2353  0318                     	;# 
  2354  0318                     	;# 
  2355  0319                     	;# 
  2356  031A                     	;# 
  2357  031B                     	;# 
  2358  031C                     	;# 
  2359  031C                     	;# 
  2360  031D                     	;# 
  2361  031E                     	;# 
  2362  031F                     	;# 
  2363  038C                     	;# 
  2364  038C                     	;# 
  2365  038D                     	;# 
  2366  038E                     	;# 
  2367  0390                     	;# 
  2368  0390                     	;# 
  2369  0391                     	;# 
  2370  0392                     	;# 
  2371  040C                     	;# 
  2372  040D                     	;# 
  2373  040E                     	;# 
  2374  040F                     	;# 
  2375  0410                     	;# 
  2376  0411                     	;# 
  2377  0416                     	;# 
  2378  0416                     	;# 
  2379  0417                     	;# 
  2380  0418                     	;# 
  2381  0418                     	;# 
  2382  0419                     	;# 
  2383  041A                     	;# 
  2384  041A                     	;# 
  2385  041B                     	;# 
  2386  041C                     	;# 
  2387  041C                     	;# 
  2388  041D                     	;# 
  2389  041E                     	;# 
  2390  041F                     	;# 
  2391  048C                     	;# 
  2392  048C                     	;# 
  2393  048D                     	;# 
  2394  048E                     	;# 
  2395  048F                     	;# 
  2396  048F                     	;# 
  2397  0490                     	;# 
  2398  0491                     	;# 
  2399  0492                     	;# 
  2400  0492                     	;# 
  2401  0493                     	;# 
  2402  0494                     	;# 
  2403  0495                     	;# 
  2404  0495                     	;# 
  2405  0496                     	;# 
  2406  0497                     	;# 
  2407  0498                     	;# 
  2408  0499                     	;# 
  2409  049A                     	;# 
  2410  049B                     	;# 
  2411  049C                     	;# 
  2412  049D                     	;# 
  2413  050C                     	;# 
  2414  050C                     	;# 
  2415  050D                     	;# 
  2416  050E                     	;# 
  2417  050F                     	;# 
  2418  050F                     	;# 
  2419  0510                     	;# 
  2420  0511                     	;# 
  2421  0512                     	;# 
  2422  0512                     	;# 
  2423  0513                     	;# 
  2424  0514                     	;# 
  2425  0515                     	;# 
  2426  0515                     	;# 
  2427  0516                     	;# 
  2428  0517                     	;# 
  2429  0518                     	;# 
  2430  0519                     	;# 
  2431  051A                     	;# 
  2432  051B                     	;# 
  2433  051C                     	;# 
  2434  051D                     	;# 
  2435  058C                     	;# 
  2436  058C                     	;# 
  2437  058D                     	;# 
  2438  058E                     	;# 
  2439  058F                     	;# 
  2440  058F                     	;# 
  2441  0590                     	;# 
  2442  0591                     	;# 
  2443  0592                     	;# 
  2444  0593                     	;# 
  2445  060C                     	;# 
  2446  060D                     	;# 
  2447  060E                     	;# 
  2448  060F                     	;# 
  2449  0610                     	;# 
  2450  0611                     	;# 
  2451  0612                     	;# 
  2452  0613                     	;# 
  2453  0614                     	;# 
  2454  0616                     	;# 
  2455  0617                     	;# 
  2456  0618                     	;# 
  2457  0619                     	;# 
  2458  061A                     	;# 
  2459  061B                     	;# 
  2460  061C                     	;# 
  2461  061D                     	;# 
  2462  061E                     	;# 
  2463  068C                     	;# 
  2464  068D                     	;# 
  2465  068E                     	;# 
  2466  068F                     	;# 
  2467  0690                     	;# 
  2468  0691                     	;# 
  2469  0692                     	;# 
  2470  0693                     	;# 
  2471  0694                     	;# 
  2472  070C                     	;# 
  2473  070D                     	;# 
  2474  070E                     	;# 
  2475  070F                     	;# 
  2476  0710                     	;# 
  2477  0711                     	;# 
  2478  0712                     	;# 
  2479  0713                     	;# 
  2480  0714                     	;# 
  2481  0716                     	;# 
  2482  0717                     	;# 
  2483  0718                     	;# 
  2484  0719                     	;# 
  2485  071A                     	;# 
  2486  071B                     	;# 
  2487  071C                     	;# 
  2488  071D                     	;# 
  2489  071E                     	;# 
  2490  0796                     	;# 
  2491  0797                     	;# 
  2492  0798                     	;# 
  2493  0799                     	;# 
  2494  079A                     	;# 
  2495  079B                     	;# 
  2496  080C                     	;# 
  2497  080D                     	;# 
  2498  080E                     	;# 
  2499  080F                     	;# 
  2500  0810                     	;# 
  2501  0811                     	;# 
  2502  0812                     	;# 
  2503  0813                     	;# 
  2504  0814                     	;# 
  2505  081A                     	;# 
  2506  081B                     	;# 
  2507  081C                     	;# 
  2508  081D                     	;# 
  2509  081E                     	;# 
  2510  081F                     	;# 
  2511  088C                     	;# 
  2512  088D                     	;# 
  2513  088E                     	;# 
  2514  088F                     	;# 
  2515  0890                     	;# 
  2516  0891                     	;# 
  2517  0892                     	;# 
  2518  0893                     	;# 
  2519  0895                     	;# 
  2520  0896                     	;# 
  2521  0897                     	;# 
  2522  0898                     	;# 
  2523  0899                     	;# 
  2524  089A                     	;# 
  2525  089B                     	;# 
  2526  090C                     	;# 
  2527  090E                     	;# 
  2528  090F                     	;# 
  2529  091F                     	;# 
  2530  091F                     	;# 
  2531  098F                     	;# 
  2532  098F                     	;# 
  2533  0990                     	;# 
  2534  0991                     	;# 
  2535  0992                     	;# 
  2536  0993                     	;# 
  2537  0994                     	;# 
  2538  0995                     	;# 
  2539  0996                     	;# 
  2540  0997                     	;# 
  2541  0E0F                     	;# 
  2542  0E10                     	;# 
  2543  0E11                     	;# 
  2544  0E12                     	;# 
  2545  0E13                     	;# 
  2546  0E14                     	;# 
  2547  0E15                     	;# 
  2548  0E16                     	;# 
  2549  0E17                     	;# 
  2550  0E18                     	;# 
  2551  0E19                     	;# 
  2552  0E1A                     	;# 
  2553  0E1B                     	;# 
  2554  0E1C                     	;# 
  2555  0E1D                     	;# 
  2556  0E1E                     	;# 
  2557  0E1F                     	;# 
  2558  0E20                     	;# 
  2559  0E21                     	;# 
  2560  0E22                     	;# 
  2561  0E23                     	;# 
  2562  0E24                     	;# 
  2563  0E25                     	;# 
  2564  0E26                     	;# 
  2565  0E27                     	;# 
  2566  0E28                     	;# 
  2567  0E29                     	;# 
  2568  0E2A                     	;# 
  2569  0E2B                     	;# 
  2570  0E2C                     	;# 
  2571  0E2D                     	;# 
  2572  0E2E                     	;# 
  2573  0E2F                     	;# 
  2574  0E30                     	;# 
  2575  0E31                     	;# 
  2576  0E32                     	;# 
  2577  0E33                     	;# 
  2578  0E34                     	;# 
  2579  0E35                     	;# 
  2580  0E36                     	;# 
  2581  0E37                     	;# 
  2582  0E8F                     	;# 
  2583  0E90                     	;# 
  2584  0E91                     	;# 
  2585  0E92                     	;# 
  2586  0E93                     	;# 
  2587  0E94                     	;# 
  2588  0E95                     	;# 
  2589  0E96                     	;# 
  2590  0E97                     	;# 
  2591  0E9C                     	;# 
  2592  0E9D                     	;# 
  2593  0E9E                     	;# 
  2594  0EA1                     	;# 
  2595  0EA2                     	;# 
  2596  0EA3                     	;# 
  2597  0EA4                     	;# 
  2598  0EA5                     	;# 
  2599  0EA9                     	;# 
  2600  0EAA                     	;# 
  2601  0EAB                     	;# 
  2602  0EAC                     	;# 
  2603  0EB1                     	;# 
  2604  0EB2                     	;# 
  2605  0EB3                     	;# 
  2606  0EB8                     	;# 
  2607  0EB9                     	;# 
  2608  0EBA                     	;# 
  2609  0EBB                     	;# 
  2610  0EBC                     	;# 
  2611  0EBD                     	;# 
  2612  0EBE                     	;# 
  2613  0EC3                     	;# 
  2614  0EC5                     	;# 
  2615  0EC6                     	;# 
  2616  0EC7                     	;# 
  2617  0EC8                     	;# 
  2618  0EC9                     	;# 
  2619  0ECA                     	;# 
  2620  0ECB                     	;# 
  2621  0ECC                     	;# 
  2622  0F10                     	;# 
  2623  0F11                     	;# 
  2624  0F12                     	;# 
  2625  0F13                     	;# 
  2626  0F14                     	;# 
  2627  0F15                     	;# 
  2628  0F16                     	;# 
  2629  0F17                     	;# 
  2630  0F18                     	;# 
  2631  0F19                     	;# 
  2632  0F1A                     	;# 
  2633  0F1B                     	;# 
  2634  0F1C                     	;# 
  2635  0F1D                     	;# 
  2636  0F1E                     	;# 
  2637  0F1F                     	;# 
  2638  0F20                     	;# 
  2639  0F21                     	;# 
  2640  0F22                     	;# 
  2641  0F23                     	;# 
  2642  0F24                     	;# 
  2643  0F25                     	;# 
  2644  0F26                     	;# 
  2645  0F27                     	;# 
  2646  0F38                     	;# 
  2647  0F39                     	;# 
  2648  0F3A                     	;# 
  2649  0F3B                     	;# 
  2650  0F3C                     	;# 
  2651  0F3D                     	;# 
  2652  0F3E                     	;# 
  2653  0F3F                     	;# 
  2654  0F40                     	;# 
  2655  0F41                     	;# 
  2656  0F43                     	;# 
  2657  0F44                     	;# 
  2658  0F45                     	;# 
  2659  0F46                     	;# 
  2660  0F47                     	;# 
  2661  0F48                     	;# 
  2662  0F49                     	;# 
  2663  0F4A                     	;# 
  2664  0F4B                     	;# 
  2665  0F4C                     	;# 
  2666  0F4E                     	;# 
  2667  0F4F                     	;# 
  2668  0F50                     	;# 
  2669  0F51                     	;# 
  2670  0F52                     	;# 
  2671  0F53                     	;# 
  2672  0F54                     	;# 
  2673  0F55                     	;# 
  2674  0F56                     	;# 
  2675  0F57                     	;# 
  2676  0F65                     	;# 
  2677  0F68                     	;# 
  2678  0F69                     	;# 
  2679  0F6A                     	;# 
  2680  0F6B                     	;# 
  2681  0FE4                     	;# 
  2682  0FE5                     	;# 
  2683  0FE6                     	;# 
  2684  0FE7                     	;# 
  2685  0FE8                     	;# 
  2686  0FE9                     	;# 
  2687  0FEA                     	;# 
  2688  0FEB                     	;# 
  2689  0FED                     	;# 
  2690  0FEE                     	;# 
  2691  0FEF                     	;# 
  2692  0000                     	;# 
  2693  0001                     	;# 
  2694  0002                     	;# 
  2695  0003                     	;# 
  2696  0004                     	;# 
  2697  0005                     	;# 
  2698  0006                     	;# 
  2699  0007                     	;# 
  2700  0008                     	;# 
  2701  0009                     	;# 
  2702  000A                     	;# 
  2703  000B                     	;# 
  2704  000C                     	;# 
  2705  000D                     	;# 
  2706  000E                     	;# 
  2707  0010                     	;# 
  2708  0011                     	;# 
  2709  0012                     	;# 
  2710  0013                     	;# 
  2711  0016                     	;# 
  2712  0017                     	;# 
  2713  0018                     	;# 
  2714  001C                     	;# 
  2715  001C                     	;# 
  2716  001D                     	;# 
  2717  001D                     	;# 
  2718  001E                     	;# 
  2719  001F                     	;# 
  2720  008C                     	;# 
  2721  008C                     	;# 
  2722  008D                     	;# 
  2723  008E                     	;# 
  2724  008E                     	;# 
  2725  008F                     	;# 
  2726  0090                     	;# 
  2727  0090                     	;# 
  2728  0091                     	;# 
  2729  0093                     	;# 
  2730  0094                     	;# 
  2731  0095                     	;# 
  2732  0096                     	;# 
  2733  0097                     	;# 
  2734  0098                     	;# 
  2735  0099                     	;# 
  2736  009A                     	;# 
  2737  009B                     	;# 
  2738  009C                     	;# 
  2739  009D                     	;# 
  2740  009E                     	;# 
  2741  010C                     	;# 
  2742  010D                     	;# 
  2743  010E                     	;# 
  2744  010E                     	;# 
  2745  010F                     	;# 
  2746  0110                     	;# 
  2747  0110                     	;# 
  2748  0111                     	;# 
  2749  0112                     	;# 
  2750  0112                     	;# 
  2751  0113                     	;# 
  2752  0114                     	;# 
  2753  0114                     	;# 
  2754  0115                     	;# 
  2755  0116                     	;# 
  2756  0116                     	;# 
  2757  0117                     	;# 
  2758  0119                     	;# 
  2759  0119                     	;# 
  2760  0119                     	;# 
  2761  011A                     	;# 
  2762  011A                     	;# 
  2763  011A                     	;# 
  2764  011B                     	;# 
  2765  011B                     	;# 
  2766  011B                     	;# 
  2767  011B                     	;# 
  2768  011B                     	;# 
  2769  011C                     	;# 
  2770  011C                     	;# 
  2771  011C                     	;# 
  2772  011D                     	;# 
  2773  011D                     	;# 
  2774  011D                     	;# 
  2775  011E                     	;# 
  2776  011E                     	;# 
  2777  011E                     	;# 
  2778  011F                     	;# 
  2779  011F                     	;# 
  2780  011F                     	;# 
  2781  011F                     	;# 
  2782  011F                     	;# 
  2783  018C                     	;# 
  2784  018D                     	;# 
  2785  018E                     	;# 
  2786  018F                     	;# 
  2787  0190                     	;# 
  2788  0191                     	;# 
  2789  0192                     	;# 
  2790  0196                     	;# 
  2791  0197                     	;# 
  2792  0198                     	;# 
  2793  0199                     	;# 
  2794  019A                     	;# 
  2795  019B                     	;# 
  2796  019C                     	;# 
  2797  020C                     	;# 
  2798  020C                     	;# 
  2799  020D                     	;# 
  2800  020E                     	;# 
  2801  020F                     	;# 
  2802  020F                     	;# 
  2803  0210                     	;# 
  2804  0210                     	;# 
  2805  0211                     	;# 
  2806  0211                     	;# 
  2807  0212                     	;# 
  2808  0212                     	;# 
  2809  0213                     	;# 
  2810  0214                     	;# 
  2811  0215                     	;# 
  2812  0215                     	;# 
  2813  0216                     	;# 
  2814  0216                     	;# 
  2815  0217                     	;# 
  2816  0217                     	;# 
  2817  0218                     	;# 
  2818  0218                     	;# 
  2819  0219                     	;# 
  2820  021A                     	;# 
  2821  021B                     	;# 
  2822  021B                     	;# 
  2823  021C                     	;# 
  2824  021C                     	;# 
  2825  021D                     	;# 
  2826  021D                     	;# 
  2827  021E                     	;# 
  2828  021F                     	;# 
  2829  028C                     	;# 
  2830  028C                     	;# 
  2831  028D                     	;# 
  2832  028D                     	;# 
  2833  028E                     	;# 
  2834  028F                     	;# 
  2835  0290                     	;# 
  2836  0290                     	;# 
  2837  0291                     	;# 
  2838  0292                     	;# 
  2839  0292                     	;# 
  2840  0293                     	;# 
  2841  0293                     	;# 
  2842  0294                     	;# 
  2843  0295                     	;# 
  2844  0296                     	;# 
  2845  0296                     	;# 
  2846  0297                     	;# 
  2847  0298                     	;# 
  2848  0298                     	;# 
  2849  0299                     	;# 
  2850  0299                     	;# 
  2851  029A                     	;# 
  2852  029B                     	;# 
  2853  029C                     	;# 
  2854  029C                     	;# 
  2855  029D                     	;# 
  2856  030C                     	;# 
  2857  030C                     	;# 
  2858  030D                     	;# 
  2859  030E                     	;# 
  2860  030F                     	;# 
  2861  0310                     	;# 
  2862  0310                     	;# 
  2863  0311                     	;# 
  2864  0312                     	;# 
  2865  0313                     	;# 
  2866  0314                     	;# 
  2867  0314                     	;# 
  2868  0315                     	;# 
  2869  0316                     	;# 
  2870  0317                     	;# 
  2871  0318                     	;# 
  2872  0318                     	;# 
  2873  0319                     	;# 
  2874  031A                     	;# 
  2875  031B                     	;# 
  2876  031C                     	;# 
  2877  031C                     	;# 
  2878  031D                     	;# 
  2879  031E                     	;# 
  2880  031F                     	;# 
  2881  038C                     	;# 
  2882  038C                     	;# 
  2883  038D                     	;# 
  2884  038E                     	;# 
  2885  0390                     	;# 
  2886  0390                     	;# 
  2887  0391                     	;# 
  2888  0392                     	;# 
  2889  040C                     	;# 
  2890  040D                     	;# 
  2891  040E                     	;# 
  2892  040F                     	;# 
  2893  0410                     	;# 
  2894  0411                     	;# 
  2895  0416                     	;# 
  2896  0416                     	;# 
  2897  0417                     	;# 
  2898  0418                     	;# 
  2899  0418                     	;# 
  2900  0419                     	;# 
  2901  041A                     	;# 
  2902  041A                     	;# 
  2903  041B                     	;# 
  2904  041C                     	;# 
  2905  041C                     	;# 
  2906  041D                     	;# 
  2907  041E                     	;# 
  2908  041F                     	;# 
  2909  048C                     	;# 
  2910  048C                     	;# 
  2911  048D                     	;# 
  2912  048E                     	;# 
  2913  048F                     	;# 
  2914  048F                     	;# 
  2915  0490                     	;# 
  2916  0491                     	;# 
  2917  0492                     	;# 
  2918  0492                     	;# 
  2919  0493                     	;# 
  2920  0494                     	;# 
  2921  0495                     	;# 
  2922  0495                     	;# 
  2923  0496                     	;# 
  2924  0497                     	;# 
  2925  0498                     	;# 
  2926  0499                     	;# 
  2927  049A                     	;# 
  2928  049B                     	;# 
  2929  049C                     	;# 
  2930  049D                     	;# 
  2931  050C                     	;# 
  2932  050C                     	;# 
  2933  050D                     	;# 
  2934  050E                     	;# 
  2935  050F                     	;# 
  2936  050F                     	;# 
  2937  0510                     	;# 
  2938  0511                     	;# 
  2939  0512                     	;# 
  2940  0512                     	;# 
  2941  0513                     	;# 
  2942  0514                     	;# 
  2943  0515                     	;# 
  2944  0515                     	;# 
  2945  0516                     	;# 
  2946  0517                     	;# 
  2947  0518                     	;# 
  2948  0519                     	;# 
  2949  051A                     	;# 
  2950  051B                     	;# 
  2951  051C                     	;# 
  2952  051D                     	;# 
  2953  058C                     	;# 
  2954  058C                     	;# 
  2955  058D                     	;# 
  2956  058E                     	;# 
  2957  058F                     	;# 
  2958  058F                     	;# 
  2959  0590                     	;# 
  2960  0591                     	;# 
  2961  0592                     	;# 
  2962  0593                     	;# 
  2963  060C                     	;# 
  2964  060D                     	;# 
  2965  060E                     	;# 
  2966  060F                     	;# 
  2967  0610                     	;# 
  2968  0611                     	;# 
  2969  0612                     	;# 
  2970  0613                     	;# 
  2971  0614                     	;# 
  2972  0616                     	;# 
  2973  0617                     	;# 
  2974  0618                     	;# 
  2975  0619                     	;# 
  2976  061A                     	;# 
  2977  061B                     	;# 
  2978  061C                     	;# 
  2979  061D                     	;# 
  2980  061E                     	;# 
  2981  068C                     	;# 
  2982  068D                     	;# 
  2983  068E                     	;# 
  2984  068F                     	;# 
  2985  0690                     	;# 
  2986  0691                     	;# 
  2987  0692                     	;# 
  2988  0693                     	;# 
  2989  0694                     	;# 
  2990  070C                     	;# 
  2991  070D                     	;# 
  2992  070E                     	;# 
  2993  070F                     	;# 
  2994  0710                     	;# 
  2995  0711                     	;# 
  2996  0712                     	;# 
  2997  0713                     	;# 
  2998  0714                     	;# 
  2999  0716                     	;# 
  3000  0717                     	;# 
  3001  0718                     	;# 
  3002  0719                     	;# 
  3003  071A                     	;# 
  3004  071B                     	;# 
  3005  071C                     	;# 
  3006  071D                     	;# 
  3007  071E                     	;# 
  3008  0796                     	;# 
  3009  0797                     	;# 
  3010  0798                     	;# 
  3011  0799                     	;# 
  3012  079A                     	;# 
  3013  079B                     	;# 
  3014  080C                     	;# 
  3015  080D                     	;# 
  3016  080E                     	;# 
  3017  080F                     	;# 
  3018  0810                     	;# 
  3019  0811                     	;# 
  3020  0812                     	;# 
  3021  0813                     	;# 
  3022  0814                     	;# 
  3023  081A                     	;# 
  3024  081B                     	;# 
  3025  081C                     	;# 
  3026  081D                     	;# 
  3027  081E                     	;# 
  3028  081F                     	;# 
  3029  088C                     	;# 
  3030  088D                     	;# 
  3031  088E                     	;# 
  3032  088F                     	;# 
  3033  0890                     	;# 
  3034  0891                     	;# 
  3035  0892                     	;# 
  3036  0893                     	;# 
  3037  0895                     	;# 
  3038  0896                     	;# 
  3039  0897                     	;# 
  3040  0898                     	;# 
  3041  0899                     	;# 
  3042  089A                     	;# 
  3043  089B                     	;# 
  3044  090C                     	;# 
  3045  090E                     	;# 
  3046  090F                     	;# 
  3047  091F                     	;# 
  3048  091F                     	;# 
  3049  098F                     	;# 
  3050  098F                     	;# 
  3051  0990                     	;# 
  3052  0991                     	;# 
  3053  0992                     	;# 
  3054  0993                     	;# 
  3055  0994                     	;# 
  3056  0995                     	;# 
  3057  0996                     	;# 
  3058  0997                     	;# 
  3059  0E0F                     	;# 
  3060  0E10                     	;# 
  3061  0E11                     	;# 
  3062  0E12                     	;# 
  3063  0E13                     	;# 
  3064  0E14                     	;# 
  3065  0E15                     	;# 
  3066  0E16                     	;# 
  3067  0E17                     	;# 
  3068  0E18                     	;# 
  3069  0E19                     	;# 
  3070  0E1A                     	;# 
  3071  0E1B                     	;# 
  3072  0E1C                     	;# 
  3073  0E1D                     	;# 
  3074  0E1E                     	;# 
  3075  0E1F                     	;# 
  3076  0E20                     	;# 
  3077  0E21                     	;# 
  3078  0E22                     	;# 
  3079  0E23                     	;# 
  3080  0E24                     	;# 
  3081  0E25                     	;# 
  3082  0E26                     	;# 
  3083  0E27                     	;# 
  3084  0E28                     	;# 
  3085  0E29                     	;# 
  3086  0E2A                     	;# 
  3087  0E2B                     	;# 
  3088  0E2C                     	;# 
  3089  0E2D                     	;# 
  3090  0E2E                     	;# 
  3091  0E2F                     	;# 
  3092  0E30                     	;# 
  3093  0E31                     	;# 
  3094  0E32                     	;# 
  3095  0E33                     	;# 
  3096  0E34                     	;# 
  3097  0E35                     	;# 
  3098  0E36                     	;# 
  3099  0E37                     	;# 
  3100  0E8F                     	;# 
  3101  0E90                     	;# 
  3102  0E91                     	;# 
  3103  0E92                     	;# 
  3104  0E93                     	;# 
  3105  0E94                     	;# 
  3106  0E95                     	;# 
  3107  0E96                     	;# 
  3108  0E97                     	;# 
  3109  0E9C                     	;# 
  3110  0E9D                     	;# 
  3111  0E9E                     	;# 
  3112  0EA1                     	;# 
  3113  0EA2                     	;# 
  3114  0EA3                     	;# 
  3115  0EA4                     	;# 
  3116  0EA5                     	;# 
  3117  0EA9                     	;# 
  3118  0EAA                     	;# 
  3119  0EAB                     	;# 
  3120  0EAC                     	;# 
  3121  0EB1                     	;# 
  3122  0EB2                     	;# 
  3123  0EB3                     	;# 
  3124  0EB8                     	;# 
  3125  0EB9                     	;# 
  3126  0EBA                     	;# 
  3127  0EBB                     	;# 
  3128  0EBC                     	;# 
  3129  0EBD                     	;# 
  3130  0EBE                     	;# 
  3131  0EC3                     	;# 
  3132  0EC5                     	;# 
  3133  0EC6                     	;# 
  3134  0EC7                     	;# 
  3135  0EC8                     	;# 
  3136  0EC9                     	;# 
  3137  0ECA                     	;# 
  3138  0ECB                     	;# 
  3139  0ECC                     	;# 
  3140  0F10                     	;# 
  3141  0F11                     	;# 
  3142  0F12                     	;# 
  3143  0F13                     	;# 
  3144  0F14                     	;# 
  3145  0F15                     	;# 
  3146  0F16                     	;# 
  3147  0F17                     	;# 
  3148  0F18                     	;# 
  3149  0F19                     	;# 
  3150  0F1A                     	;# 
  3151  0F1B                     	;# 
  3152  0F1C                     	;# 
  3153  0F1D                     	;# 
  3154  0F1E                     	;# 
  3155  0F1F                     	;# 
  3156  0F20                     	;# 
  3157  0F21                     	;# 
  3158  0F22                     	;# 
  3159  0F23                     	;# 
  3160  0F24                     	;# 
  3161  0F25                     	;# 
  3162  0F26                     	;# 
  3163  0F27                     	;# 
  3164  0F38                     	;# 
  3165  0F39                     	;# 
  3166  0F3A                     	;# 
  3167  0F3B                     	;# 
  3168  0F3C                     	;# 
  3169  0F3D                     	;# 
  3170  0F3E                     	;# 
  3171  0F3F                     	;# 
  3172  0F40                     	;# 
  3173  0F41                     	;# 
  3174  0F43                     	;# 
  3175  0F44                     	;# 
  3176  0F45                     	;# 
  3177  0F46                     	;# 
  3178  0F47                     	;# 
  3179  0F48                     	;# 
  3180  0F49                     	;# 
  3181  0F4A                     	;# 
  3182  0F4B                     	;# 
  3183  0F4C                     	;# 
  3184  0F4E                     	;# 
  3185  0F4F                     	;# 
  3186  0F50                     	;# 
  3187  0F51                     	;# 
  3188  0F52                     	;# 
  3189  0F53                     	;# 
  3190  0F54                     	;# 
  3191  0F55                     	;# 
  3192  0F56                     	;# 
  3193  0F57                     	;# 
  3194  0F65                     	;# 
  3195  0F68                     	;# 
  3196  0F69                     	;# 
  3197  0F6A                     	;# 
  3198  0F6B                     	;# 
  3199  0FE4                     	;# 
  3200  0FE5                     	;# 
  3201  0FE6                     	;# 
  3202  0FE7                     	;# 
  3203  0FE8                     	;# 
  3204  0FE9                     	;# 
  3205  0FEA                     	;# 
  3206  0FEB                     	;# 
  3207  0FED                     	;# 
  3208  0FEE                     	;# 
  3209  0FEF                     	;# 
  3210  0000                     	;# 
  3211  0001                     	;# 
  3212  0002                     	;# 
  3213  0003                     	;# 
  3214  0004                     	;# 
  3215  0005                     	;# 
  3216  0006                     	;# 
  3217  0007                     	;# 
  3218  0008                     	;# 
  3219  0009                     	;# 
  3220  000A                     	;# 
  3221  000B                     	;# 
  3222  000C                     	;# 
  3223  000D                     	;# 
  3224  000E                     	;# 
  3225  0010                     	;# 
  3226  0011                     	;# 
  3227  0012                     	;# 
  3228  0013                     	;# 
  3229  0016                     	;# 
  3230  0017                     	;# 
  3231  0018                     	;# 
  3232  001C                     	;# 
  3233  001C                     	;# 
  3234  001D                     	;# 
  3235  001D                     	;# 
  3236  001E                     	;# 
  3237  001F                     	;# 
  3238  008C                     	;# 
  3239  008C                     	;# 
  3240  008D                     	;# 
  3241  008E                     	;# 
  3242  008E                     	;# 
  3243  008F                     	;# 
  3244  0090                     	;# 
  3245  0090                     	;# 
  3246  0091                     	;# 
  3247  0093                     	;# 
  3248  0094                     	;# 
  3249  0095                     	;# 
  3250  0096                     	;# 
  3251  0097                     	;# 
  3252  0098                     	;# 
  3253  0099                     	;# 
  3254  009A                     	;# 
  3255  009B                     	;# 
  3256  009C                     	;# 
  3257  009D                     	;# 
  3258  009E                     	;# 
  3259  010C                     	;# 
  3260  010D                     	;# 
  3261  010E                     	;# 
  3262  010E                     	;# 
  3263  010F                     	;# 
  3264  0110                     	;# 
  3265  0110                     	;# 
  3266  0111                     	;# 
  3267  0112                     	;# 
  3268  0112                     	;# 
  3269  0113                     	;# 
  3270  0114                     	;# 
  3271  0114                     	;# 
  3272  0115                     	;# 
  3273  0116                     	;# 
  3274  0116                     	;# 
  3275  0117                     	;# 
  3276  0119                     	;# 
  3277  0119                     	;# 
  3278  0119                     	;# 
  3279  011A                     	;# 
  3280  011A                     	;# 
  3281  011A                     	;# 
  3282  011B                     	;# 
  3283  011B                     	;# 
  3284  011B                     	;# 
  3285  011B                     	;# 
  3286  011B                     	;# 
  3287  011C                     	;# 
  3288  011C                     	;# 
  3289  011C                     	;# 
  3290  011D                     	;# 
  3291  011D                     	;# 
  3292  011D                     	;# 
  3293  011E                     	;# 
  3294  011E                     	;# 
  3295  011E                     	;# 
  3296  011F                     	;# 
  3297  011F                     	;# 
  3298  011F                     	;# 
  3299  011F                     	;# 
  3300  011F                     	;# 
  3301  018C                     	;# 
  3302  018D                     	;# 
  3303  018E                     	;# 
  3304  018F                     	;# 
  3305  0190                     	;# 
  3306  0191                     	;# 
  3307  0192                     	;# 
  3308  0196                     	;# 
  3309  0197                     	;# 
  3310  0198                     	;# 
  3311  0199                     	;# 
  3312  019A                     	;# 
  3313  019B                     	;# 
  3314  019C                     	;# 
  3315  020C                     	;# 
  3316  020C                     	;# 
  3317  020D                     	;# 
  3318  020E                     	;# 
  3319  020F                     	;# 
  3320  020F                     	;# 
  3321  0210                     	;# 
  3322  0210                     	;# 
  3323  0211                     	;# 
  3324  0211                     	;# 
  3325  0212                     	;# 
  3326  0212                     	;# 
  3327  0213                     	;# 
  3328  0214                     	;# 
  3329  0215                     	;# 
  3330  0215                     	;# 
  3331  0216                     	;# 
  3332  0216                     	;# 
  3333  0217                     	;# 
  3334  0217                     	;# 
  3335  0218                     	;# 
  3336  0218                     	;# 
  3337  0219                     	;# 
  3338  021A                     	;# 
  3339  021B                     	;# 
  3340  021B                     	;# 
  3341  021C                     	;# 
  3342  021C                     	;# 
  3343  021D                     	;# 
  3344  021D                     	;# 
  3345  021E                     	;# 
  3346  021F                     	;# 
  3347  028C                     	;# 
  3348  028C                     	;# 
  3349  028D                     	;# 
  3350  028D                     	;# 
  3351  028E                     	;# 
  3352  028F                     	;# 
  3353  0290                     	;# 
  3354  0290                     	;# 
  3355  0291                     	;# 
  3356  0292                     	;# 
  3357  0292                     	;# 
  3358  0293                     	;# 
  3359  0293                     	;# 
  3360  0294                     	;# 
  3361  0295                     	;# 
  3362  0296                     	;# 
  3363  0296                     	;# 
  3364  0297                     	;# 
  3365  0298                     	;# 
  3366  0298                     	;# 
  3367  0299                     	;# 
  3368  0299                     	;# 
  3369  029A                     	;# 
  3370  029B                     	;# 
  3371  029C                     	;# 
  3372  029C                     	;# 
  3373  029D                     	;# 
  3374  030C                     	;# 
  3375  030C                     	;# 
  3376  030D                     	;# 
  3377  030E                     	;# 
  3378  030F                     	;# 
  3379  0310                     	;# 
  3380  0310                     	;# 
  3381  0311                     	;# 
  3382  0312                     	;# 
  3383  0313                     	;# 
  3384  0314                     	;# 
  3385  0314                     	;# 
  3386  0315                     	;# 
  3387  0316                     	;# 
  3388  0317                     	;# 
  3389  0318                     	;# 
  3390  0318                     	;# 
  3391  0319                     	;# 
  3392  031A                     	;# 
  3393  031B                     	;# 
  3394  031C                     	;# 
  3395  031C                     	;# 
  3396  031D                     	;# 
  3397  031E                     	;# 
  3398  031F                     	;# 
  3399  038C                     	;# 
  3400  038C                     	;# 
  3401  038D                     	;# 
  3402  038E                     	;# 
  3403  0390                     	;# 
  3404  0390                     	;# 
  3405  0391                     	;# 
  3406  0392                     	;# 
  3407  040C                     	;# 
  3408  040D                     	;# 
  3409  040E                     	;# 
  3410  040F                     	;# 
  3411  0410                     	;# 
  3412  0411                     	;# 
  3413  0416                     	;# 
  3414  0416                     	;# 
  3415  0417                     	;# 
  3416  0418                     	;# 
  3417  0418                     	;# 
  3418  0419                     	;# 
  3419  041A                     	;# 
  3420  041A                     	;# 
  3421  041B                     	;# 
  3422  041C                     	;# 
  3423  041C                     	;# 
  3424  041D                     	;# 
  3425  041E                     	;# 
  3426  041F                     	;# 
  3427  048C                     	;# 
  3428  048C                     	;# 
  3429  048D                     	;# 
  3430  048E                     	;# 
  3431  048F                     	;# 
  3432  048F                     	;# 
  3433  0490                     	;# 
  3434  0491                     	;# 
  3435  0492                     	;# 
  3436  0492                     	;# 
  3437  0493                     	;# 
  3438  0494                     	;# 
  3439  0495                     	;# 
  3440  0495                     	;# 
  3441  0496                     	;# 
  3442  0497                     	;# 
  3443  0498                     	;# 
  3444  0499                     	;# 
  3445  049A                     	;# 
  3446  049B                     	;# 
  3447  049C                     	;# 
  3448  049D                     	;# 
  3449  050C                     	;# 
  3450  050C                     	;# 
  3451  050D                     	;# 
  3452  050E                     	;# 
  3453  050F                     	;# 
  3454  050F                     	;# 
  3455  0510                     	;# 
  3456  0511                     	;# 
  3457  0512                     	;# 
  3458  0512                     	;# 
  3459  0513                     	;# 
  3460  0514                     	;# 
  3461  0515                     	;# 
  3462  0515                     	;# 
  3463  0516                     	;# 
  3464  0517                     	;# 
  3465  0518                     	;# 
  3466  0519                     	;# 
  3467  051A                     	;# 
  3468  051B                     	;# 
  3469  051C                     	;# 
  3470  051D                     	;# 
  3471  058C                     	;# 
  3472  058C                     	;# 
  3473  058D                     	;# 
  3474  058E                     	;# 
  3475  058F                     	;# 
  3476  058F                     	;# 
  3477  0590                     	;# 
  3478  0591                     	;# 
  3479  0592                     	;# 
  3480  0593                     	;# 
  3481  060C                     	;# 
  3482  060D                     	;# 
  3483  060E                     	;# 
  3484  060F                     	;# 
  3485  0610                     	;# 
  3486  0611                     	;# 
  3487  0612                     	;# 
  3488  0613                     	;# 
  3489  0614                     	;# 
  3490  0616                     	;# 
  3491  0617                     	;# 
  3492  0618                     	;# 
  3493  0619                     	;# 
  3494  061A                     	;# 
  3495  061B                     	;# 
  3496  061C                     	;# 
  3497  061D                     	;# 
  3498  061E                     	;# 
  3499  068C                     	;# 
  3500  068D                     	;# 
  3501  068E                     	;# 
  3502  068F                     	;# 
  3503  0690                     	;# 
  3504  0691                     	;# 
  3505  0692                     	;# 
  3506  0693                     	;# 
  3507  0694                     	;# 
  3508  070C                     	;# 
  3509  070D                     	;# 
  3510  070E                     	;# 
  3511  070F                     	;# 
  3512  0710                     	;# 
  3513  0711                     	;# 
  3514  0712                     	;# 
  3515  0713                     	;# 
  3516  0714                     	;# 
  3517  0716                     	;# 
  3518  0717                     	;# 
  3519  0718                     	;# 
  3520  0719                     	;# 
  3521  071A                     	;# 
  3522  071B                     	;# 
  3523  071C                     	;# 
  3524  071D                     	;# 
  3525  071E                     	;# 
  3526  0796                     	;# 
  3527  0797                     	;# 
  3528  0798                     	;# 
  3529  0799                     	;# 
  3530  079A                     	;# 
  3531  079B                     	;# 
  3532  080C                     	;# 
  3533  080D                     	;# 
  3534  080E                     	;# 
  3535  080F                     	;# 
  3536  0810                     	;# 
  3537  0811                     	;# 
  3538  0812                     	;# 
  3539  0813                     	;# 
  3540  0814                     	;# 
  3541  081A                     	;# 
  3542  081B                     	;# 
  3543  081C                     	;# 
  3544  081D                     	;# 
  3545  081E                     	;# 
  3546  081F                     	;# 
  3547  088C                     	;# 
  3548  088D                     	;# 
  3549  088E                     	;# 
  3550  088F                     	;# 
  3551  0890                     	;# 
  3552  0891                     	;# 
  3553  0892                     	;# 
  3554  0893                     	;# 
  3555  0895                     	;# 
  3556  0896                     	;# 
  3557  0897                     	;# 
  3558  0898                     	;# 
  3559  0899                     	;# 
  3560  089A                     	;# 
  3561  089B                     	;# 
  3562  090C                     	;# 
  3563  090E                     	;# 
  3564  090F                     	;# 
  3565  091F                     	;# 
  3566  091F                     	;# 
  3567  098F                     	;# 
  3568  098F                     	;# 
  3569  0990                     	;# 
  3570  0991                     	;# 
  3571  0992                     	;# 
  3572  0993                     	;# 
  3573  0994                     	;# 
  3574  0995                     	;# 
  3575  0996                     	;# 
  3576  0997                     	;# 
  3577  0E0F                     	;# 
  3578  0E10                     	;# 
  3579  0E11                     	;# 
  3580  0E12                     	;# 
  3581  0E13                     	;# 
  3582  0E14                     	;# 
  3583  0E15                     	;# 
  3584  0E16                     	;# 
  3585  0E17                     	;# 
  3586  0E18                     	;# 
  3587  0E19                     	;# 
  3588  0E1A                     	;# 
  3589  0E1B                     	;# 
  3590  0E1C                     	;# 
  3591  0E1D                     	;# 
  3592  0E1E                     	;# 
  3593  0E1F                     	;# 
  3594  0E20                     	;# 
  3595  0E21                     	;# 
  3596  0E22                     	;# 
  3597  0E23                     	;# 
  3598  0E24                     	;# 
  3599  0E25                     	;# 
  3600  0E26                     	;# 
  3601  0E27                     	;# 
  3602  0E28                     	;# 
  3603  0E29                     	;# 
  3604  0E2A                     	;# 
  3605  0E2B                     	;# 
  3606  0E2C                     	;# 
  3607  0E2D                     	;# 
  3608  0E2E                     	;# 
  3609  0E2F                     	;# 
  3610  0E30                     	;# 
  3611  0E31                     	;# 
  3612  0E32                     	;# 
  3613  0E33                     	;# 
  3614  0E34                     	;# 
  3615  0E35                     	;# 
  3616  0E36                     	;# 
  3617  0E37                     	;# 
  3618  0E8F                     	;# 
  3619  0E90                     	;# 
  3620  0E91                     	;# 
  3621  0E92                     	;# 
  3622  0E93                     	;# 
  3623  0E94                     	;# 
  3624  0E95                     	;# 
  3625  0E96                     	;# 
  3626  0E97                     	;# 
  3627  0E9C                     	;# 
  3628  0E9D                     	;# 
  3629  0E9E                     	;# 
  3630  0EA1                     	;# 
  3631  0EA2                     	;# 
  3632  0EA3                     	;# 
  3633  0EA4                     	;# 
  3634  0EA5                     	;# 
  3635  0EA9                     	;# 
  3636  0EAA                     	;# 
  3637  0EAB                     	;# 
  3638  0EAC                     	;# 
  3639  0EB1                     	;# 
  3640  0EB2                     	;# 
  3641  0EB3                     	;# 
  3642  0EB8                     	;# 
  3643  0EB9                     	;# 
  3644  0EBA                     	;# 
  3645  0EBB                     	;# 
  3646  0EBC                     	;# 
  3647  0EBD                     	;# 
  3648  0EBE                     	;# 
  3649  0EC3                     	;# 
  3650  0EC5                     	;# 
  3651  0EC6                     	;# 
  3652  0EC7                     	;# 
  3653  0EC8                     	;# 
  3654  0EC9                     	;# 
  3655  0ECA                     	;# 
  3656  0ECB                     	;# 
  3657  0ECC                     	;# 
  3658  0F10                     	;# 
  3659  0F11                     	;# 
  3660  0F12                     	;# 
  3661  0F13                     	;# 
  3662  0F14                     	;# 
  3663  0F15                     	;# 
  3664  0F16                     	;# 
  3665  0F17                     	;# 
  3666  0F18                     	;# 
  3667  0F19                     	;# 
  3668  0F1A                     	;# 
  3669  0F1B                     	;# 
  3670  0F1C                     	;# 
  3671  0F1D                     	;# 
  3672  0F1E                     	;# 
  3673  0F1F                     	;# 
  3674  0F20                     	;# 
  3675  0F21                     	;# 
  3676  0F22                     	;# 
  3677  0F23                     	;# 
  3678  0F24                     	;# 
  3679  0F25                     	;# 
  3680  0F26                     	;# 
  3681  0F27                     	;# 
  3682  0F38                     	;# 
  3683  0F39                     	;# 
  3684  0F3A                     	;# 
  3685  0F3B                     	;# 
  3686  0F3C                     	;# 
  3687  0F3D                     	;# 
  3688  0F3E                     	;# 
  3689  0F3F                     	;# 
  3690  0F40                     	;# 
  3691  0F41                     	;# 
  3692  0F43                     	;# 
  3693  0F44                     	;# 
  3694  0F45                     	;# 
  3695  0F46                     	;# 
  3696  0F47                     	;# 
  3697  0F48                     	;# 
  3698  0F49                     	;# 
  3699  0F4A                     	;# 
  3700  0F4B                     	;# 
  3701  0F4C                     	;# 
  3702  0F4E                     	;# 
  3703  0F4F                     	;# 
  3704  0F50                     	;# 
  3705  0F51                     	;# 
  3706  0F52                     	;# 
  3707  0F53                     	;# 
  3708  0F54                     	;# 
  3709  0F55                     	;# 
  3710  0F56                     	;# 
  3711  0F57                     	;# 
  3712  0F65                     	;# 
  3713  0F68                     	;# 
  3714  0F69                     	;# 
  3715  0F6A                     	;# 
  3716  0F6B                     	;# 
  3717  0FE4                     	;# 
  3718  0FE5                     	;# 
  3719  0FE6                     	;# 
  3720  0FE7                     	;# 
  3721  0FE8                     	;# 
  3722  0FE9                     	;# 
  3723  0FEA                     	;# 
  3724  0FEB                     	;# 
  3725  0FED                     	;# 
  3726  0FEE                     	;# 
  3727  0FEF                     	;# 
  3728  000B                     _INTCONbits	set	11
  3729  0013                     _TRISC	set	19
  3730  0012                     _TRISB	set	18
  3731  0011                     _TRISA	set	17
  3732  0017                     _LATBbits	set	23
  3733  011A                     _TX1REG	set	282
  3734  011E                     _TX1STAbits	set	286
  3735  011C                     _SP1BRGH	set	284
  3736  011B                     _SP1BRGL	set	283
  3737  011D                     _RC1STA	set	285
  3738  011F                     _BAUD1CON	set	287
  3739  011E                     _TX1STA	set	286
  3740  011D                     _RC1STAbits	set	285
  3741  018F                     _SSP1STATbits	set	399
  3742  0190                     _SSP1CON1bits	set	400
  3743  018D                     _SSP1ADD	set	397
  3744  0192                     _SSP1CON3	set	402
  3745  0191                     _SSP1CON2	set	401
  3746  018F                     _SSP1STAT	set	399
  3747  0190                     _SSP1CON1	set	400
  3748  018C                     _SSP1BUF	set	396
  3749  0191                     _SSP1CON2bits	set	401
  3750  028E                     _T2CON	set	654
  3751  028C                     _T2TMR	set	652
  3752  028D                     _T2PR	set	653
  3753  0290                     _T2CLKCON	set	656
  3754  071A                     _PIE4bits	set	1818
  3755  0710                     _PIR4bits	set	1808
  3756  0719                     _PIE3bits	set	1817
  3757  070F                     _PIR3bits	set	1807
  3758  0892                     _OSCTUNE	set	2194
  3759  0893                     _OSCFRQ	set	2195
  3760  0891                     _OSCEN	set	2193
  3761  088F                     _OSCCON3	set	2191
  3762  088D                     _OSCCON1	set	2189
  3763  0ECB                     _RXPPS	set	3787
  3764  0EC5                     _SSP1CLKPPS	set	3781
  3765  0EC6                     _SSP1DATPPS	set	3782
  3766  0E8F                     _PPSLOCKbits	set	3727
  3767  0E8F                     _PPSLOCK	set	3727
  3768  0F25                     _RC5PPS	set	3877
  3769  0F24                     _RC4PPS	set	3876
  3770  0F23                     _RC3PPS	set	3875
  3771  0F50                     _ODCONC	set	3920
  3772  0F45                     _ODCONB	set	3909
  3773  0F3A                     _ODCONA	set	3898
  3774  0F4E                     _ANSELC	set	3918
  3775  0F43                     _ANSELB	set	3907
  3776  0F38                     _ANSELA	set	3896
  3777                           
  3778                           	psect	stringtext1
  3779  1800                     __pstringtext1:
  3780  1800                     STR_1:
  3781  1800  3449               	retlw	73	;'I'
  3782  1801  346E               	retlw	110	;'n'
  3783  1802  3469               	retlw	105	;'i'
  3784  1803  3463               	retlw	99	;'c'
  3785  1804  3469               	retlw	105	;'i'
  3786  1805  3461               	retlw	97	;'a'
  3787  1806  346C               	retlw	108	;'l'
  3788  1807  3469               	retlw	105	;'i'
  3789  1808  3474               	retlw	116	;'t'
  3790  1809  347A               	retlw	122	;'z'
  3791  180A  3461               	retlw	97	;'a'
  3792  180B  346E               	retlw	110	;'n'
  3793  180C  3474               	retlw	116	;'t'
  3794  180D  342E               	retlw	46	;'.'
  3795  180E  342E               	retlw	46	;'.'
  3796  180F  342E               	retlw	46	;'.'
  3797  1810  342E               	retlw	46	;'.'
  3798  1811  340A               	retlw	10
  3799  1812  3400               	retlw	0
  3800                           
  3801                           	psect	stringtext2
  3802  1813                     __pstringtext2:
  3803  1813                     STR_2:
  3804  1813  3449               	retlw	73	;'I'
  3805  1814  346E               	retlw	110	;'n'
  3806  1815  3469               	retlw	105	;'i'
  3807  1816  3463               	retlw	99	;'c'
  3808  1817  3469               	retlw	105	;'i'
  3809  1818  3461               	retlw	97	;'a'
  3810  1819  346C               	retlw	108	;'l'
  3811  181A  3469               	retlw	105	;'i'
  3812  181B  3474               	retlw	116	;'t'
  3813  181C  347A               	retlw	122	;'z'
  3814  181D  3461               	retlw	97	;'a'
  3815  181E  3474               	retlw	116	;'t'
  3816  181F  3421               	retlw	33	;'!'
  3817  1820  340A               	retlw	10
  3818  1821  3400               	retlw	0
  3819                           
  3820                           	psect	stringtext3
  3821  1822                     __pstringtext3:
  3822  1822                     STR_8:
  3823  1822  3445               	retlw	69	;'E'
  3824  1823  3469               	retlw	105	;'i'
  3825  1824  3478               	retlw	120	;'x'
  3826  1825  3420               	retlw	32	;' '
  3827  1826  3459               	retlw	89	;'Y'
  3828  1827  343A               	retlw	58	;':'
  3829  1828  3420               	retlw	32	;' '
  3830  1829  3425               	retlw	37	;'%'
  3831  182A  3464               	retlw	100	;'d'
  3832  182B  3420               	retlw	32	;' '
  3833  182C  340A               	retlw	10
  3834  182D  3400               	retlw	0
  3835                           
  3836                           	psect	stringtext4
  3837  182E                     __pstringtext4:
  3838  182E                     STR_7:
  3839  182E  3445               	retlw	69	;'E'
  3840  182F  3469               	retlw	105	;'i'
  3841  1830  3478               	retlw	120	;'x'
  3842  1831  3420               	retlw	32	;' '
  3843  1832  3458               	retlw	88	;'X'
  3844  1833  343A               	retlw	58	;':'
  3845  1834  3420               	retlw	32	;' '
  3846  1835  3425               	retlw	37	;'%'
  3847  1836  3464               	retlw	100	;'d'
  3848  1837  340A               	retlw	10
  3849  1838  3400               	retlw	0
  3850                           
  3851                           	psect	stringtext5
  3852  1839                     __pstringtext5:
  3853  1839                     STR_3:
  3854  1839  344F               	retlw	79	;'O'
  3855  183A  3442               	retlw	66	;'B'
  3856  183B  3445               	retlw	69	;'E'
  3857  183C  3452               	retlw	82	;'R'
  3858  183D  3454               	retlw	84	;'T'
  3859  183E  340A               	retlw	10
  3860  183F  3400               	retlw	0
  3861                           
  3862                           	psect	stringtext6
  3863  0000                     __pstringtext6:
  3864  1839                     
  3865                           	psect	cinit
  3866  0055                     start_initialization:	
  3867                           ; #config settings
  3868                           
  3869  0055                     __initialization:
  3870                           
  3871                           ; Clear objects allocated to COMMON
  3872  0055  01F6               	clrf	__pbssCOMMON& (0+127)
  3873  0056  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  3874  0057  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  3875  0058  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  3876  0059  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  3877                           
  3878                           ; Clear objects allocated to BANK1
  3879  005A  30A0               	movlw	low __pbssBANK1
  3880  005B  0084               	movwf	4
  3881  005C  3000               	movlw	high __pbssBANK1
  3882  005D  0085               	movwf	5
  3883  005E  303C               	movlw	60
  3884  005F  3195  254B  3180   	fcall	clear_ram0
  3885                           
  3886                           ; Clear objects allocated to BANK2
  3887  0062  3020               	movlw	low __pbssBANK2
  3888  0063  0084               	movwf	4
  3889  0064  3001               	movlw	high __pbssBANK2
  3890  0065  0085               	movwf	5
  3891  0066  3042               	movlw	66
  3892  0067  3195  254B  3180   	fcall	clear_ram0
  3893                           
  3894                           ; Clear objects allocated to BANK3
  3895  006A  30A0               	movlw	low __pbssBANK3
  3896  006B  0084               	movwf	4
  3897  006C  3001               	movlw	high __pbssBANK3
  3898  006D  0085               	movwf	5
  3899  006E  3020               	movlw	32
  3900  006F  3195  254B  3180   	fcall	clear_ram0
  3901                           
  3902                           ; Clear objects allocated to BANK4
  3903  0072  3020               	movlw	low __pbssBANK4
  3904  0073  0084               	movwf	4
  3905  0074  3002               	movlw	high __pbssBANK4
  3906  0075  0085               	movwf	5
  3907  0076  304E               	movlw	78
  3908  0077  3195  254B  3180   	fcall	clear_ram0
  3909                           
  3910                           ; Clear objects allocated to BANK5
  3911  007A  30A0               	movlw	low __pbssBANK5
  3912  007B  0084               	movwf	4
  3913  007C  3002               	movlw	high __pbssBANK5
  3914  007D  0085               	movwf	5
  3915  007E  3040               	movlw	64
  3916  007F  3195  254B  3180   	fcall	clear_ram0
  3917  0082                     end_of_initialization:	
  3918                           ;End of C runtime variable initialization code
  3919                           
  3920  0082                     __end_of__initialization:
  3921  0082  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3922  0083  0020               	movlb	0
  3923  0084  3180  2886         	ljmp	_main	;jump to C main() function
  3924                           
  3925                           	psect	bssCOMMON
  3926  0076                     __pbssCOMMON:
  3927  0076                     _flags:
  3928  0076                     	ds	2
  3929  0078                     _h_Tics:
  3930  0078                     	ds	2
  3931  007A                     _counter:
  3932  007A                     	ds	1
  3933                           
  3934                           	psect	bssBANK1
  3935  00A0                     __pbssBANK1:
  3936  00A0                     _nout:
  3937  00A0                     	ds	2
  3938  00A2                     _width:
  3939  00A2                     	ds	2
  3940  00A4                     _prec:
  3941  00A4                     	ds	2
  3942  00A6                     _Fi:
  3943  00A6                     	ds	2
  3944  00A8                     _Inici:
  3945  00A8                     	ds	2
  3946  00AA                     main@z1:
  3947  00AA                     	ds	2
  3948  00AC                     main@z0:
  3949  00AC                     	ds	2
  3950  00AE                     main@y1:
  3951  00AE                     	ds	2
  3952  00B0                     main@y0:
  3953  00B0                     	ds	2
  3954  00B2                     main@x1:
  3955  00B2                     	ds	2
  3956  00B4                     main@x0:
  3957  00B4                     	ds	2
  3958  00B6                     main@ycal:
  3959  00B6                     	ds	2
  3960  00B8                     main@xcal:
  3961  00B8                     	ds	2
  3962  00BA                     main@cal:
  3963  00BA                     	ds	2
  3964  00BC                     main@contadorInit:
  3965  00BC                     	ds	2
  3966  00BE                     main@j:
  3967  00BE                     	ds	2
  3968  00C0                     main@r:
  3969  00C0                     	ds	2
  3970  00C2                     main@i:
  3971  00C2                     	ds	2
  3972  00C4                     main@Ymostra:
  3973  00C4                     	ds	2
  3974  00C6                     main@Xmostra:
  3975  00C6                     	ds	2
  3976  00C8                     main@Zmostra:
  3977  00C8                     	ds	2
  3978  00CA                     main@Zant:
  3979  00CA                     	ds	2
  3980  00CC                     main@Yant:
  3981  00CC                     	ds	2
  3982  00CE                     main@Xant:
  3983  00CE                     	ds	2
  3984  00D0                     main@res:
  3985  00D0                     	ds	2
  3986  00D2                     main@Estat:
  3987  00D2                     	ds	2
  3988  00D4                     main@T:
  3989  00D4                     	ds	2
  3990  00D6                     main@z:
  3991  00D6                     	ds	2
  3992  00D8                     main@y:
  3993  00D8                     	ds	2
  3994  00DA                     main@x:
  3995  00DA                     	ds	2
  3996                           
  3997                           	psect	bssBANK2
  3998  0120                     __pbssBANK2:
  3999  0120                     fabsf@F465:
  4000  0120                     	ds	4
  4001  0124                     main@roll:
  4002  0124                     	ds	4
  4003  0128                     main@accZ:
  4004  0128                     	ds	4
  4005  012C                     main@accY:
  4006  012C                     	ds	4
  4007  0130                     main@accX:
  4008  0130                     	ds	4
  4009  0134                     _Quants:
  4010  0134                     	ds	2
  4011  0136                     main@Ya:
  4012  0136                     	ds	2
  4013  0138                     main@Xa:
  4014  0138                     	ds	2
  4015  013A                     main@Za:
  4016  013A                     	ds	2
  4017  013C                     main@Zoriginal:
  4018  013C                     	ds	2
  4019  013E                     main@Yoriginal:
  4020  013E                     	ds	2
  4021  0140                     main@Xoriginal:
  4022  0140                     	ds	2
  4023  0142                     main@zcal:
  4024  0142                     	ds	2
  4025  0144                     main@tmp:
  4026  0144                     	ds	30
  4027                           
  4028                           	psect	bssBANK3
  4029  01A0                     __pbssBANK3:
  4030  01A0                     _dbuf:
  4031  01A0                     	ds	32
  4032                           
  4033                           	psect	bssBANK4
  4034  0220                     __pbssBANK4:
  4035  0220                     _s_Timers:
  4036  0220                     	ds	78
  4037                           
  4038                           	psect	bssBANK5
  4039  02A0                     __pbssBANK5:
  4040  02A0                     _BufferRx3:
  4041  02A0                     	ds	64
  4042                           
  4043                           	psect	clrtext
  4044  154B                     clear_ram0:	
  4045                           ;	Called with FSR0 containing the base address, and
  4046                           ;	WREG with the size to clear
  4047                           
  4048  154B  0064               	clrwdt	;clear the watchdog before getting into this loop
  4049  154C                     clrloop0:
  4050  154C  0180               	clrf	0	;clear RAM location pointed to by FSR
  4051  154D  3101               	addfsr 0,1
  4052  154E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4053  154F  2D4C               	goto	clrloop0	;have we reached the end yet?
  4054  1550  3400               	retlw	0	;all done for this memory range, return
  4055                           
  4056                           	psect	cstackBANK2
  4057  0162                     __pcstackBANK2:
  4058  0162                     ??_main:
  4059                           
  4060                           ; 1 bytes @ 0x0
  4061  0162                     	ds	3
  4062                           
  4063                           	psect	cstackBANK1
  4064  00DC                     __pcstackBANK1:
  4065  00DC                     vfprintf@fp:
  4066                           
  4067                           ; 1 bytes @ 0x0
  4068  00DC                     	ds	1
  4069  00DD                     vfprintf@cfmt:
  4070                           
  4071                           ; 2 bytes @ 0x1
  4072  00DD                     	ds	2
  4073  00DF                     ?_sprintf:
  4074  00DF                     sprintf@fmt:	
  4075                           ; 2 bytes @ 0x3
  4076                           
  4077                           
  4078                           ; 2 bytes @ 0x3
  4079  00DF                     	ds	4
  4080  00E3                     sprintf@ap:
  4081                           
  4082                           ; 1 bytes @ 0x7
  4083  00E3                     	ds	1
  4084  00E4                     sprintf@s:
  4085                           
  4086                           ; 1 bytes @ 0x8
  4087  00E4                     	ds	1
  4088  00E5                     sprintf@f:
  4089                           
  4090                           ; 10 bytes @ 0x9
  4091  00E5                     	ds	10
  4092                           
  4093                           	psect	cstackCOMMON
  4094  0070                     __pcstackCOMMON:
  4095  0070                     ?_InitPinOut:
  4096  0070                     ?_initMSSP1_I2C:	
  4097                           ; 1 bytes @ 0x0
  4098                           
  4099  0070                     ?_TiInitTimer:	
  4100                           ; 1 bytes @ 0x0
  4101                           
  4102  0070                     ?_Init345:	
  4103                           ; 1 bytes @ 0x0
  4104                           
  4105  0070                     ?_I2C_start:	
  4106                           ; 1 bytes @ 0x0
  4107                           
  4108  0070                     ?_WriteI2C:	
  4109                           ; 1 bytes @ 0x0
  4110                           
  4111  0070                     ?_I2C_wait:	
  4112                           ; 1 bytes @ 0x0
  4113                           
  4114  0070                     ?_I2C_repeated_start:	
  4115                           ; 1 bytes @ 0x0
  4116                           
  4117  0070                     ?_NotAckI2C:	
  4118                           ; 1 bytes @ 0x0
  4119                           
  4120  0070                     ?_I2C_stop:	
  4121                           ; 1 bytes @ 0x0
  4122                           
  4123  0070                     ?_putch:	
  4124                           ; 1 bytes @ 0x0
  4125                           
  4126  0070                     ?_main:	
  4127                           ; 1 bytes @ 0x0
  4128                           
  4129  0070                     ?_SiSendChar:	
  4130                           ; 1 bytes @ 0x0
  4131                           
  4132  0070                     ?_INTERRUPT_TMR2:	
  4133                           ; 1 bytes @ 0x0
  4134                           
  4135  0070                     ?_WaitAck:	
  4136                           ; 1 bytes @ 0x0
  4137                           
  4138  0070                     ?i1___bmul:	
  4139                           ; 1 bytes @ 0x0
  4140                           
  4141  0070                     putch@c:	
  4142                           ; 1 bytes @ 0x0
  4143                           
  4144  0070                     i1___bmul@multiplicand:	
  4145                           ; 1 bytes @ 0x0
  4146                           
  4147                           
  4148                           ; 1 bytes @ 0x0
  4149  0070                     	ds	1
  4150  0071                     ??i1___bmul:
  4151                           
  4152                           ; 1 bytes @ 0x1
  4153  0071                     	ds	1
  4154  0072                     i1___bmul@product:
  4155                           
  4156                           ; 1 bytes @ 0x2
  4157  0072                     	ds	1
  4158  0073                     i1___bmul@multiplier:
  4159                           
  4160                           ; 1 bytes @ 0x3
  4161  0073                     	ds	1
  4162  0074                     ??_INTERRUPT_TMR2:
  4163                           
  4164                           ; 1 bytes @ 0x4
  4165  0074                     	ds	1
  4166  0075                     INTERRUPT_TMR2@status:
  4167                           
  4168                           ; 1 bytes @ 0x5
  4169  0075                     	ds	1
  4170                           
  4171                           	psect	cstackBANK0
  4172  0020                     __pcstackBANK0:
  4173  0020                     ??_InitPinOut:
  4174  0020                     ??_initMSSP1_I2C:	
  4175                           ; 1 bytes @ 0x0
  4176                           
  4177  0020                     ?_SiInit:	
  4178                           ; 1 bytes @ 0x0
  4179                           
  4180  0020                     ??_I2C_start:	
  4181                           ; 1 bytes @ 0x0
  4182                           
  4183  0020                     ??_I2C_wait:	
  4184                           ; 1 bytes @ 0x0
  4185                           
  4186  0020                     ??_I2C_repeated_start:	
  4187                           ; 1 bytes @ 0x0
  4188                           
  4189  0020                     ??_NotAckI2C:	
  4190                           ; 1 bytes @ 0x0
  4191                           
  4192  0020                     ??_I2C_stop:	
  4193                           ; 1 bytes @ 0x0
  4194                           
  4195  0020                     ??_putch:	
  4196                           ; 1 bytes @ 0x0
  4197                           
  4198  0020                     ??_SiSendChar:	
  4199                           ; 1 bytes @ 0x0
  4200                           
  4201  0020                     ??_WaitAck:	
  4202                           ; 1 bytes @ 0x0
  4203                           
  4204  0020                     ?___bmul:	
  4205                           ; 1 bytes @ 0x0
  4206                           
  4207  0020                     ?__Umul8_16:	
  4208                           ; 1 bytes @ 0x0
  4209                           
  4210  0020                     ?_fputc:	
  4211                           ; 2 bytes @ 0x0
  4212                           
  4213  0020                     ?_strlen:	
  4214                           ; 2 bytes @ 0x0
  4215                           
  4216  0020                     ?___xxtofl:	
  4217                           ; 2 bytes @ 0x0
  4218                           
  4219  0020                     ?___aodiv:	
  4220                           ; 4 bytes @ 0x0
  4221                           
  4222  0020                     ?___aomod:	
  4223                           ; 8 bytes @ 0x0
  4224                           
  4225  0020                     SiSendChar@c:	
  4226                           ; 8 bytes @ 0x0
  4227                           
  4228  0020                     ___bmul@multiplicand:	
  4229                           ; 1 bytes @ 0x0
  4230                           
  4231  0020                     __Umul8_16@multiplicand:	
  4232                           ; 1 bytes @ 0x0
  4233                           
  4234  0020                     SiInit@Baud:	
  4235                           ; 1 bytes @ 0x0
  4236                           
  4237  0020                     WaitAck@count:	
  4238                           ; 2 bytes @ 0x0
  4239                           
  4240  0020                     fputc@c:	
  4241                           ; 2 bytes @ 0x0
  4242                           
  4243  0020                     ___xxtofl@val:	
  4244                           ; 2 bytes @ 0x0
  4245                           
  4246  0020                     ___aodiv@divisor:	
  4247                           ; 4 bytes @ 0x0
  4248                           
  4249  0020                     ___aomod@divisor:	
  4250                           ; 8 bytes @ 0x0
  4251                           
  4252                           
  4253                           ; 8 bytes @ 0x0
  4254  0020                     	ds	1
  4255  0021                     ?_SiPuts:
  4256  0021                     ??___bmul:	
  4257                           ; 1 bytes @ 0x1
  4258                           
  4259  0021                     SiPuts@s:	
  4260                           ; 1 bytes @ 0x1
  4261                           
  4262                           
  4263                           ; 2 bytes @ 0x1
  4264  0021                     	ds	1
  4265  0022                     ??_SiInit:
  4266  0022                     ??_WriteI2C:	
  4267                           ; 1 bytes @ 0x2
  4268                           
  4269  0022                     ??__Umul8_16:	
  4270                           ; 1 bytes @ 0x2
  4271                           
  4272  0022                     ??_strlen:	
  4273                           ; 1 bytes @ 0x2
  4274                           
  4275  0022                     WriteI2C@byte:	
  4276                           ; 1 bytes @ 0x2
  4277                           
  4278  0022                     ___bmul@product:	
  4279                           ; 1 bytes @ 0x2
  4280                           
  4281  0022                     fputc@fp:	
  4282                           ; 1 bytes @ 0x2
  4283                           
  4284                           
  4285                           ; 1 bytes @ 0x2
  4286  0022                     	ds	1
  4287  0023                     ??_Init345:
  4288  0023                     ??_SiPuts:	
  4289                           ; 1 bytes @ 0x3
  4290                           
  4291  0023                     ?_Avg:	
  4292                           ; 1 bytes @ 0x3
  4293                           
  4294  0023                     ??_fputc:	
  4295                           ; 1 bytes @ 0x3
  4296                           
  4297  0023                     ?_valorAngle:	
  4298                           ; 1 bytes @ 0x3
  4299                           
  4300  0023                     ___bmul@multiplier:	
  4301                           ; 2 bytes @ 0x3
  4302                           
  4303  0023                     strlen@a:	
  4304                           ; 1 bytes @ 0x3
  4305                           
  4306  0023                     Avg@x:	
  4307                           ; 1 bytes @ 0x3
  4308                           
  4309                           
  4310                           ; 2 bytes @ 0x3
  4311  0023                     	ds	1
  4312  0024                     ??_TiInitTimer:
  4313  0024                     ?_TiResetTics:	
  4314                           ; 1 bytes @ 0x4
  4315                           
  4316  0024                     ??___xxtofl:	
  4317                           ; 1 bytes @ 0x4
  4318                           
  4319  0024                     ?_TiGetTimer:	
  4320                           ; 1 bytes @ 0x4
  4321                           
  4322  0024                     ?_TiGetTics:	
  4323                           ; 2 bytes @ 0x4
  4324                           
  4325  0024                     strlen@s:	
  4326                           ; 2 bytes @ 0x4
  4327                           
  4328  0024                     TiResetTics@Handle:	
  4329                           ; 1 bytes @ 0x4
  4330                           
  4331  0024                     TiGetTics@Handle:	
  4332                           ; 2 bytes @ 0x4
  4333                           
  4334  0024                     __Umul8_16@product:	
  4335                           ; 2 bytes @ 0x4
  4336                           
  4337                           
  4338                           ; 2 bytes @ 0x4
  4339  0024                     	ds	1
  4340  0025                     ??_valorAngle:
  4341  0025                     Avg@y:	
  4342                           ; 1 bytes @ 0x5
  4343                           
  4344                           
  4345                           ; 2 bytes @ 0x5
  4346  0025                     	ds	1
  4347  0026                     ??_TiGetTimer:
  4348  0026                     ??_TiGetTics:	
  4349                           ; 1 bytes @ 0x6
  4350                           
  4351  0026                     ??_TiResetTics:	
  4352                           ; 1 bytes @ 0x6
  4353                           
  4354  0026                     __Umul8_16@word_mpld:	
  4355                           ; 1 bytes @ 0x6
  4356                           
  4357                           
  4358                           ; 2 bytes @ 0x6
  4359  0026                     	ds	1
  4360  0027                     valorAngle@tmp:
  4361  0027                     Avg@z:	
  4362                           ; 2 bytes @ 0x7
  4363                           
  4364  0027                     TiGetTics@actual:	
  4365                           ; 2 bytes @ 0x7
  4366                           
  4367                           
  4368                           ; 2 bytes @ 0x7
  4369  0027                     	ds	1
  4370  0028                     ?_fputs:
  4371  0028                     TiGetTimer@counter:	
  4372                           ; 2 bytes @ 0x8
  4373                           
  4374  0028                     __Umul8_16@multiplier:	
  4375                           ; 1 bytes @ 0x8
  4376                           
  4377  0028                     ___xxtofl@sign:	
  4378                           ; 1 bytes @ 0x8
  4379                           
  4380  0028                     fputs@fp:	
  4381                           ; 1 bytes @ 0x8
  4382                           
  4383  0028                     ___aodiv@dividend:	
  4384                           ; 1 bytes @ 0x8
  4385                           
  4386  0028                     ___aomod@dividend:	
  4387                           ; 8 bytes @ 0x8
  4388                           
  4389                           
  4390                           ; 8 bytes @ 0x8
  4391  0028                     	ds	1
  4392  0029                     ??_Avg:
  4393  0029                     ??_fputs:	
  4394                           ; 1 bytes @ 0x9
  4395                           
  4396  0029                     valorAngle@eix:	
  4397                           ; 1 bytes @ 0x9
  4398                           
  4399  0029                     ___xxtofl@exp:	
  4400                           ; 1 bytes @ 0x9
  4401                           
  4402                           
  4403                           ; 1 bytes @ 0x9
  4404  0029                     	ds	1
  4405  002A                     ___xxtofl@arg:
  4406                           
  4407                           ; 4 bytes @ 0xA
  4408  002A                     	ds	2
  4409  002C                     fputs@c:
  4410                           
  4411                           ; 1 bytes @ 0xC
  4412  002C                     	ds	1
  4413  002D                     fputs@i:
  4414                           
  4415                           ; 2 bytes @ 0xD
  4416  002D                     	ds	1
  4417  002E                     ?_fabsf:
  4418  002E                     ?___flmul:	
  4419                           ; 4 bytes @ 0xE
  4420                           
  4421  002E                     ___flmul@b:	
  4422                           ; 4 bytes @ 0xE
  4423                           
  4424  002E                     fabsf@x:	
  4425                           ; 4 bytes @ 0xE
  4426                           
  4427                           
  4428                           ; 4 bytes @ 0xE
  4429  002E                     	ds	1
  4430  002F                     fputs@s:
  4431                           
  4432                           ; 1 bytes @ 0xF
  4433  002F                     	ds	1
  4434  0030                     ??___aodiv:
  4435  0030                     ??___aomod:	
  4436                           ; 1 bytes @ 0x10
  4437                           
  4438  0030                     ?_pad:	
  4439                           ; 1 bytes @ 0x10
  4440                           
  4441  0030                     pad@buf:	
  4442                           ; 2 bytes @ 0x10
  4443                           
  4444                           
  4445                           ; 1 bytes @ 0x10
  4446  0030                     	ds	1
  4447  0031                     ___aodiv@counter:
  4448  0031                     ___aomod@counter:	
  4449                           ; 1 bytes @ 0x11
  4450                           
  4451  0031                     pad@p:	
  4452                           ; 1 bytes @ 0x11
  4453                           
  4454                           
  4455                           ; 2 bytes @ 0x11
  4456  0031                     	ds	1
  4457  0032                     ??_fabsf:
  4458  0032                     ___aodiv@sign:	
  4459                           ; 1 bytes @ 0x12
  4460                           
  4461  0032                     ___aomod@sign:	
  4462                           ; 1 bytes @ 0x12
  4463                           
  4464  0032                     ___flmul@a:	
  4465                           ; 1 bytes @ 0x12
  4466                           
  4467  0032                     fabsf@u:	
  4468                           ; 4 bytes @ 0x12
  4469                           
  4470                           
  4471                           ; 4 bytes @ 0x12
  4472  0032                     	ds	1
  4473  0033                     ??_pad:
  4474  0033                     ?_abs:	
  4475                           ; 1 bytes @ 0x13
  4476                           
  4477  0033                     abs@a:	
  4478                           ; 2 bytes @ 0x13
  4479                           
  4480  0033                     ___aodiv@quotient:	
  4481                           ; 2 bytes @ 0x13
  4482                           
  4483                           
  4484                           ; 8 bytes @ 0x13
  4485  0033                     	ds	1
  4486  0034                     pad@i:
  4487                           
  4488                           ; 2 bytes @ 0x14
  4489  0034                     	ds	1
  4490  0035                     ??_abs:
  4491                           
  4492                           ; 1 bytes @ 0x15
  4493  0035                     	ds	1
  4494  0036                     ?___flge:
  4495  0036                     ??___flmul:	
  4496                           ; 1 bit 
  4497                           
  4498  0036                     pad@w:	
  4499                           ; 1 bytes @ 0x16
  4500                           
  4501  0036                     ___flge@ff1:	
  4502                           ; 2 bytes @ 0x16
  4503                           
  4504                           
  4505                           ; 4 bytes @ 0x16
  4506  0036                     	ds	2
  4507  0038                     pad@fp:
  4508                           
  4509                           ; 1 bytes @ 0x18
  4510  0038                     	ds	2
  4511  003A                     ___flge@ff2:
  4512                           
  4513                           ; 4 bytes @ 0x1A
  4514  003A                     	ds	1
  4515  003B                     ?_dtoa:
  4516  003B                     ___flmul@sign:	
  4517                           ; 2 bytes @ 0x1B
  4518                           
  4519  003B                     dtoa@d:	
  4520                           ; 1 bytes @ 0x1B
  4521                           
  4522                           
  4523                           ; 8 bytes @ 0x1B
  4524  003B                     	ds	1
  4525  003C                     ___flmul@aexp:
  4526                           
  4527                           ; 1 bytes @ 0x1C
  4528  003C                     	ds	1
  4529  003D                     ___flmul@grs:
  4530                           
  4531                           ; 4 bytes @ 0x1D
  4532  003D                     	ds	1
  4533  003E                     ??___flge:
  4534                           
  4535                           ; 1 bytes @ 0x1E
  4536  003E                     	ds	3
  4537  0041                     ___flmul@bexp:
  4538                           
  4539                           ; 1 bytes @ 0x21
  4540  0041                     	ds	1
  4541  0042                     ___flmul@prod:
  4542                           
  4543                           ; 4 bytes @ 0x22
  4544  0042                     	ds	1
  4545  0043                     ??_dtoa:
  4546                           
  4547                           ; 1 bytes @ 0x23
  4548  0043                     	ds	3
  4549  0046                     dtoa@fp:
  4550  0046                     ___flmul@temp:	
  4551                           ; 1 bytes @ 0x26
  4552                           
  4553                           
  4554                           ; 2 bytes @ 0x26
  4555  0046                     	ds	1
  4556  0047                     _dtoa$1596:
  4557                           
  4558                           ; 2 bytes @ 0x27
  4559  0047                     	ds	1
  4560  0048                     ?___fladd:
  4561  0048                     ___fladd@b:	
  4562                           ; 4 bytes @ 0x28
  4563                           
  4564                           
  4565                           ; 4 bytes @ 0x28
  4566  0048                     	ds	1
  4567  0049                     dtoa@p:
  4568                           
  4569                           ; 2 bytes @ 0x29
  4570  0049                     	ds	2
  4571  004B                     dtoa@w:
  4572                           
  4573                           ; 2 bytes @ 0x2B
  4574  004B                     	ds	1
  4575  004C                     ___fladd@a:
  4576                           
  4577                           ; 4 bytes @ 0x2C
  4578  004C                     	ds	1
  4579  004D                     dtoa@s:
  4580                           
  4581                           ; 2 bytes @ 0x2D
  4582  004D                     	ds	2
  4583  004F                     dtoa@n:
  4584                           
  4585                           ; 8 bytes @ 0x2F
  4586  004F                     	ds	1
  4587  0050                     ??___fladd:
  4588                           
  4589                           ; 1 bytes @ 0x30
  4590  0050                     	ds	7
  4591  0057                     dtoa@i:
  4592                           
  4593                           ; 2 bytes @ 0x37
  4594  0057                     	ds	1
  4595  0058                     ___fladd@signs:
  4596                           
  4597                           ; 1 bytes @ 0x38
  4598  0058                     	ds	1
  4599  0059                     ?_vfpfcnvrt:
  4600  0059                     ___fladd@aexp:	
  4601                           ; 2 bytes @ 0x39
  4602                           
  4603  0059                     vfpfcnvrt@fmt:	
  4604                           ; 1 bytes @ 0x39
  4605                           
  4606                           
  4607                           ; 1 bytes @ 0x39
  4608  0059                     	ds	1
  4609  005A                     ___fladd@bexp:
  4610  005A                     vfpfcnvrt@ap:	
  4611                           ; 1 bytes @ 0x3A
  4612                           
  4613                           
  4614                           ; 1 bytes @ 0x3A
  4615  005A                     	ds	1
  4616  005B                     ??_vfpfcnvrt:
  4617  005B                     ___fladd@grs:	
  4618                           ; 1 bytes @ 0x3B
  4619                           
  4620                           
  4621                           ; 1 bytes @ 0x3B
  4622  005B                     	ds	1
  4623  005C                     ?___fltol:
  4624  005C                     ___fltol@f1:	
  4625                           ; 4 bytes @ 0x3C
  4626                           
  4627                           
  4628                           ; 4 bytes @ 0x3C
  4629  005C                     	ds	4
  4630  0060                     ??___fltol:
  4631  0060                     vfpfcnvrt@ll:	
  4632                           ; 1 bytes @ 0x40
  4633                           
  4634                           
  4635                           ; 8 bytes @ 0x40
  4636  0060                     	ds	5
  4637  0065                     ___fltol@sign1:
  4638                           
  4639                           ; 1 bytes @ 0x45
  4640  0065                     	ds	1
  4641  0066                     ___fltol@exp1:
  4642                           
  4643                           ; 1 bytes @ 0x46
  4644  0066                     	ds	2
  4645  0068                     vfpfcnvrt@fp:
  4646                           
  4647                           ; 1 bytes @ 0x48
  4648  0068                     	ds	1
  4649  0069                     ?_vfprintf:
  4650  0069                     vfprintf@fmt:	
  4651                           ; 2 bytes @ 0x49
  4652                           
  4653                           
  4654                           ; 2 bytes @ 0x49
  4655  0069                     	ds	2
  4656  006B                     vfprintf@ap:
  4657                           
  4658                           ; 1 bytes @ 0x4B
  4659  006B                     	ds	1
  4660  006C                     ??_vfprintf:
  4661                           
  4662                           ; 1 bytes @ 0x4C
  4663  006C                     	ds	2
  4664  006E                     ??_sprintf:
  4665                           
  4666                           ; 1 bytes @ 0x4E
  4667  006E                     	ds	1
  4668                           
  4669                           	psect	maintext
  4670  0086                     __pmaintext:	
  4671 ;;
  4672 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  4673 ;;
  4674 ;; *************** function _main *****************
  4675 ;; Defined at:
  4676 ;;		line 89 in file "main.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;		None
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;		None
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  1    wreg      void 
  4683 ;; Registers used:
  4684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4685 ;; Tracked objects:
  4686 ;;		On entry : B1F/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4692 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4693 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4694 ;;Total ram usage:        3 bytes
  4695 ;; Hardware stack levels required when called: 10
  4696 ;; This function calls:
  4697 ;;		_Avg
  4698 ;;		_Init345
  4699 ;;		_InitPinOut
  4700 ;;		_SiInit
  4701 ;;		_SiPuts
  4702 ;;		_TiGetTics
  4703 ;;		_TiGetTimer
  4704 ;;		_TiInitTimer
  4705 ;;		_TiResetTics
  4706 ;;		___fladd
  4707 ;;		___flge
  4708 ;;		___flmul
  4709 ;;		___fltol
  4710 ;;		___xxtofl
  4711 ;;		_fabsf
  4712 ;;		_initMSSP1_I2C
  4713 ;;		_sprintf
  4714 ;;		_valorAngle
  4715 ;; This function is called by:
  4716 ;;		Startup code after reset
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720  0086                     _main:	
  4721                           ;psect for function _main
  4722                           
  4723  0086                     l4421:	
  4724                           ;incstack = 0
  4725                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4726                           
  4727                           
  4728                           ;main.c: 90:     static int T;;main.c: 91:     static int Estat, res = 0;;main.c: 92:   
      +                            static int Xant,Yant,Zant, Zmostra,Xmostra,Ymostra,i,r, j, contadorInit,cal, xcal,ycal
      +                          ,zcal,Xoriginal, Yoriginal, Zoriginal,Za,Xa,Ya = 0;;main.c: 93:     static signed int x 
      +                          ,y, z;;main.c: 94:      static double accX,accY,accZ;;main.c: 95:     static int x0,x1, 
      +                          y0, y1, z0, z1;;main.c: 96:     static float roll ;;main.c: 97:     static char tmp[30];
      +                          ;main.c: 98:     InitPinOut();
  4729  0086  3196  26E0  3180   	fcall	_InitPinOut
  4730                           
  4731                           ;main.c: 99:     initMSSP1_I2C();
  4732  0089  3196  261A  3180   	fcall	_initMSSP1_I2C
  4733  008C                     l4423:
  4734                           
  4735                           ;main.c: 100:     TiInitTimer(); SiInit(0);
  4736  008C  3197  270B  3180   	fcall	_TiInitTimer
  4737  008F                     l4425:
  4738  008F  3000               	movlw	0
  4739  0090  0020               	movlb	0	; select bank0
  4740  0091  00A0               	movwf	SiInit@Baud
  4741  0092  00A1               	movwf	SiInit@Baud+1
  4742  0093  3195  25B8  3180   	fcall	_SiInit
  4743  0096                     l4427:
  4744                           
  4745                           ;main.c: 101:     LATBbits.LATB2 = 1;
  4746  0096  0020               	movlb	0	; select bank0
  4747  0097  1517               	bsf	23,2	;volatile
  4748  0098                     l179:	
  4749                           ;main.c: 103:     while(1){
  4750                           
  4751  0098  0064               	clrwdt	;# 
  4752                           
  4753                           ;main.c: 105:         switch(Estat){
  4754  0099  2C24               	goto	l4517
  4755  009A                     l4429:
  4756                           
  4757                           ;main.c: 107:                 T = TiGetTimer(); Estat =1;
  4758  009A  3188  200D  3180   	fcall	_TiGetTimer
  4759  009D  0020               	movlb	0	; select bank0
  4760  009E  0825               	movf	?_TiGetTimer+1,w
  4761  009F  0021               	movlb	1	; select bank1
  4762  00A0  00D5               	movwf	(main@T+1)^(0+128)
  4763  00A1  0020               	movlb	0	; select bank0
  4764  00A2  0824               	movf	?_TiGetTimer,w
  4765  00A3  0021               	movlb	1	; select bank1
  4766  00A4  00D4               	movwf	main@T^(0+128)
  4767  00A5                     l4431:
  4768  00A5  3001               	movlw	1
  4769  00A6  00D2               	movwf	main@Estat^(0+128)
  4770  00A7  3000               	movlw	0
  4771  00A8  00D3               	movwf	(main@Estat^(0+128)+1)
  4772                           
  4773                           ;main.c: 108:                 break;
  4774  00A9  2898               	goto	l179
  4775  00AA                     l4433:
  4776                           
  4777                           ;main.c: 110:                 if(TiGetTics(T)>100){
  4778  00AA  0855               	movf	(main@T+1)^(0+128),w
  4779  00AB  0020               	movlb	0	; select bank0
  4780  00AC  00A5               	movwf	TiGetTics@Handle+1
  4781  00AD  0021               	movlb	1	; select bank1
  4782  00AE  0854               	movf	main@T^(0+128),w
  4783  00AF  0020               	movlb	0	; select bank0
  4784  00B0  00A4               	movwf	TiGetTics@Handle
  4785  00B1  3196  2601  3180   	fcall	_TiGetTics
  4786  00B4  3000               	movlw	0
  4787  00B5  0020               	movlb	0	; select bank0
  4788  00B6  0225               	subwf	?_TiGetTics+1,w
  4789  00B7  3065               	movlw	101
  4790  00B8  1903               	skipnz
  4791  00B9  0224               	subwf	?_TiGetTics,w
  4792  00BA  1C03               	skipc
  4793  00BB  28BD               	goto	u4771
  4794  00BC  28BE               	goto	u4770
  4795  00BD                     u4771:
  4796  00BD  2898               	goto	l179
  4797  00BE                     u4770:
  4798  00BE                     l4435:
  4799                           
  4800                           ;main.c: 111:                     Init345(); Estat = 24; TiResetTics(T);SiPuts("Iniciali
      +                          tzant....\n");Avg(0,0,0);
  4801  00BE  3197  2762  3180   	fcall	_Init345
  4802  00C1                     l4437:
  4803  00C1  3018               	movlw	24
  4804  00C2  0021               	movlb	1	; select bank1
  4805  00C3  00D2               	movwf	main@Estat^(0+128)
  4806  00C4  3000               	movlw	0
  4807  00C5  00D3               	movwf	(main@Estat^(0+128)+1)
  4808  00C6                     l4439:
  4809  00C6  0855               	movf	(main@T+1)^(0+128),w
  4810  00C7  0020               	movlb	0	; select bank0
  4811  00C8  00A5               	movwf	TiResetTics@Handle+1
  4812  00C9  0021               	movlb	1	; select bank1
  4813  00CA  0854               	movf	main@T^(0+128),w
  4814  00CB  0020               	movlb	0	; select bank0
  4815  00CC  00A4               	movwf	TiResetTics@Handle
  4816  00CD  3195  257B  3180   	fcall	_TiResetTics
  4817  00D0                     l4441:
  4818  00D0  3000               	movlw	low (STR_1| (0+32768))
  4819  00D1  0020               	movlb	0	; select bank0
  4820  00D2  00A1               	movwf	SiPuts@s
  4821  00D3  3098               	movlw	high (STR_1| (0+32768))
  4822  00D4  00A2               	movwf	SiPuts@s+1
  4823  00D5  3195  25E8  3180   	fcall	_SiPuts
  4824  00D8                     l4443:
  4825  00D8  3000               	movlw	0
  4826  00D9  0020               	movlb	0	; select bank0
  4827  00DA  00A3               	movwf	Avg@x
  4828  00DB  00A4               	movwf	Avg@x+1
  4829  00DC  3000               	movlw	0
  4830  00DD  00A5               	movwf	Avg@y
  4831  00DE  00A6               	movwf	Avg@y+1
  4832  00DF  3000               	movlw	0
  4833  00E0  00A7               	movwf	Avg@z
  4834  00E1  00A8               	movwf	Avg@z+1
  4835  00E2  3188  2049  3180   	fcall	_Avg
  4836  00E5  2898               	goto	l179
  4837  00E6                     l4445:
  4838                           
  4839                           ;main.c: 115:                 if(TiGetTics(T)>30){
  4840  00E6  0855               	movf	(main@T+1)^(0+128),w
  4841  00E7  0020               	movlb	0	; select bank0
  4842  00E8  00A5               	movwf	TiGetTics@Handle+1
  4843  00E9  0021               	movlb	1	; select bank1
  4844  00EA  0854               	movf	main@T^(0+128),w
  4845  00EB  0020               	movlb	0	; select bank0
  4846  00EC  00A4               	movwf	TiGetTics@Handle
  4847  00ED  3196  2601  3180   	fcall	_TiGetTics
  4848  00F0  3000               	movlw	0
  4849  00F1  0020               	movlb	0	; select bank0
  4850  00F2  0225               	subwf	?_TiGetTics+1,w
  4851  00F3  301F               	movlw	31
  4852  00F4  1903               	skipnz
  4853  00F5  0224               	subwf	?_TiGetTics,w
  4854  00F6  1C03               	skipc
  4855  00F7  28F9               	goto	u4781
  4856  00F8  28FA               	goto	u4780
  4857  00F9                     u4781:
  4858  00F9  2898               	goto	l179
  4859  00FA                     u4780:
  4860  00FA                     l4447:
  4861                           
  4862                           ;main.c: 116:                     Estat = 25; TiResetTics(T);cal = 1;
  4863  00FA  3019               	movlw	25
  4864  00FB  0021               	movlb	1	; select bank1
  4865  00FC  00D2               	movwf	main@Estat^(0+128)
  4866  00FD  3000               	movlw	0
  4867  00FE  00D3               	movwf	(main@Estat^(0+128)+1)
  4868  00FF                     l4449:
  4869  00FF  0855               	movf	(main@T+1)^(0+128),w
  4870  0100  0020               	movlb	0	; select bank0
  4871  0101  00A5               	movwf	TiResetTics@Handle+1
  4872  0102  0021               	movlb	1	; select bank1
  4873  0103  0854               	movf	main@T^(0+128),w
  4874  0104  0020               	movlb	0	; select bank0
  4875  0105  00A4               	movwf	TiResetTics@Handle
  4876  0106  3195  257B  3180   	fcall	_TiResetTics
  4877  0109                     l4451:
  4878  0109  3001               	movlw	1
  4879  010A  0021               	movlb	1	; select bank1
  4880  010B  00BA               	movwf	main@cal^(0+128)
  4881  010C  3000               	movlw	0
  4882  010D  00BB               	movwf	(main@cal^(0+128)+1)
  4883  010E  2898               	goto	l179
  4884  010F                     l4453:
  4885                           
  4886                           ;main.c: 120:                 Avg(3,3,2);
  4887  010F  3003               	movlw	3
  4888  0110  0020               	movlb	0	; select bank0
  4889  0111  00A3               	movwf	Avg@x
  4890  0112  3000               	movlw	0
  4891  0113  00A4               	movwf	Avg@x+1
  4892  0114  3003               	movlw	3
  4893  0115  00A5               	movwf	Avg@y
  4894  0116  3000               	movlw	0
  4895  0117  00A6               	movwf	Avg@y+1
  4896  0118  3002               	movlw	2
  4897  0119  00A7               	movwf	Avg@z
  4898  011A  3000               	movlw	0
  4899  011B  00A8               	movwf	Avg@z+1
  4900  011C  3188  2049  3180   	fcall	_Avg
  4901  011F                     l4455:
  4902                           
  4903                           ;main.c: 121:                 Estat = 2;TiResetTics(T);
  4904  011F  3002               	movlw	2
  4905  0120  0021               	movlb	1	; select bank1
  4906  0121  00D2               	movwf	main@Estat^(0+128)
  4907  0122  3000               	movlw	0
  4908  0123  00D3               	movwf	(main@Estat^(0+128)+1)
  4909  0124                     l4457:
  4910  0124  0855               	movf	(main@T+1)^(0+128),w
  4911  0125  0020               	movlb	0	; select bank0
  4912  0126  00A5               	movwf	TiResetTics@Handle+1
  4913  0127  0021               	movlb	1	; select bank1
  4914  0128  0854               	movf	main@T^(0+128),w
  4915  0129  0020               	movlb	0	; select bank0
  4916  012A  00A4               	movwf	TiResetTics@Handle
  4917  012B  3195  257B  3180   	fcall	_TiResetTics
  4918                           
  4919                           ;main.c: 122:                 break;
  4920  012E  2898               	goto	l179
  4921  012F                     l188:	
  4922                           ;main.c: 123:             case 2:
  4923                           
  4924  012F  0064               	clrwdt	;# 
  4925  0130                     l4459:
  4926                           
  4927                           ;main.c: 125:                 x0 = valorAngle(0x32);
  4928  0130  3032               	movlw	50
  4929  0131  3197  27C7  3180   	fcall	_valorAngle
  4930  0134  0020               	movlb	0	; select bank0
  4931  0135  0824               	movf	?_valorAngle+1,w
  4932  0136  0021               	movlb	1	; select bank1
  4933  0137  00B5               	movwf	(main@x0+1)^(0+128)
  4934  0138  0020               	movlb	0	; select bank0
  4935  0139  0823               	movf	?_valorAngle,w
  4936  013A  0021               	movlb	1	; select bank1
  4937  013B  00B4               	movwf	main@x0^(0+128)
  4938                           
  4939                           ;main.c: 126:                 x1 = valorAngle(0x33);
  4940  013C  3033               	movlw	51
  4941  013D  3197  27C7  3180   	fcall	_valorAngle
  4942  0140  0020               	movlb	0	; select bank0
  4943  0141  0824               	movf	?_valorAngle+1,w
  4944  0142  0021               	movlb	1	; select bank1
  4945  0143  00B3               	movwf	(main@x1+1)^(0+128)
  4946  0144  0020               	movlb	0	; select bank0
  4947  0145  0823               	movf	?_valorAngle,w
  4948  0146  0021               	movlb	1	; select bank1
  4949  0147  00B2               	movwf	main@x1^(0+128)
  4950                           
  4951                           ;main.c: 127:                 y0 = valorAngle(0x34);
  4952  0148  3034               	movlw	52
  4953  0149  3197  27C7  3180   	fcall	_valorAngle
  4954  014C  0020               	movlb	0	; select bank0
  4955  014D  0824               	movf	?_valorAngle+1,w
  4956  014E  0021               	movlb	1	; select bank1
  4957  014F  00B1               	movwf	(main@y0+1)^(0+128)
  4958  0150  0020               	movlb	0	; select bank0
  4959  0151  0823               	movf	?_valorAngle,w
  4960  0152  0021               	movlb	1	; select bank1
  4961  0153  00B0               	movwf	main@y0^(0+128)
  4962                           
  4963                           ;main.c: 128:                 y1 = valorAngle(0x35);
  4964  0154  3035               	movlw	53
  4965  0155  3197  27C7  3180   	fcall	_valorAngle
  4966  0158  0020               	movlb	0	; select bank0
  4967  0159  0824               	movf	?_valorAngle+1,w
  4968  015A  0021               	movlb	1	; select bank1
  4969  015B  00AF               	movwf	(main@y1+1)^(0+128)
  4970  015C  0020               	movlb	0	; select bank0
  4971  015D  0823               	movf	?_valorAngle,w
  4972  015E  0021               	movlb	1	; select bank1
  4973  015F  00AE               	movwf	main@y1^(0+128)
  4974                           
  4975                           ;main.c: 129:                 z0 = valorAngle(0x36);
  4976  0160  3036               	movlw	54
  4977  0161  3197  27C7  3180   	fcall	_valorAngle
  4978  0164  0020               	movlb	0	; select bank0
  4979  0165  0824               	movf	?_valorAngle+1,w
  4980  0166  0021               	movlb	1	; select bank1
  4981  0167  00AD               	movwf	(main@z0+1)^(0+128)
  4982  0168  0020               	movlb	0	; select bank0
  4983  0169  0823               	movf	?_valorAngle,w
  4984  016A  0021               	movlb	1	; select bank1
  4985  016B  00AC               	movwf	main@z0^(0+128)
  4986                           
  4987                           ;main.c: 130:                 z1 = valorAngle(0x37);
  4988  016C  3037               	movlw	55
  4989  016D  3197  27C7  3180   	fcall	_valorAngle
  4990  0170  0020               	movlb	0	; select bank0
  4991  0171  0824               	movf	?_valorAngle+1,w
  4992  0172  0021               	movlb	1	; select bank1
  4993  0173  00AB               	movwf	(main@z1+1)^(0+128)
  4994  0174  0020               	movlb	0	; select bank0
  4995  0175  0823               	movf	?_valorAngle,w
  4996  0176  0021               	movlb	1	; select bank1
  4997  0177  00AA               	movwf	main@z1^(0+128)
  4998  0178                     l4461:
  4999                           
  5000                           ;main.c: 132:                 x = (x0 | (x1 << 8));
  5001  0178  0833               	movf	(main@x1+1)^(0+128),w
  5002  0179  0022               	movlb	2	; select bank2
  5003  017A  00E3               	movwf	(??_main^(0+256)+1)
  5004  017B  0021               	movlb	1	; select bank1
  5005  017C  0832               	movf	main@x1^(0+128),w
  5006  017D  0022               	movlb	2	; select bank2
  5007  017E  00E2               	movwf	??_main^(0+256)
  5008  017F  0862               	movf	??_main^(0+256),w
  5009  0180  00E3               	movwf	(??_main^(0+256)+1)
  5010  0181  01E2               	clrf	??_main^(0+256)
  5011  0182  0021               	movlb	1	; select bank1
  5012  0183  0834               	movf	main@x0^(0+128),w
  5013  0184  0022               	movlb	2	; select bank2
  5014  0185  0462               	iorwf	??_main^(0+256),w
  5015  0186  0021               	movlb	1	; select bank1
  5016  0187  00DA               	movwf	main@x^(0+128)
  5017  0188  0835               	movf	(main@x0+1)^(0+128),w
  5018  0189  0022               	movlb	2	; select bank2
  5019  018A  0463               	iorwf	(??_main+1)^(0+256),w
  5020  018B  0021               	movlb	1	; select bank1
  5021  018C  00DB               	movwf	(main@x+1)^(0+128)
  5022  018D                     l4463:
  5023                           
  5024                           ;main.c: 133:                 y = (y0 | (y1 << 8));
  5025  018D  082F               	movf	(main@y1+1)^(0+128),w
  5026  018E  0022               	movlb	2	; select bank2
  5027  018F  00E3               	movwf	(??_main^(0+256)+1)
  5028  0190  0021               	movlb	1	; select bank1
  5029  0191  082E               	movf	main@y1^(0+128),w
  5030  0192  0022               	movlb	2	; select bank2
  5031  0193  00E2               	movwf	??_main^(0+256)
  5032  0194  0862               	movf	??_main^(0+256),w
  5033  0195  00E3               	movwf	(??_main^(0+256)+1)
  5034  0196  01E2               	clrf	??_main^(0+256)
  5035  0197  0021               	movlb	1	; select bank1
  5036  0198  0830               	movf	main@y0^(0+128),w
  5037  0199  0022               	movlb	2	; select bank2
  5038  019A  0462               	iorwf	??_main^(0+256),w
  5039  019B  0021               	movlb	1	; select bank1
  5040  019C  00D8               	movwf	main@y^(0+128)
  5041  019D  0831               	movf	(main@y0+1)^(0+128),w
  5042  019E  0022               	movlb	2	; select bank2
  5043  019F  0463               	iorwf	(??_main+1)^(0+256),w
  5044  01A0  0021               	movlb	1	; select bank1
  5045  01A1  00D9               	movwf	(main@y+1)^(0+128)
  5046  01A2                     l4465:
  5047                           
  5048                           ;main.c: 134:                 z = (z0 | (z1 << 8));
  5049  01A2  082B               	movf	(main@z1+1)^(0+128),w
  5050  01A3  0022               	movlb	2	; select bank2
  5051  01A4  00E3               	movwf	(??_main^(0+256)+1)
  5052  01A5  0021               	movlb	1	; select bank1
  5053  01A6  082A               	movf	main@z1^(0+128),w
  5054  01A7  0022               	movlb	2	; select bank2
  5055  01A8  00E2               	movwf	??_main^(0+256)
  5056  01A9  0862               	movf	??_main^(0+256),w
  5057  01AA  00E3               	movwf	(??_main^(0+256)+1)
  5058  01AB  01E2               	clrf	??_main^(0+256)
  5059  01AC  0021               	movlb	1	; select bank1
  5060  01AD  082C               	movf	main@z0^(0+128),w
  5061  01AE  0022               	movlb	2	; select bank2
  5062  01AF  0462               	iorwf	??_main^(0+256),w
  5063  01B0  0021               	movlb	1	; select bank1
  5064  01B1  00D6               	movwf	main@z^(0+128)
  5065  01B2  082D               	movf	(main@z0+1)^(0+128),w
  5066  01B3  0022               	movlb	2	; select bank2
  5067  01B4  0463               	iorwf	(??_main+1)^(0+256),w
  5068  01B5  0021               	movlb	1	; select bank1
  5069  01B6  00D7               	movwf	(main@z+1)^(0+128)
  5070  01B7                     l4467:
  5071                           
  5072                           ;main.c: 135:                 Ya = Ymostra;
  5073  01B7  0845               	movf	(main@Ymostra+1)^(0+128),w
  5074  01B8  0022               	movlb	2	; select bank2
  5075  01B9  00B7               	movwf	(main@Ya+1)^(0+256)
  5076  01BA  0021               	movlb	1	; select bank1
  5077  01BB  0844               	movf	main@Ymostra^(0+128),w
  5078  01BC  0022               	movlb	2	; select bank2
  5079  01BD  00B6               	movwf	main@Ya^(0+256)
  5080                           
  5081                           ;main.c: 136:                 Ymostra = 0.5*y + (1-0.5)*Yant;
  5082  01BE  0021               	movlb	1	; select bank1
  5083  01BF  0858               	movf	main@y^(0+128),w
  5084  01C0  0020               	movlb	0	; select bank0
  5085  01C1  00A0               	movwf	___xxtofl@val
  5086  01C2  0021               	movlb	1	; select bank1
  5087  01C3  0859               	movf	(main@y+1)^(0+128),w
  5088  01C4  0020               	movlb	0	; select bank0
  5089  01C5  00A1               	movwf	___xxtofl@val+1
  5090  01C6  0D89               	rlf	9,f
  5091  01C7  3B89               	subwfb	9,f
  5092  01C8  0989               	comf	9,f
  5093  01C9  00A2               	movwf	___xxtofl@val+2
  5094  01CA  00A3               	movwf	___xxtofl@val+3
  5095  01CB  3001               	movlw	1
  5096  01CC  3189  21EA  3180   	fcall	___xxtofl
  5097  01CF  0020               	movlb	0	; select bank0
  5098  01D0  0823               	movf	?___xxtofl+3,w
  5099  01D1  00B5               	movwf	___flmul@a+3
  5100  01D2  0822               	movf	?___xxtofl+2,w
  5101  01D3  00B4               	movwf	___flmul@a+2
  5102  01D4  0821               	movf	?___xxtofl+1,w
  5103  01D5  00B3               	movwf	___flmul@a+1
  5104  01D6  0820               	movf	?___xxtofl,w
  5105  01D7  00B2               	movwf	___flmul@a
  5106  01D8  303F               	movlw	63
  5107  01D9  00B1               	movwf	___flmul@b+3
  5108  01DA  3000               	movlw	0
  5109  01DB  00B0               	movwf	___flmul@b+2
  5110  01DC  3000               	movlw	0
  5111  01DD  00AF               	movwf	___flmul@b+1
  5112  01DE  3000               	movlw	0
  5113  01DF  00AE               	movwf	___flmul@b
  5114  01E0  3184  2443  3180   	fcall	___flmul
  5115  01E3  0020               	movlb	0	; select bank0
  5116  01E4  0831               	movf	?___flmul+3,w
  5117  01E5  00CF               	movwf	___fladd@a+3
  5118  01E6  0830               	movf	?___flmul+2,w
  5119  01E7  00CE               	movwf	___fladd@a+2
  5120  01E8  082F               	movf	?___flmul+1,w
  5121  01E9  00CD               	movwf	___fladd@a+1
  5122  01EA  082E               	movf	?___flmul,w
  5123  01EB  00CC               	movwf	___fladd@a
  5124  01EC  0021               	movlb	1	; select bank1
  5125  01ED  084C               	movf	main@Yant^(0+128),w
  5126  01EE  0020               	movlb	0	; select bank0
  5127  01EF  00A0               	movwf	___xxtofl@val
  5128  01F0  0021               	movlb	1	; select bank1
  5129  01F1  084D               	movf	(main@Yant+1)^(0+128),w
  5130  01F2  0020               	movlb	0	; select bank0
  5131  01F3  00A1               	movwf	___xxtofl@val+1
  5132  01F4  0D89               	rlf	9,f
  5133  01F5  3B89               	subwfb	9,f
  5134  01F6  0989               	comf	9,f
  5135  01F7  00A2               	movwf	___xxtofl@val+2
  5136  01F8  00A3               	movwf	___xxtofl@val+3
  5137  01F9  3001               	movlw	1
  5138  01FA  3189  21EA  3180   	fcall	___xxtofl
  5139  01FD  0020               	movlb	0	; select bank0
  5140  01FE  0823               	movf	?___xxtofl+3,w
  5141  01FF  00B5               	movwf	___flmul@a+3
  5142  0200  0822               	movf	?___xxtofl+2,w
  5143  0201  00B4               	movwf	___flmul@a+2
  5144  0202  0821               	movf	?___xxtofl+1,w
  5145  0203  00B3               	movwf	___flmul@a+1
  5146  0204  0820               	movf	?___xxtofl,w
  5147  0205  00B2               	movwf	___flmul@a
  5148  0206  303F               	movlw	63
  5149  0207  00B1               	movwf	___flmul@b+3
  5150  0208  3000               	movlw	0
  5151  0209  00B0               	movwf	___flmul@b+2
  5152  020A  3000               	movlw	0
  5153  020B  00AF               	movwf	___flmul@b+1
  5154  020C  3000               	movlw	0
  5155  020D  00AE               	movwf	___flmul@b
  5156  020E  3184  2443  3180   	fcall	___flmul
  5157  0211  0020               	movlb	0	; select bank0
  5158  0212  0831               	movf	?___flmul+3,w
  5159  0213  00CB               	movwf	___fladd@b+3
  5160  0214  0830               	movf	?___flmul+2,w
  5161  0215  00CA               	movwf	___fladd@b+2
  5162  0216  082F               	movf	?___flmul+1,w
  5163  0217  00C9               	movwf	___fladd@b+1
  5164  0218  082E               	movf	?___flmul,w
  5165  0219  00C8               	movwf	___fladd@b
  5166  021A  318D  25C8  3180   	fcall	___fladd
  5167  021D  0020               	movlb	0	; select bank0
  5168  021E  084B               	movf	?___fladd+3,w
  5169  021F  00DF               	movwf	___fltol@f1+3
  5170  0220  084A               	movf	?___fladd+2,w
  5171  0221  00DE               	movwf	___fltol@f1+2
  5172  0222  0849               	movf	?___fladd+1,w
  5173  0223  00DD               	movwf	___fltol@f1+1
  5174  0224  0848               	movf	?___fladd,w
  5175  0225  00DC               	movwf	___fltol@f1
  5176  0226  3188  20EA  3180   	fcall	___fltol
  5177  0229  0020               	movlb	0	; select bank0
  5178  022A  085D               	movf	?___fltol+1,w
  5179  022B  0021               	movlb	1	; select bank1
  5180  022C  00C5               	movwf	(main@Ymostra+1)^(0+128)
  5181  022D  0020               	movlb	0	; select bank0
  5182  022E  085C               	movf	?___fltol,w
  5183  022F  0021               	movlb	1	; select bank1
  5184  0230  00C4               	movwf	main@Ymostra^(0+128)
  5185  0231                     l4469:
  5186                           
  5187                           ;main.c: 137:                 Yant = Ymostra;
  5188  0231  0845               	movf	(main@Ymostra+1)^(0+128),w
  5189  0232  00CD               	movwf	(main@Yant+1)^(0+128)
  5190  0233  0844               	movf	main@Ymostra^(0+128),w
  5191  0234  00CC               	movwf	main@Yant^(0+128)
  5192  0235                     l4471:
  5193                           
  5194                           ;main.c: 138:                 Xa = Xmostra;
  5195  0235  0847               	movf	(main@Xmostra+1)^(0+128),w
  5196  0236  0022               	movlb	2	; select bank2
  5197  0237  00B9               	movwf	(main@Xa+1)^(0+256)
  5198  0238  0021               	movlb	1	; select bank1
  5199  0239  0846               	movf	main@Xmostra^(0+128),w
  5200  023A  0022               	movlb	2	; select bank2
  5201  023B  00B8               	movwf	main@Xa^(0+256)
  5202                           
  5203                           ;main.c: 139:                 Xmostra = 0.5*x + (1-0.5)*Xant;
  5204  023C  0021               	movlb	1	; select bank1
  5205  023D  085A               	movf	main@x^(0+128),w
  5206  023E  0020               	movlb	0	; select bank0
  5207  023F  00A0               	movwf	___xxtofl@val
  5208  0240  0021               	movlb	1	; select bank1
  5209  0241  085B               	movf	(main@x+1)^(0+128),w
  5210  0242  0020               	movlb	0	; select bank0
  5211  0243  00A1               	movwf	___xxtofl@val+1
  5212  0244  0D89               	rlf	9,f
  5213  0245  3B89               	subwfb	9,f
  5214  0246  0989               	comf	9,f
  5215  0247  00A2               	movwf	___xxtofl@val+2
  5216  0248  00A3               	movwf	___xxtofl@val+3
  5217  0249  3001               	movlw	1
  5218  024A  3189  21EA  3180   	fcall	___xxtofl
  5219  024D  0020               	movlb	0	; select bank0
  5220  024E  0823               	movf	?___xxtofl+3,w
  5221  024F  00B5               	movwf	___flmul@a+3
  5222  0250  0822               	movf	?___xxtofl+2,w
  5223  0251  00B4               	movwf	___flmul@a+2
  5224  0252  0821               	movf	?___xxtofl+1,w
  5225  0253  00B3               	movwf	___flmul@a+1
  5226  0254  0820               	movf	?___xxtofl,w
  5227  0255  00B2               	movwf	___flmul@a
  5228  0256  303F               	movlw	63
  5229  0257  00B1               	movwf	___flmul@b+3
  5230  0258  3000               	movlw	0
  5231  0259  00B0               	movwf	___flmul@b+2
  5232  025A  3000               	movlw	0
  5233  025B  00AF               	movwf	___flmul@b+1
  5234  025C  3000               	movlw	0
  5235  025D  00AE               	movwf	___flmul@b
  5236  025E  3184  2443  3180   	fcall	___flmul
  5237  0261  0020               	movlb	0	; select bank0
  5238  0262  0831               	movf	?___flmul+3,w
  5239  0263  00CF               	movwf	___fladd@a+3
  5240  0264  0830               	movf	?___flmul+2,w
  5241  0265  00CE               	movwf	___fladd@a+2
  5242  0266  082F               	movf	?___flmul+1,w
  5243  0267  00CD               	movwf	___fladd@a+1
  5244  0268  082E               	movf	?___flmul,w
  5245  0269  00CC               	movwf	___fladd@a
  5246  026A  0021               	movlb	1	; select bank1
  5247  026B  084E               	movf	main@Xant^(0+128),w
  5248  026C  0020               	movlb	0	; select bank0
  5249  026D  00A0               	movwf	___xxtofl@val
  5250  026E  0021               	movlb	1	; select bank1
  5251  026F  084F               	movf	(main@Xant+1)^(0+128),w
  5252  0270  0020               	movlb	0	; select bank0
  5253  0271  00A1               	movwf	___xxtofl@val+1
  5254  0272  0D89               	rlf	9,f
  5255  0273  3B89               	subwfb	9,f
  5256  0274  0989               	comf	9,f
  5257  0275  00A2               	movwf	___xxtofl@val+2
  5258  0276  00A3               	movwf	___xxtofl@val+3
  5259  0277  3001               	movlw	1
  5260  0278  3189  21EA  3180   	fcall	___xxtofl
  5261  027B  0020               	movlb	0	; select bank0
  5262  027C  0823               	movf	?___xxtofl+3,w
  5263  027D  00B5               	movwf	___flmul@a+3
  5264  027E  0822               	movf	?___xxtofl+2,w
  5265  027F  00B4               	movwf	___flmul@a+2
  5266  0280  0821               	movf	?___xxtofl+1,w
  5267  0281  00B3               	movwf	___flmul@a+1
  5268  0282  0820               	movf	?___xxtofl,w
  5269  0283  00B2               	movwf	___flmul@a
  5270  0284  303F               	movlw	63
  5271  0285  00B1               	movwf	___flmul@b+3
  5272  0286  3000               	movlw	0
  5273  0287  00B0               	movwf	___flmul@b+2
  5274  0288  3000               	movlw	0
  5275  0289  00AF               	movwf	___flmul@b+1
  5276  028A  3000               	movlw	0
  5277  028B  00AE               	movwf	___flmul@b
  5278  028C  3184  2443  3180   	fcall	___flmul
  5279  028F  0020               	movlb	0	; select bank0
  5280  0290  0831               	movf	?___flmul+3,w
  5281  0291  00CB               	movwf	___fladd@b+3
  5282  0292  0830               	movf	?___flmul+2,w
  5283  0293  00CA               	movwf	___fladd@b+2
  5284  0294  082F               	movf	?___flmul+1,w
  5285  0295  00C9               	movwf	___fladd@b+1
  5286  0296  082E               	movf	?___flmul,w
  5287  0297  00C8               	movwf	___fladd@b
  5288  0298  318D  25C8  3180   	fcall	___fladd
  5289  029B  0020               	movlb	0	; select bank0
  5290  029C  084B               	movf	?___fladd+3,w
  5291  029D  00DF               	movwf	___fltol@f1+3
  5292  029E  084A               	movf	?___fladd+2,w
  5293  029F  00DE               	movwf	___fltol@f1+2
  5294  02A0  0849               	movf	?___fladd+1,w
  5295  02A1  00DD               	movwf	___fltol@f1+1
  5296  02A2  0848               	movf	?___fladd,w
  5297  02A3  00DC               	movwf	___fltol@f1
  5298  02A4  3188  20EA  3180   	fcall	___fltol
  5299  02A7  0020               	movlb	0	; select bank0
  5300  02A8  085D               	movf	?___fltol+1,w
  5301  02A9  0021               	movlb	1	; select bank1
  5302  02AA  00C7               	movwf	(main@Xmostra+1)^(0+128)
  5303  02AB  0020               	movlb	0	; select bank0
  5304  02AC  085C               	movf	?___fltol,w
  5305  02AD  0021               	movlb	1	; select bank1
  5306  02AE  00C6               	movwf	main@Xmostra^(0+128)
  5307  02AF                     l4473:
  5308                           
  5309                           ;main.c: 140:                 Xant = Xmostra;
  5310  02AF  0847               	movf	(main@Xmostra+1)^(0+128),w
  5311  02B0  00CF               	movwf	(main@Xant+1)^(0+128)
  5312  02B1  0846               	movf	main@Xmostra^(0+128),w
  5313  02B2  00CE               	movwf	main@Xant^(0+128)
  5314  02B3                     l4475:
  5315                           
  5316                           ;main.c: 141:                 Za = Zmostra;
  5317  02B3  0849               	movf	(main@Zmostra+1)^(0+128),w
  5318  02B4  0022               	movlb	2	; select bank2
  5319  02B5  00BB               	movwf	(main@Za+1)^(0+256)
  5320  02B6  0021               	movlb	1	; select bank1
  5321  02B7  0848               	movf	main@Zmostra^(0+128),w
  5322  02B8  0022               	movlb	2	; select bank2
  5323  02B9  00BA               	movwf	main@Za^(0+256)
  5324                           
  5325                           ;main.c: 142:                 Zmostra = 0.5*z + (1-0.5)*Zant;
  5326  02BA  0021               	movlb	1	; select bank1
  5327  02BB  0856               	movf	main@z^(0+128),w
  5328  02BC  0020               	movlb	0	; select bank0
  5329  02BD  00A0               	movwf	___xxtofl@val
  5330  02BE  0021               	movlb	1	; select bank1
  5331  02BF  0857               	movf	(main@z+1)^(0+128),w
  5332  02C0  0020               	movlb	0	; select bank0
  5333  02C1  00A1               	movwf	___xxtofl@val+1
  5334  02C2  0D89               	rlf	9,f
  5335  02C3  3B89               	subwfb	9,f
  5336  02C4  0989               	comf	9,f
  5337  02C5  00A2               	movwf	___xxtofl@val+2
  5338  02C6  00A3               	movwf	___xxtofl@val+3
  5339  02C7  3001               	movlw	1
  5340  02C8  3189  21EA  3180   	fcall	___xxtofl
  5341  02CB  0020               	movlb	0	; select bank0
  5342  02CC  0823               	movf	?___xxtofl+3,w
  5343  02CD  00B5               	movwf	___flmul@a+3
  5344  02CE  0822               	movf	?___xxtofl+2,w
  5345  02CF  00B4               	movwf	___flmul@a+2
  5346  02D0  0821               	movf	?___xxtofl+1,w
  5347  02D1  00B3               	movwf	___flmul@a+1
  5348  02D2  0820               	movf	?___xxtofl,w
  5349  02D3  00B2               	movwf	___flmul@a
  5350  02D4  303F               	movlw	63
  5351  02D5  00B1               	movwf	___flmul@b+3
  5352  02D6  3000               	movlw	0
  5353  02D7  00B0               	movwf	___flmul@b+2
  5354  02D8  3000               	movlw	0
  5355  02D9  00AF               	movwf	___flmul@b+1
  5356  02DA  3000               	movlw	0
  5357  02DB  00AE               	movwf	___flmul@b
  5358  02DC  3184  2443  3180   	fcall	___flmul
  5359  02DF  0020               	movlb	0	; select bank0
  5360  02E0  0831               	movf	?___flmul+3,w
  5361  02E1  00CF               	movwf	___fladd@a+3
  5362  02E2  0830               	movf	?___flmul+2,w
  5363  02E3  00CE               	movwf	___fladd@a+2
  5364  02E4  082F               	movf	?___flmul+1,w
  5365  02E5  00CD               	movwf	___fladd@a+1
  5366  02E6  082E               	movf	?___flmul,w
  5367  02E7  00CC               	movwf	___fladd@a
  5368  02E8  0021               	movlb	1	; select bank1
  5369  02E9  084A               	movf	main@Zant^(0+128),w
  5370  02EA  0020               	movlb	0	; select bank0
  5371  02EB  00A0               	movwf	___xxtofl@val
  5372  02EC  0021               	movlb	1	; select bank1
  5373  02ED  084B               	movf	(main@Zant+1)^(0+128),w
  5374  02EE  0020               	movlb	0	; select bank0
  5375  02EF  00A1               	movwf	___xxtofl@val+1
  5376  02F0  0D89               	rlf	9,f
  5377  02F1  3B89               	subwfb	9,f
  5378  02F2  0989               	comf	9,f
  5379  02F3  00A2               	movwf	___xxtofl@val+2
  5380  02F4  00A3               	movwf	___xxtofl@val+3
  5381  02F5  3001               	movlw	1
  5382  02F6  3189  21EA  3180   	fcall	___xxtofl
  5383  02F9  0020               	movlb	0	; select bank0
  5384  02FA  0823               	movf	?___xxtofl+3,w
  5385  02FB  00B5               	movwf	___flmul@a+3
  5386  02FC  0822               	movf	?___xxtofl+2,w
  5387  02FD  00B4               	movwf	___flmul@a+2
  5388  02FE  0821               	movf	?___xxtofl+1,w
  5389  02FF  00B3               	movwf	___flmul@a+1
  5390  0300  0820               	movf	?___xxtofl,w
  5391  0301  00B2               	movwf	___flmul@a
  5392  0302  303F               	movlw	63
  5393  0303  00B1               	movwf	___flmul@b+3
  5394  0304  3000               	movlw	0
  5395  0305  00B0               	movwf	___flmul@b+2
  5396  0306  3000               	movlw	0
  5397  0307  00AF               	movwf	___flmul@b+1
  5398  0308  3000               	movlw	0
  5399  0309  00AE               	movwf	___flmul@b
  5400  030A  3184  2443  3180   	fcall	___flmul
  5401  030D  0020               	movlb	0	; select bank0
  5402  030E  0831               	movf	?___flmul+3,w
  5403  030F  00CB               	movwf	___fladd@b+3
  5404  0310  0830               	movf	?___flmul+2,w
  5405  0311  00CA               	movwf	___fladd@b+2
  5406  0312  082F               	movf	?___flmul+1,w
  5407  0313  00C9               	movwf	___fladd@b+1
  5408  0314  082E               	movf	?___flmul,w
  5409  0315  00C8               	movwf	___fladd@b
  5410  0316  318D  25C8  3180   	fcall	___fladd
  5411  0319  0020               	movlb	0	; select bank0
  5412  031A  084B               	movf	?___fladd+3,w
  5413  031B  00DF               	movwf	___fltol@f1+3
  5414  031C  084A               	movf	?___fladd+2,w
  5415  031D  00DE               	movwf	___fltol@f1+2
  5416  031E  0849               	movf	?___fladd+1,w
  5417  031F  00DD               	movwf	___fltol@f1+1
  5418  0320  0848               	movf	?___fladd,w
  5419  0321  00DC               	movwf	___fltol@f1
  5420  0322  3188  20EA  3180   	fcall	___fltol
  5421  0325  0020               	movlb	0	; select bank0
  5422  0326  085D               	movf	?___fltol+1,w
  5423  0327  0021               	movlb	1	; select bank1
  5424  0328  00C9               	movwf	(main@Zmostra+1)^(0+128)
  5425  0329  0020               	movlb	0	; select bank0
  5426  032A  085C               	movf	?___fltol,w
  5427  032B  0021               	movlb	1	; select bank1
  5428  032C  00C8               	movwf	main@Zmostra^(0+128)
  5429  032D                     l4477:
  5430                           
  5431                           ;main.c: 143:                 Zant = Zmostra;
  5432  032D  0849               	movf	(main@Zmostra+1)^(0+128),w
  5433  032E  00CB               	movwf	(main@Zant+1)^(0+128)
  5434  032F  0848               	movf	main@Zmostra^(0+128),w
  5435  0330  00CA               	movwf	main@Zant^(0+128)
  5436  0331                     l4479:
  5437                           
  5438                           ;main.c: 144:                 if(contadorInit == 69) Estat = 3;
  5439  0331  3045               	movlw	69
  5440  0332  063C               	xorwf	main@contadorInit^(0+128),w
  5441  0333  043D               	iorwf	(main@contadorInit+1)^(0+128),w
  5442  0334  1D03               	btfss	3,2
  5443  0335  2B37               	goto	u4791
  5444  0336  2B38               	goto	u4790
  5445  0337                     u4791:
  5446  0337  2B3D               	goto	l4483
  5447  0338                     u4790:
  5448  0338                     l4481:
  5449  0338  3003               	movlw	3
  5450  0339  00D2               	movwf	main@Estat^(0+128)
  5451  033A  3000               	movlw	0
  5452  033B  00D3               	movwf	(main@Estat^(0+128)+1)
  5453  033C  2898               	goto	l179
  5454  033D                     l4483:
  5455  033D  3016               	movlw	22
  5456  033E  00D2               	movwf	main@Estat^(0+128)
  5457  033F  3000               	movlw	0
  5458  0340  00D3               	movwf	(main@Estat^(0+128)+1)
  5459  0341  2898               	goto	l179
  5460  0342                     l4485:
  5461                           
  5462                           ;main.c: 149:                     contadorInit++;
  5463  0342  3001               	movlw	1
  5464  0343  07BC               	addwf	main@contadorInit^(0+128),f
  5465  0344  3000               	movlw	0
  5466  0345  3DBD               	addwfc	(main@contadorInit+1)^(0+128),f
  5467  0346                     l4487:
  5468                           
  5469                           ;main.c: 153:                 if(contadorInit == 50){
  5470  0346  3032               	movlw	50
  5471  0347  063C               	xorwf	main@contadorInit^(0+128),w
  5472  0348  043D               	iorwf	(main@contadorInit+1)^(0+128),w
  5473  0349  1D03               	btfss	3,2
  5474  034A  2B4C               	goto	u4801
  5475  034B  2B4D               	goto	u4800
  5476  034C                     u4801:
  5477  034C  2B67               	goto	l4497
  5478  034D                     u4800:
  5479  034D                     l4489:
  5480                           
  5481                           ;main.c: 154:                     xcal = Xant; ycal = Yant;SiPuts("Inicialitzat!\n"); Es
      +                          tat = 3; contadorInit = 69;
  5482  034D  084F               	movf	(main@Xant+1)^(0+128),w
  5483  034E  00B9               	movwf	(main@xcal+1)^(0+128)
  5484  034F  084E               	movf	main@Xant^(0+128),w
  5485  0350  00B8               	movwf	main@xcal^(0+128)
  5486  0351  084D               	movf	(main@Yant+1)^(0+128),w
  5487  0352  00B7               	movwf	(main@ycal+1)^(0+128)
  5488  0353  084C               	movf	main@Yant^(0+128),w
  5489  0354  00B6               	movwf	main@ycal^(0+128)
  5490  0355                     l4491:
  5491  0355  3013               	movlw	low (STR_2| (0+32768))
  5492  0356  0020               	movlb	0	; select bank0
  5493  0357  00A1               	movwf	SiPuts@s
  5494  0358  3098               	movlw	high (STR_2| (0+32768))
  5495  0359  00A2               	movwf	SiPuts@s+1
  5496  035A  3195  25E8  3180   	fcall	_SiPuts
  5497  035D                     l4493:
  5498  035D  3003               	movlw	3
  5499  035E  0021               	movlb	1	; select bank1
  5500  035F  00D2               	movwf	main@Estat^(0+128)
  5501  0360  3000               	movlw	0
  5502  0361  00D3               	movwf	(main@Estat^(0+128)+1)
  5503  0362                     l4495:
  5504  0362  3045               	movlw	69
  5505  0363  00BC               	movwf	main@contadorInit^(0+128)
  5506  0364  3000               	movlw	0
  5507  0365  00BD               	movwf	(main@contadorInit^(0+128)+1)
  5508                           
  5509                           ;main.c: 155:                 }else{
  5510  0366  2898               	goto	l179
  5511  0367                     l4497:
  5512                           
  5513                           ;main.c: 156:                     Estat = 2;
  5514  0367  3002               	movlw	2
  5515  0368  00D2               	movwf	main@Estat^(0+128)
  5516  0369  3000               	movlw	0
  5517  036A  00D3               	movwf	(main@Estat^(0+128)+1)
  5518  036B  2898               	goto	l179
  5519  036C                     l4499:
  5520                           
  5521                           ;main.c: 161:                 if((fabsf(Xmostra - xcal) >= 10) || fabsf(Ymostra - ycal) 
      +                          >= 10){
  5522  036C  0838               	movf	main@xcal^(0+128),w
  5523  036D  0246               	subwf	main@Xmostra^(0+128),w
  5524  036E  0020               	movlb	0	; select bank0
  5525  036F  00A0               	movwf	___xxtofl@val
  5526  0370  0021               	movlb	1	; select bank1
  5527  0371  0839               	movf	(main@xcal+1)^(0+128),w
  5528  0372  3B47               	subwfb	(main@Xmostra+1)^(0+128),w
  5529  0373  0020               	movlb	0	; select bank0
  5530  0374  00A1               	movwf	___xxtofl@val+1
  5531  0375  01A2               	clrf	___xxtofl@val+2
  5532  0376  1BA1               	btfsc	___xxtofl@val+1,7
  5533  0377  03A2               	decf	___xxtofl@val+2,f
  5534  0378  0822               	movf	___xxtofl@val+2,w
  5535  0379  00A3               	movwf	___xxtofl@val+3
  5536  037A  3001               	movlw	1
  5537  037B  3189  21EA  3180   	fcall	___xxtofl
  5538  037E  0020               	movlb	0	; select bank0
  5539  037F  0823               	movf	?___xxtofl+3,w
  5540  0380  00B1               	movwf	fabsf@x+3
  5541  0381  0822               	movf	?___xxtofl+2,w
  5542  0382  00B0               	movwf	fabsf@x+2
  5543  0383  0821               	movf	?___xxtofl+1,w
  5544  0384  00AF               	movwf	fabsf@x+1
  5545  0385  0820               	movf	?___xxtofl,w
  5546  0386  00AE               	movwf	fabsf@x
  5547  0387  3196  268E  3180   	fcall	_fabsf
  5548  038A  0020               	movlb	0	; select bank0
  5549  038B  0831               	movf	?_fabsf+3,w
  5550  038C  00B9               	movwf	___flge@ff1+3
  5551  038D  0830               	movf	?_fabsf+2,w
  5552  038E  00B8               	movwf	___flge@ff1+2
  5553  038F  082F               	movf	?_fabsf+1,w
  5554  0390  00B7               	movwf	___flge@ff1+1
  5555  0391  082E               	movf	?_fabsf,w
  5556  0392  00B6               	movwf	___flge@ff1
  5557  0393  3041               	movlw	65
  5558  0394  00BD               	movwf	___flge@ff2+3
  5559  0395  3020               	movlw	32
  5560  0396  00BC               	movwf	___flge@ff2+2
  5561  0397  3000               	movlw	0
  5562  0398  00BB               	movwf	___flge@ff2+1
  5563  0399  3000               	movlw	0
  5564  039A  00BA               	movwf	___flge@ff2
  5565  039B  3189  215F  3180   	fcall	___flge
  5566  039E  1803               	btfsc	3,0
  5567  039F  2BA1               	goto	u4811
  5568  03A0  2BA2               	goto	u4810
  5569  03A1                     u4811:
  5570  03A1  2BD9               	goto	l4503
  5571  03A2                     u4810:
  5572  03A2                     l4501:
  5573  03A2  0021               	movlb	1	; select bank1
  5574  03A3  0836               	movf	main@ycal^(0+128),w
  5575  03A4  0244               	subwf	main@Ymostra^(0+128),w
  5576  03A5  0020               	movlb	0	; select bank0
  5577  03A6  00A0               	movwf	___xxtofl@val
  5578  03A7  0021               	movlb	1	; select bank1
  5579  03A8  0837               	movf	(main@ycal+1)^(0+128),w
  5580  03A9  3B45               	subwfb	(main@Ymostra+1)^(0+128),w
  5581  03AA  0020               	movlb	0	; select bank0
  5582  03AB  00A1               	movwf	___xxtofl@val+1
  5583  03AC  01A2               	clrf	___xxtofl@val+2
  5584  03AD  1BA1               	btfsc	___xxtofl@val+1,7
  5585  03AE  03A2               	decf	___xxtofl@val+2,f
  5586  03AF  0822               	movf	___xxtofl@val+2,w
  5587  03B0  00A3               	movwf	___xxtofl@val+3
  5588  03B1  3001               	movlw	1
  5589  03B2  3189  21EA  3180   	fcall	___xxtofl
  5590  03B5  0020               	movlb	0	; select bank0
  5591  03B6  0823               	movf	?___xxtofl+3,w
  5592  03B7  00B1               	movwf	fabsf@x+3
  5593  03B8  0822               	movf	?___xxtofl+2,w
  5594  03B9  00B0               	movwf	fabsf@x+2
  5595  03BA  0821               	movf	?___xxtofl+1,w
  5596  03BB  00AF               	movwf	fabsf@x+1
  5597  03BC  0820               	movf	?___xxtofl,w
  5598  03BD  00AE               	movwf	fabsf@x
  5599  03BE  3196  268E  3180   	fcall	_fabsf
  5600  03C1  0020               	movlb	0	; select bank0
  5601  03C2  0831               	movf	?_fabsf+3,w
  5602  03C3  00B9               	movwf	___flge@ff1+3
  5603  03C4  0830               	movf	?_fabsf+2,w
  5604  03C5  00B8               	movwf	___flge@ff1+2
  5605  03C6  082F               	movf	?_fabsf+1,w
  5606  03C7  00B7               	movwf	___flge@ff1+1
  5607  03C8  082E               	movf	?_fabsf,w
  5608  03C9  00B6               	movwf	___flge@ff1
  5609  03CA  3041               	movlw	65
  5610  03CB  00BD               	movwf	___flge@ff2+3
  5611  03CC  3020               	movlw	32
  5612  03CD  00BC               	movwf	___flge@ff2+2
  5613  03CE  3000               	movlw	0
  5614  03CF  00BB               	movwf	___flge@ff2+1
  5615  03D0  3000               	movlw	0
  5616  03D1  00BA               	movwf	___flge@ff2
  5617  03D2  3189  215F  3180   	fcall	___flge
  5618  03D5  1C03               	btfss	3,0
  5619  03D6  2BD8               	goto	u4821
  5620  03D7  2BD9               	goto	u4820
  5621  03D8                     u4821:
  5622  03D8  2BF9               	goto	l4505
  5623  03D9                     u4820:
  5624  03D9                     l4503:
  5625                           
  5626                           ;main.c: 162:                     SiPuts("OBERT\n");
  5627  03D9  3039               	movlw	low (STR_3| (0+32768))
  5628  03DA  0020               	movlb	0	; select bank0
  5629  03DB  00A1               	movwf	SiPuts@s
  5630  03DC  3098               	movlw	high (STR_3| (0+32768))
  5631  03DD  00A2               	movwf	SiPuts@s+1
  5632  03DE  3195  25E8  3180   	fcall	_SiPuts
  5633                           
  5634                           ;main.c: 163:                     SiPuts("OBERT\n");
  5635  03E1  3039               	movlw	low (STR_3| (0+32768))
  5636  03E2  0020               	movlb	0	; select bank0
  5637  03E3  00A1               	movwf	SiPuts@s
  5638  03E4  3098               	movlw	high (STR_3| (0+32768))
  5639  03E5  00A2               	movwf	SiPuts@s+1
  5640  03E6  3195  25E8  3180   	fcall	_SiPuts
  5641                           
  5642                           ;main.c: 164:                     SiPuts("OBERT\n");
  5643  03E9  3039               	movlw	low (STR_3| (0+32768))
  5644  03EA  0020               	movlb	0	; select bank0
  5645  03EB  00A1               	movwf	SiPuts@s
  5646  03EC  3098               	movlw	high (STR_3| (0+32768))
  5647  03ED  00A2               	movwf	SiPuts@s+1
  5648  03EE  3195  25E8  3180   	fcall	_SiPuts
  5649                           
  5650                           ;main.c: 165:                     SiPuts("OBERT\n");
  5651  03F1  3039               	movlw	low (STR_3| (0+32768))
  5652  03F2  0020               	movlb	0	; select bank0
  5653  03F3  00A1               	movwf	SiPuts@s
  5654  03F4  3098               	movlw	high (STR_3| (0+32768))
  5655  03F5  00A2               	movwf	SiPuts@s+1
  5656  03F6  3195  25E8  3180   	fcall	_SiPuts
  5657  03F9                     l4505:
  5658                           
  5659                           ;main.c: 170:                 sprintf(tmp, "Eix X: %d\n",Xmostra); SiPuts(tmp);
  5660  03F9  302E               	movlw	low (STR_7| (0+32768))
  5661  03FA  0021               	movlb	1	; select bank1
  5662  03FB  00DF               	movwf	sprintf@fmt^(0+128)
  5663  03FC  3098               	movlw	high (STR_7| (0+32768))
  5664  03FD  00E0               	movwf	(sprintf@fmt^(0+128)+1)
  5665  03FE  0847               	movf	(main@Xmostra+1)^(0+128),w
  5666  03FF  00E2               	movwf	((?_sprintf+1)^(0+128)+2)
  5667  0400  0846               	movf	main@Xmostra^(0+128),w
  5668  0401  00E1               	movwf	(?_sprintf^(0+128)+2)
  5669  0402  3044               	movlw	(low (main@tmp| (0+256)))& (0+255)
  5670  0403  3197  2736  3180   	fcall	_sprintf
  5671  0406                     l4507:
  5672  0406  3044               	movlw	low main@tmp
  5673  0407  0020               	movlb	0	; select bank0
  5674  0408  00A1               	movwf	SiPuts@s
  5675  0409  3001               	movlw	high main@tmp
  5676  040A  00A2               	movwf	SiPuts@s+1
  5677  040B  3195  25E8  3180   	fcall	_SiPuts
  5678                           
  5679                           ;main.c: 171:                 sprintf(tmp, "Eix Y: %d \n",Ymostra); SiPuts(tmp);
  5680  040E  3022               	movlw	low (STR_8| (0+32768))
  5681  040F  0021               	movlb	1	; select bank1
  5682  0410  00DF               	movwf	sprintf@fmt^(0+128)
  5683  0411  3098               	movlw	high (STR_8| (0+32768))
  5684  0412  00E0               	movwf	(sprintf@fmt^(0+128)+1)
  5685  0413  0845               	movf	(main@Ymostra+1)^(0+128),w
  5686  0414  00E2               	movwf	((?_sprintf+1)^(0+128)+2)
  5687  0415  0844               	movf	main@Ymostra^(0+128),w
  5688  0416  00E1               	movwf	(?_sprintf^(0+128)+2)
  5689  0417  3044               	movlw	(low (main@tmp| (0+256)))& (0+255)
  5690  0418  3197  2736  3180   	fcall	_sprintf
  5691  041B                     l4509:
  5692  041B  3044               	movlw	low main@tmp
  5693  041C  0020               	movlb	0	; select bank0
  5694  041D  00A1               	movwf	SiPuts@s
  5695  041E  3001               	movlw	high main@tmp
  5696  041F  00A2               	movwf	SiPuts@s+1
  5697  0420  3195  25E8  3180   	fcall	_SiPuts
  5698  0423  291F               	goto	l4455
  5699  0424                     l4517:
  5700                           
  5701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5702                           ; Switch size 1, requested type "simple"
  5703                           ; Number of cases is 1, Range of values is 0 to 0
  5704                           ; switch strategies available:
  5705                           ; Name         Instructions Cycles
  5706                           ; simple_byte            4     3 (average)
  5707                           ; direct_byte            8     6 (fixed)
  5708                           ; jumptable            260     6 (fixed)
  5709                           ;	Chosen strategy is simple_byte
  5710  0424  0021               	movlb	1	; select bank1
  5711  0425  0853               	movf	(main@Estat+1)^(0+128),w
  5712  0426  3A00               	xorlw	0	; case 0
  5713  0427  1903               	skipnz
  5714  0428  2C2A               	goto	l4655
  5715  0429  2898               	goto	l179
  5716  042A                     l4655:
  5717                           
  5718                           ; Switch size 1, requested type "simple"
  5719                           ; Number of cases is 7, Range of values is 0 to 25
  5720                           ; switch strategies available:
  5721                           ; Name         Instructions Cycles
  5722                           ; simple_byte           22    12 (average)
  5723                           ; direct_byte           58     6 (fixed)
  5724                           ; jumptable            260     6 (fixed)
  5725                           ;	Chosen strategy is simple_byte
  5726  042A  0852               	movf	main@Estat^(0+128),w
  5727  042B  3A00               	xorlw	0	; case 0
  5728  042C  1903               	skipnz
  5729  042D  289A               	goto	l4429
  5730  042E  3A01               	xorlw	1	; case 1
  5731  042F  1903               	skipnz
  5732  0430  28AA               	goto	l4433
  5733  0431  3A03               	xorlw	3	; case 2
  5734  0432  1903               	skipnz
  5735  0433  292F               	goto	l188
  5736  0434  3A01               	xorlw	1	; case 3
  5737  0435  1903               	skipnz
  5738  0436  2B6C               	goto	l4499
  5739  0437  3A15               	xorlw	21	; case 22
  5740  0438  1903               	skipnz
  5741  0439  2B42               	goto	l4485
  5742  043A  3A0E               	xorlw	14	; case 24
  5743  043B  1903               	skipnz
  5744  043C  28E6               	goto	l4445
  5745  043D  3A01               	xorlw	1	; case 25
  5746  043E  1903               	skipnz
  5747  043F  290F               	goto	l4453
  5748  0440  2898               	goto	l179
  5749  0441  3180  2853         	ljmp	start
  5750  0443                     __end_of_main:
  5751                           
  5752                           	psect	text1
  5753  17C7                     __ptext1:	
  5754 ;; *************** function _valorAngle *****************
  5755 ;; Defined at:
  5756 ;;		line 183 in file "main.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;  eix             1    wreg     unsigned char 
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;  eix             1    9[BANK0 ] unsigned char 
  5761 ;;  tmp             2    7[BANK0 ] int 
  5762 ;; Return value:  Size  Location     Type
  5763 ;;                  2    3[BANK0 ] int 
  5764 ;; Registers used:
  5765 ;;		wreg, status,2, status,0, pclath, cstack
  5766 ;; Tracked objects:
  5767 ;;		On entry : 0/0
  5768 ;;		On exit  : 0/0
  5769 ;;		Unchanged: 0/0
  5770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5771 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5772 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5773 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5774 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5775 ;;Total ram usage:        7 bytes
  5776 ;; Hardware stack levels used: 1
  5777 ;; Hardware stack levels required when called: 4
  5778 ;; This function calls:
  5779 ;;		_I2C_repeated_start
  5780 ;;		_I2C_start
  5781 ;;		_I2C_stop
  5782 ;;		_I2C_wait
  5783 ;;		_NotAckI2C
  5784 ;;		_WriteI2C
  5785 ;; This function is called by:
  5786 ;;		_main
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790  17C7                     _valorAngle:	
  5791                           ;psect for function _valorAngle
  5792                           
  5793                           
  5794                           ;incstack = 0
  5795                           ; Regs used in _valorAngle: [wreg+status,2+status,0+pclath+cstack]
  5796                           ;valorAngle@eix stored from wreg
  5797  17C7  0020               	movlb	0	; select bank0
  5798  17C8  00A9               	movwf	valorAngle@eix
  5799  17C9                     l4241:
  5800                           
  5801                           ;main.c: 184:     int tmp;;main.c: 185:     I2C_start();
  5802  17C9  3195  2551  3197   	fcall	_I2C_start
  5803  17CC                     l4243:
  5804                           
  5805                           ;main.c: 186:     WriteI2C((0x1D << 1 )| 0x00);
  5806  17CC  303A               	movlw	58
  5807  17CD  3188  2001  3197   	fcall	_WriteI2C
  5808  17D0                     l4245:
  5809                           
  5810                           ;main.c: 187:     I2C_wait();
  5811  17D0  3195  255F  3197   	fcall	_I2C_wait
  5812                           
  5813                           ;main.c: 188:     WriteI2C(eix);
  5814  17D3  0020               	movlb	0	; select bank0
  5815  17D4  0829               	movf	valorAngle@eix,w
  5816  17D5  3188  2001  3197   	fcall	_WriteI2C
  5817  17D8                     l4247:
  5818                           
  5819                           ;main.c: 189:     I2C_repeated_start();
  5820  17D8  3195  2566  3197   	fcall	_I2C_repeated_start
  5821  17DB                     l4249:
  5822                           
  5823                           ;main.c: 190:     WriteI2C((0x1D << 1 )| 0x01);
  5824  17DB  303B               	movlw	59
  5825  17DC  3188  2001  3197   	fcall	_WriteI2C
  5826                           
  5827                           ;main.c: 191:     I2C_wait();
  5828  17DF  3195  255F  3197   	fcall	_I2C_wait
  5829  17E2                     l4251:
  5830                           
  5831                           ;main.c: 192:     SSP1CON2bits.RCEN = 1;
  5832  17E2  0023               	movlb	3	; select bank3
  5833  17E3  1591               	bsf	17,3	;volatile
  5834  17E4                     l4253:
  5835                           
  5836                           ;main.c: 193:     WriteI2C(eix);
  5837  17E4  0020               	movlb	0	; select bank0
  5838  17E5  0829               	movf	valorAngle@eix,w
  5839  17E6  3188  2001  3197   	fcall	_WriteI2C
  5840  17E9                     l4255:
  5841                           
  5842                           ;main.c: 194:     NotAckI2C();
  5843  17E9  3187  27F5  3197   	fcall	_NotAckI2C
  5844  17EC                     l4257:
  5845                           
  5846                           ;main.c: 195:     tmp = SSP1BUF;
  5847  17EC  0023               	movlb	3	; select bank3
  5848  17ED  080C               	movf	12,w	;volatile
  5849  17EE  0020               	movlb	0	; select bank0
  5850  17EF  00A5               	movwf	??_valorAngle
  5851  17F0  01A6               	clrf	??_valorAngle+1
  5852  17F1  0825               	movf	??_valorAngle,w
  5853  17F2  00A7               	movwf	valorAngle@tmp
  5854  17F3  0826               	movf	??_valorAngle+1,w
  5855  17F4  00A8               	movwf	valorAngle@tmp+1
  5856                           
  5857                           ;main.c: 196:     I2C_stop();
  5858  17F5  3195  2558  3197   	fcall	_I2C_stop
  5859  17F8                     l4259:
  5860                           
  5861                           ;main.c: 197:     SSP1CON2bits.RCEN = 0;
  5862  17F8  0023               	movlb	3	; select bank3
  5863  17F9  1191               	bcf	17,3	;volatile
  5864  17FA                     l4261:
  5865                           
  5866                           ;main.c: 198:     return tmp;
  5867  17FA  0020               	movlb	0	; select bank0
  5868  17FB  0828               	movf	valorAngle@tmp+1,w
  5869  17FC  00A4               	movwf	?_valorAngle+1
  5870  17FD  0827               	movf	valorAngle@tmp,w
  5871  17FE  00A3               	movwf	?_valorAngle
  5872  17FF                     l203:
  5873  17FF  0008               	return
  5874  1800                     __end_of_valorAngle:
  5875                           
  5876                           	psect	text2
  5877  07F5                     __ptext2:	
  5878 ;; *************** function _NotAckI2C *****************
  5879 ;; Defined at:
  5880 ;;		line 26 in file "I2C.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;		None
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;		None
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  1    wreg      void 
  5887 ;; Registers used:
  5888 ;;		None
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5898 ;;Total ram usage:        0 bytes
  5899 ;; Hardware stack levels used: 1
  5900 ;; Hardware stack levels required when called: 2
  5901 ;; This function calls:
  5902 ;;		Nothing
  5903 ;; This function is called by:
  5904 ;;		_valorAngle
  5905 ;;		_I2C_receive
  5906 ;; This function uses a non-reentrant model
  5907 ;;
  5908                           
  5909  07F5                     _NotAckI2C:	
  5910                           ;psect for function _NotAckI2C
  5911                           
  5912  07F5                     l4001:	
  5913                           ;incstack = 0
  5914                           ; Regs used in _NotAckI2C: []
  5915                           
  5916                           
  5917                           ;I2C.c: 27:  SSP1CON2bits.ACKDT = 1;
  5918  07F5  0023               	movlb	3	; select bank3
  5919  07F6  1691               	bsf	17,5	;volatile
  5920                           
  5921                           ;I2C.c: 28:  SSP1CON2bits.ACKEN = 1;
  5922  07F7  1611               	bsf	17,4	;volatile
  5923  07F8                     l448:	
  5924                           ;I2C.c: 29:  while(SSP1CON2bits.ACKEN);
  5925                           
  5926  07F8  1A11               	btfsc	17,4	;volatile
  5927  07F9  2FFB               	goto	u4381
  5928  07FA  2FFC               	goto	u4380
  5929  07FB                     u4381:
  5930  07FB  2FF8               	goto	l448
  5931  07FC                     u4380:
  5932  07FC                     l450:
  5933                           
  5934                           ;I2C.c: 30:  SSP1CON2bits.ACKDT = 0;
  5935  07FC  1291               	bcf	17,5	;volatile
  5936  07FD                     l451:
  5937  07FD  0008               	return
  5938  07FE                     __end_of_NotAckI2C:
  5939                           
  5940                           	psect	text3
  5941  1566                     __ptext3:	
  5942 ;; *************** function _I2C_repeated_start *****************
  5943 ;; Defined at:
  5944 ;;		line 19 in file "I2C.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;		None
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;		None
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  1    wreg      void 
  5951 ;; Registers used:
  5952 ;;		None
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5962 ;;Total ram usage:        0 bytes
  5963 ;; Hardware stack levels used: 1
  5964 ;; Hardware stack levels required when called: 2
  5965 ;; This function calls:
  5966 ;;		Nothing
  5967 ;; This function is called by:
  5968 ;;		_valorAngle
  5969 ;;		_I2C_receive
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973  1566                     _I2C_repeated_start:	
  5974                           ;psect for function _I2C_repeated_start
  5975                           
  5976  1566                     l3999:	
  5977                           ;incstack = 0
  5978                           ; Regs used in _I2C_repeated_start: []
  5979                           
  5980                           
  5981                           ;I2C.c: 22:     SSP1CON2bits.RSEN = 1; while (SSP1CON2bits.RSEN);
  5982  1566  0023               	movlb	3	; select bank3
  5983  1567  1491               	bsf	17,1	;volatile
  5984  1568                     l442:
  5985  1568  1891               	btfsc	17,1	;volatile
  5986  1569  2D6B               	goto	u4371
  5987  156A  2D6C               	goto	u4370
  5988  156B                     u4371:
  5989  156B  2D68               	goto	l442
  5990  156C                     u4370:
  5991  156C                     l445:
  5992  156C  0008               	return
  5993  156D                     __end_of_I2C_repeated_start:
  5994                           
  5995                           	psect	text4
  5996  1736                     __ptext4:	
  5997 ;; *************** function _sprintf *****************
  5998 ;; Defined at:
  5999 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;  s               1    wreg     PTR unsigned char 
  6002 ;;		 -> main@tmp(30), 
  6003 ;;  fmt             2    3[BANK1 ] PTR const unsigned char 
  6004 ;;		 -> STR_8(12), STR_7(11), 
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;  s               1    8[BANK1 ] PTR unsigned char 
  6007 ;;		 -> main@tmp(30), 
  6008 ;;  f              10    9[BANK1 ] struct _IO_FILE
  6009 ;;  ret             2    0        int 
  6010 ;;  ap              1    7[BANK1 ] PTR void [1]
  6011 ;;		 -> ?_sprintf(2), 
  6012 ;; Return value:  Size  Location     Type
  6013 ;;                  2    3[BANK1 ] int 
  6014 ;; Registers used:
  6015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6016 ;; Tracked objects:
  6017 ;;		On entry : 0/0
  6018 ;;		On exit  : 0/0
  6019 ;;		Unchanged: 0/0
  6020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6021 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6022 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  6023 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6024 ;;      Totals:         0       1      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6025 ;;Total ram usage:       17 bytes
  6026 ;; Hardware stack levels used: 1
  6027 ;; Hardware stack levels required when called: 9
  6028 ;; This function calls:
  6029 ;;		_vfprintf
  6030 ;; This function is called by:
  6031 ;;		_main
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035  1736                     _sprintf:	
  6036                           ;psect for function _sprintf
  6037                           
  6038                           
  6039                           ;incstack = 0
  6040                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6041                           ;sprintf@s stored from wreg
  6042  1736  0021               	movlb	1	; select bank1
  6043  1737  00E4               	movwf	sprintf@s^(0+128)
  6044  1738                     l4269:
  6045  1738  30E1               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  6046  1739  0020               	movlb	0	; select bank0
  6047  173A  00EE               	movwf	??_sprintf
  6048  173B  086E               	movf	??_sprintf,w
  6049  173C  0021               	movlb	1	; select bank1
  6050  173D  00E3               	movwf	sprintf@ap^(0+128)
  6051  173E  0864               	movf	sprintf@s^(0+128),w
  6052  173F  0020               	movlb	0	; select bank0
  6053  1740  00EE               	movwf	??_sprintf
  6054  1741  086E               	movf	??_sprintf,w
  6055  1742  0021               	movlb	1	; select bank1
  6056  1743  00E5               	movwf	sprintf@f^(0+128)
  6057  1744                     l4271:
  6058  1744  01E7               	clrf	(sprintf@f^(0+128)+2)
  6059  1745  01E8               	clrf	((sprintf@f+1)^(0+128)+2)
  6060  1746                     l4273:
  6061  1746  01ED               	clrf	(sprintf@f^(0+128)+8)
  6062  1747  01EE               	clrf	((sprintf@f+1)^(0+128)+8)
  6063  1748                     l4275:
  6064  1748  0860               	movf	(sprintf@fmt+1)^(0+128),w
  6065  1749  0020               	movlb	0	; select bank0
  6066  174A  00EA               	movwf	vfprintf@fmt+1
  6067  174B  0021               	movlb	1	; select bank1
  6068  174C  085F               	movf	sprintf@fmt^(0+128),w
  6069  174D  0020               	movlb	0	; select bank0
  6070  174E  00E9               	movwf	vfprintf@fmt
  6071  174F  30E3               	movlw	(low (sprintf@ap| 0))& (0+255)
  6072  1750  00EE               	movwf	??_sprintf
  6073  1751  086E               	movf	??_sprintf,w
  6074  1752  00EB               	movwf	vfprintf@ap
  6075  1753  30E5               	movlw	(low (sprintf@f| 0))& (0+255)
  6076  1754  3197  2793  3197   	fcall	_vfprintf
  6077  1757                     l4277:
  6078  1757  0021               	movlb	1	; select bank1
  6079  1758  0867               	movf	(sprintf@f^(0+128)+2),w
  6080  1759  0764               	addwf	sprintf@s^(0+128),w
  6081  175A  0020               	movlb	0	; select bank0
  6082  175B  00EE               	movwf	??_sprintf
  6083  175C  086E               	movf	??_sprintf,w
  6084  175D  0086               	movwf	6
  6085  175E  3001               	movlw	1	; select bank2/3
  6086  175F  0087               	movwf	7
  6087  1760  0181               	clrf	1
  6088  1761                     l1123:
  6089  1761  0008               	return
  6090  1762                     __end_of_sprintf:
  6091                           
  6092                           	psect	text5
  6093  1793                     __ptext5:	
  6094 ;; *************** function _vfprintf *****************
  6095 ;; Defined at:
  6096 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;  fp              1    wreg     PTR struct _IO_FILE
  6099 ;;		 -> sprintf@f(10), 
  6100 ;;  fmt             2   73[BANK0 ] PTR const unsigned char 
  6101 ;;		 -> STR_8(12), STR_7(11), 
  6102 ;;  ap              1   75[BANK0 ] PTR PTR void 
  6103 ;;		 -> sprintf@ap(1), 
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;  fp              1    0[BANK1 ] PTR struct _IO_FILE
  6106 ;;		 -> sprintf@f(10), 
  6107 ;;  cfmt            2    1[BANK1 ] PTR unsigned char 
  6108 ;;		 -> STR_8(12), STR_7(11), 
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  2   73[BANK0 ] int 
  6111 ;; Registers used:
  6112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6118 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6119 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6120 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6121 ;;      Totals:         0       5       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6122 ;;Total ram usage:        8 bytes
  6123 ;; Hardware stack levels used: 1
  6124 ;; Hardware stack levels required when called: 8
  6125 ;; This function calls:
  6126 ;;		_vfpfcnvrt
  6127 ;; This function is called by:
  6128 ;;		_sprintf
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132  1793                     _vfprintf:	
  6133                           ;psect for function _vfprintf
  6134                           
  6135                           
  6136                           ;incstack = 0
  6137                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6138                           ;vfprintf@fp stored from wreg
  6139  1793  0021               	movlb	1	; select bank1
  6140  1794  00DC               	movwf	vfprintf@fp^(0+128)
  6141  1795                     l4037:
  6142                           
  6143                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6144  1795  0020               	movlb	0	; select bank0
  6145  1796  086A               	movf	vfprintf@fmt+1,w
  6146  1797  0021               	movlb	1	; select bank1
  6147  1798  00DE               	movwf	(vfprintf@cfmt+1)^(0+128)
  6148  1799  0020               	movlb	0	; select bank0
  6149  179A  0869               	movf	vfprintf@fmt,w
  6150  179B  0021               	movlb	1	; select bank1
  6151  179C  00DD               	movwf	vfprintf@cfmt^(0+128)
  6152  179D                     l4039:
  6153                           
  6154                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6155  179D  01A0               	clrf	_nout^(0+128)
  6156  179E  01A1               	clrf	(_nout+1)^(0+128)
  6157                           
  6158                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6159  179F  2FB6               	goto	l4043
  6160  17A0                     l4041:
  6161                           
  6162                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6163  17A0  30DD               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6164  17A1  0020               	movlb	0	; select bank0
  6165  17A2  00EC               	movwf	??_vfprintf
  6166  17A3  086C               	movf	??_vfprintf,w
  6167  17A4  00D9               	movwf	vfpfcnvrt@fmt
  6168  17A5  086B               	movf	vfprintf@ap,w
  6169  17A6  00ED               	movwf	??_vfprintf+1
  6170  17A7  086D               	movf	??_vfprintf+1,w
  6171  17A8  00DA               	movwf	vfpfcnvrt@ap
  6172  17A9  0021               	movlb	1	; select bank1
  6173  17AA  085C               	movf	vfprintf@fp^(0+128),w
  6174  17AB  318A  2297  3197   	fcall	_vfpfcnvrt
  6175  17AE  0020               	movlb	0	; select bank0
  6176  17AF  0859               	movf	?_vfpfcnvrt,w
  6177  17B0  0021               	movlb	1	; select bank1
  6178  17B1  07A0               	addwf	_nout^(0+128),f
  6179  17B2  0020               	movlb	0	; select bank0
  6180  17B3  085A               	movf	?_vfpfcnvrt+1,w
  6181  17B4  0021               	movlb	1	; select bank1
  6182  17B5  3DA1               	addwfc	(_nout+1)^(0+128),f
  6183  17B6                     l4043:
  6184                           
  6185                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6186  17B6  085D               	movf	vfprintf@cfmt^(0+128),w
  6187  17B7  0084               	movwf	4
  6188  17B8  085E               	movf	(vfprintf@cfmt+1)^(0+128),w
  6189  17B9  0085               	movwf	5
  6190  17BA  0012               	moviw fsr0++
  6191  17BB  1D03               	btfss	3,2
  6192  17BC  2FBE               	goto	u4461
  6193  17BD  2FBF               	goto	u4460
  6194  17BE                     u4461:
  6195  17BE  2FA0               	goto	l4041
  6196  17BF                     u4460:
  6197  17BF                     l4045:
  6198                           
  6199                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6200  17BF  0821               	movf	(_nout+1)^(0+128),w
  6201  17C0  0020               	movlb	0	; select bank0
  6202  17C1  00EA               	movwf	?_vfprintf+1
  6203  17C2  0021               	movlb	1	; select bank1
  6204  17C3  0820               	movf	_nout^(0+128),w
  6205  17C4  0020               	movlb	0	; select bank0
  6206  17C5  00E9               	movwf	?_vfprintf
  6207  17C6                     l1195:
  6208  17C6  0008               	return
  6209  17C7                     __end_of_vfprintf:
  6210                           
  6211                           	psect	text6
  6212  0A97                     __ptext6:	
  6213 ;; *************** function _vfpfcnvrt *****************
  6214 ;; Defined at:
  6215 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;  fp              1    wreg     PTR struct _IO_FILE
  6218 ;;		 -> sprintf@f(10), 
  6219 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  6220 ;;		 -> vfprintf@cfmt(2), 
  6221 ;;  ap              1   58[BANK0 ] PTR PTR void 
  6222 ;;		 -> sprintf@ap(1), 
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;  fp              1   72[BANK0 ] PTR struct _IO_FILE
  6225 ;;		 -> sprintf@f(10), 
  6226 ;;  ll              8   64[BANK0 ] long long 
  6227 ;;  llu             8    0        unsigned long long 
  6228 ;;  f               4    0        unsigned long long 
  6229 ;;  ct              3    0        unsigned char [3]
  6230 ;;  vp              2    0        PTR void 
  6231 ;;  i               2    0        int 
  6232 ;;  done            2    0        int 
  6233 ;;  cp              2    0        PTR unsigned char 
  6234 ;;  c               1    0        unsigned char 
  6235 ;; Return value:  Size  Location     Type
  6236 ;;                  2   57[BANK0 ] int 
  6237 ;; Registers used:
  6238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6239 ;; Tracked objects:
  6240 ;;		On entry : 0/0
  6241 ;;		On exit  : 0/0
  6242 ;;		Unchanged: 0/0
  6243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6244 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6245 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6246 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6247 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6248 ;;Total ram usage:       16 bytes
  6249 ;; Hardware stack levels used: 1
  6250 ;; Hardware stack levels required when called: 7
  6251 ;; This function calls:
  6252 ;;		_dtoa
  6253 ;;		_fputc
  6254 ;; This function is called by:
  6255 ;;		_vfprintf
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259  0A97                     _vfpfcnvrt:	
  6260                           ;psect for function _vfpfcnvrt
  6261                           
  6262                           
  6263                           ;incstack = 0
  6264                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6265                           ;vfpfcnvrt@fp stored from wreg
  6266  0A97  0020               	movlb	0	; select bank0
  6267  0A98  00E8               	movwf	vfpfcnvrt@fp
  6268  0A99                     l3949:
  6269                           
  6270                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6271  0A99  0859               	movf	vfpfcnvrt@fmt,w
  6272  0A9A  0086               	movwf	6
  6273  0A9B  0187               	clrf	7
  6274  0A9C  3F40               	moviw [0]fsr1
  6275  0A9D  00DB               	movwf	??_vfpfcnvrt
  6276  0A9E  3F41               	moviw [1]fsr1
  6277  0A9F  00DC               	movwf	??_vfpfcnvrt+1
  6278  0AA0  085B               	movf	??_vfpfcnvrt,w
  6279  0AA1  0084               	movwf	4
  6280  0AA2  085C               	movf	??_vfpfcnvrt+1,w
  6281  0AA3  0085               	movwf	5
  6282  0AA4  0012               	moviw fsr0++
  6283  0AA5  3A25               	xorlw	37
  6284  0AA6  1D03               	btfss	3,2
  6285  0AA7  2AA9               	goto	u4321
  6286  0AA8  2AAA               	goto	u4320
  6287  0AA9                     u4321:
  6288  0AA9  2B4E               	goto	l3985
  6289  0AAA                     u4320:
  6290  0AAA                     l3951:
  6291                           
  6292                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6293  0AAA  0859               	movf	vfpfcnvrt@fmt,w
  6294  0AAB  0086               	movwf	6
  6295  0AAC  0187               	clrf	7
  6296  0AAD  3001               	movlw	1
  6297  0AAE  0781               	addwf	1,f
  6298  0AAF  3141               	addfsr 1,1
  6299  0AB0  1803               	skipnc
  6300  0AB1  0A81               	incf	1,f
  6301  0AB2                     l3953:
  6302                           
  6303                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6304  0AB2  0021               	movlb	1	; select bank1
  6305  0AB3  01A2               	clrf	_width^(0+128)
  6306  0AB4  01A3               	clrf	(_width+1)^(0+128)
  6307  0AB5  01F6               	clrf	_flags
  6308  0AB6  01F7               	clrf	_flags+1
  6309  0AB7                     l3955:
  6310                           
  6311                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6312  0AB7  30FF               	movlw	255
  6313  0AB8  00A4               	movwf	_prec^(0+128)
  6314  0AB9  30FF               	movlw	255
  6315  0ABA  00A5               	movwf	(_prec^(0+128)+1)
  6316  0ABB                     l3957:
  6317                           
  6318                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6319  0ABB  0020               	movlb	0	; select bank0
  6320  0ABC  0859               	movf	vfpfcnvrt@fmt,w
  6321  0ABD  0086               	movwf	6
  6322  0ABE  0187               	clrf	7
  6323  0ABF  3F40               	moviw [0]fsr1
  6324  0AC0  00DB               	movwf	??_vfpfcnvrt
  6325  0AC1  3F41               	moviw [1]fsr1
  6326  0AC2  00DC               	movwf	??_vfpfcnvrt+1
  6327  0AC3  085B               	movf	??_vfpfcnvrt,w
  6328  0AC4  0084               	movwf	4
  6329  0AC5  085C               	movf	??_vfpfcnvrt+1,w
  6330  0AC6  0085               	movwf	5
  6331  0AC7  0012               	moviw fsr0++
  6332  0AC8  3A64               	xorlw	100
  6333  0AC9  1903               	btfsc	3,2
  6334  0ACA  2ACC               	goto	u4331
  6335  0ACB  2ACD               	goto	u4330
  6336  0ACC                     u4331:
  6337  0ACC  2ADE               	goto	l3961
  6338  0ACD                     u4330:
  6339  0ACD                     l3959:
  6340  0ACD  0859               	movf	vfpfcnvrt@fmt,w
  6341  0ACE  0086               	movwf	6
  6342  0ACF  0187               	clrf	7
  6343  0AD0  3F40               	moviw [0]fsr1
  6344  0AD1  00DB               	movwf	??_vfpfcnvrt
  6345  0AD2  3F41               	moviw [1]fsr1
  6346  0AD3  00DC               	movwf	??_vfpfcnvrt+1
  6347  0AD4  085B               	movf	??_vfpfcnvrt,w
  6348  0AD5  0084               	movwf	4
  6349  0AD6  085C               	movf	??_vfpfcnvrt+1,w
  6350  0AD7  0085               	movwf	5
  6351  0AD8  0012               	moviw fsr0++
  6352  0AD9  3A69               	xorlw	105
  6353  0ADA  1D03               	btfss	3,2
  6354  0ADB  2ADD               	goto	u4341
  6355  0ADC  2ADE               	goto	u4340
  6356  0ADD                     u4341:
  6357  0ADD  2B19               	goto	l3969
  6358  0ADE                     u4340:
  6359  0ADE                     l3961:
  6360                           
  6361                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6362  0ADE  0859               	movf	vfpfcnvrt@fmt,w
  6363  0ADF  0086               	movwf	6
  6364  0AE0  0187               	clrf	7
  6365  0AE1  3001               	movlw	1
  6366  0AE2  0781               	addwf	1,f
  6367  0AE3  3141               	addfsr 1,1
  6368  0AE4  1803               	skipnc
  6369  0AE5  0A81               	incf	1,f
  6370  0AE6                     l3963:
  6371                           
  6372                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6373  0AE6  085A               	movf	vfpfcnvrt@ap,w
  6374  0AE7  0086               	movwf	6
  6375  0AE8  0187               	clrf	7
  6376  0AE9  0801               	movf	1,w
  6377  0AEA  0084               	movwf	4
  6378  0AEB  0185               	clrf	5
  6379  0AEC  3002               	movlw	2
  6380  0AED  0781               	addwf	1,f
  6381  0AEE  3F00               	moviw [0]fsr0
  6382  0AEF  00DB               	movwf	??_vfpfcnvrt
  6383  0AF0  3F01               	moviw [1]fsr0
  6384  0AF1  00DC               	movwf	??_vfpfcnvrt+1
  6385  0AF2  085B               	movf	??_vfpfcnvrt,w
  6386  0AF3  00E0               	movwf	vfpfcnvrt@ll
  6387  0AF4  085C               	movf	??_vfpfcnvrt+1,w
  6388  0AF5  00E1               	movwf	vfpfcnvrt@ll+1
  6389  0AF6  0D89               	rlf	9,f
  6390  0AF7  3B89               	subwfb	9,f
  6391  0AF8  0989               	comf	9,f
  6392  0AF9  00E2               	movwf	vfpfcnvrt@ll+2
  6393  0AFA  00E3               	movwf	vfpfcnvrt@ll+3
  6394  0AFB  00E4               	movwf	vfpfcnvrt@ll+4
  6395  0AFC  00E5               	movwf	vfpfcnvrt@ll+5
  6396  0AFD  00E6               	movwf	vfpfcnvrt@ll+6
  6397  0AFE  00E7               	movwf	vfpfcnvrt@ll+7
  6398  0AFF                     l3965:
  6399                           
  6400                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6401  0AFF  0860               	movf	vfpfcnvrt@ll,w
  6402  0B00  00BB               	movwf	dtoa@d
  6403  0B01  0861               	movf	vfpfcnvrt@ll+1,w
  6404  0B02  00BC               	movwf	dtoa@d+1
  6405  0B03  0862               	movf	vfpfcnvrt@ll+2,w
  6406  0B04  00BD               	movwf	dtoa@d+2
  6407  0B05  0863               	movf	vfpfcnvrt@ll+3,w
  6408  0B06  00BE               	movwf	dtoa@d+3
  6409  0B07  0864               	movf	vfpfcnvrt@ll+4,w
  6410  0B08  00BF               	movwf	dtoa@d+4
  6411  0B09  0865               	movf	vfpfcnvrt@ll+5,w
  6412  0B0A  00C0               	movwf	dtoa@d+5
  6413  0B0B  0866               	movf	vfpfcnvrt@ll+6,w
  6414  0B0C  00C1               	movwf	dtoa@d+6
  6415  0B0D  0867               	movf	vfpfcnvrt@ll+7,w
  6416  0B0E  00C2               	movwf	dtoa@d+7
  6417  0B0F  0868               	movf	vfpfcnvrt@fp,w
  6418  0B10  318C  245F  318A   	fcall	_dtoa
  6419  0B13  0020               	movlb	0	; select bank0
  6420  0B14  083C               	movf	?_dtoa+1,w
  6421  0B15  00DA               	movwf	?_vfpfcnvrt+1
  6422  0B16  083B               	movf	?_dtoa,w
  6423  0B17  00D9               	movwf	?_vfpfcnvrt
  6424  0B18  2B71               	goto	l1188
  6425  0B19                     l3969:
  6426                           
  6427                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6428  0B19  0859               	movf	vfpfcnvrt@fmt,w
  6429  0B1A  0086               	movwf	6
  6430  0B1B  0187               	clrf	7
  6431  0B1C  3F40               	moviw [0]fsr1
  6432  0B1D  00DB               	movwf	??_vfpfcnvrt
  6433  0B1E  3F41               	moviw [1]fsr1
  6434  0B1F  00DC               	movwf	??_vfpfcnvrt+1
  6435  0B20  085B               	movf	??_vfpfcnvrt,w
  6436  0B21  0084               	movwf	4
  6437  0B22  085C               	movf	??_vfpfcnvrt+1,w
  6438  0B23  0085               	movwf	5
  6439  0B24  0012               	moviw fsr0++
  6440  0B25  3A25               	xorlw	37
  6441  0B26  1D03               	btfss	3,2
  6442  0B27  2B29               	goto	u4351
  6443  0B28  2B2A               	goto	u4350
  6444  0B29                     u4351:
  6445  0B29  2B43               	goto	l3979
  6446  0B2A                     u4350:
  6447  0B2A                     l3971:
  6448                           
  6449                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6450  0B2A  0859               	movf	vfpfcnvrt@fmt,w
  6451  0B2B  0086               	movwf	6
  6452  0B2C  0187               	clrf	7
  6453  0B2D  3001               	movlw	1
  6454  0B2E  0781               	addwf	1,f
  6455  0B2F  3141               	addfsr 1,1
  6456  0B30  1803               	skipnc
  6457  0B31  0A81               	incf	1,f
  6458  0B32                     l3973:
  6459                           
  6460                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6461  0B32  3025               	movlw	37
  6462  0B33  00A0               	movwf	fputc@c
  6463  0B34  3000               	movlw	0
  6464  0B35  00A1               	movwf	fputc@c+1
  6465  0B36  0868               	movf	vfpfcnvrt@fp,w
  6466  0B37  00DB               	movwf	??_vfpfcnvrt
  6467  0B38  085B               	movf	??_vfpfcnvrt,w
  6468  0B39  00A2               	movwf	fputc@fp
  6469  0B3A  3188  2095  318A   	fcall	_fputc
  6470  0B3D                     l3975:
  6471                           
  6472                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6473  0B3D  3001               	movlw	1
  6474  0B3E  0020               	movlb	0	; select bank0
  6475  0B3F  00D9               	movwf	?_vfpfcnvrt
  6476  0B40  3000               	movlw	0
  6477  0B41  00DA               	movwf	?_vfpfcnvrt+1
  6478  0B42  2B71               	goto	l1188
  6479  0B43                     l3979:
  6480                           
  6481                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6482  0B43  0859               	movf	vfpfcnvrt@fmt,w
  6483  0B44  0086               	movwf	6
  6484  0B45  0187               	clrf	7
  6485  0B46  3001               	movlw	1
  6486  0B47  0781               	addwf	1,f
  6487  0B48  3141               	addfsr 1,1
  6488  0B49  1803               	skipnc
  6489  0B4A  0A81               	incf	1,f
  6490  0B4B                     l3981:
  6491                           
  6492                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6493  0B4B  01D9               	clrf	?_vfpfcnvrt
  6494  0B4C  01DA               	clrf	?_vfpfcnvrt+1
  6495  0B4D  2B71               	goto	l1188
  6496  0B4E                     l3985:
  6497                           
  6498                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6499  0B4E  0859               	movf	vfpfcnvrt@fmt,w
  6500  0B4F  0086               	movwf	6
  6501  0B50  0187               	clrf	7
  6502  0B51  3F40               	moviw [0]fsr1
  6503  0B52  00DB               	movwf	??_vfpfcnvrt
  6504  0B53  3F41               	moviw [1]fsr1
  6505  0B54  00DC               	movwf	??_vfpfcnvrt+1
  6506  0B55  085B               	movf	??_vfpfcnvrt,w
  6507  0B56  0084               	movwf	4
  6508  0B57  085C               	movf	??_vfpfcnvrt+1,w
  6509  0B58  0085               	movwf	5
  6510  0B59  0800               	movf	0,w	;code access
  6511  0B5A  00DD               	movwf	??_vfpfcnvrt+2
  6512  0B5B  01DE               	clrf	??_vfpfcnvrt+3
  6513  0B5C  085D               	movf	??_vfpfcnvrt+2,w
  6514  0B5D  00A0               	movwf	fputc@c
  6515  0B5E  085E               	movf	??_vfpfcnvrt+3,w
  6516  0B5F  00A1               	movwf	fputc@c+1
  6517  0B60  0868               	movf	vfpfcnvrt@fp,w
  6518  0B61  00DF               	movwf	??_vfpfcnvrt+4
  6519  0B62  085F               	movf	??_vfpfcnvrt+4,w
  6520  0B63  00A2               	movwf	fputc@fp
  6521  0B64  3188  2095  318A   	fcall	_fputc
  6522  0B67                     l3987:
  6523                           
  6524                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  6525  0B67  0020               	movlb	0	; select bank0
  6526  0B68  0859               	movf	vfpfcnvrt@fmt,w
  6527  0B69  0086               	movwf	6
  6528  0B6A  0187               	clrf	7
  6529  0B6B  3001               	movlw	1
  6530  0B6C  0781               	addwf	1,f
  6531  0B6D  3141               	addfsr 1,1
  6532  0B6E  1803               	skipnc
  6533  0B6F  0A81               	incf	1,f
  6534  0B70  2B3D               	goto	l3975
  6535  0B71                     l1188:
  6536  0B71  0008               	return
  6537  0B72                     __end_of_vfpfcnvrt:
  6538                           
  6539                           	psect	text7
  6540  0C5F                     __ptext7:	
  6541 ;; *************** function _dtoa *****************
  6542 ;; Defined at:
  6543 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6544 ;; Parameters:    Size  Location     Type
  6545 ;;  fp              1    wreg     PTR struct _IO_FILE
  6546 ;;		 -> sprintf@f(10), 
  6547 ;;  d               8   27[BANK0 ] long long 
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;  fp              1   38[BANK0 ] PTR struct _IO_FILE
  6550 ;;		 -> sprintf@f(10), 
  6551 ;;  n               8   47[BANK0 ] long long 
  6552 ;;  i               2   55[BANK0 ] int 
  6553 ;;  s               2   45[BANK0 ] int 
  6554 ;;  w               2   43[BANK0 ] int 
  6555 ;;  p               2   41[BANK0 ] int 
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  2   27[BANK0 ] int 
  6558 ;; Registers used:
  6559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6565 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6566 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6567 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6568 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6569 ;;Total ram usage:       30 bytes
  6570 ;; Hardware stack levels used: 1
  6571 ;; Hardware stack levels required when called: 6
  6572 ;; This function calls:
  6573 ;;		___aodiv
  6574 ;;		___aomod
  6575 ;;		_abs
  6576 ;;		_pad
  6577 ;; This function is called by:
  6578 ;;		_vfpfcnvrt
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582  0C5F                     _dtoa:	
  6583                           ;psect for function _dtoa
  6584                           
  6585                           
  6586                           ;incstack = 0
  6587                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6588                           ;dtoa@fp stored from wreg
  6589  0C5F  0020               	movlb	0	; select bank0
  6590  0C60  00C6               	movwf	dtoa@fp
  6591  0C61                     l3883:
  6592                           
  6593                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6594  0C61  083B               	movf	dtoa@d,w
  6595  0C62  00CF               	movwf	dtoa@n
  6596  0C63  083C               	movf	dtoa@d+1,w
  6597  0C64  00D0               	movwf	dtoa@n+1
  6598  0C65  083D               	movf	dtoa@d+2,w
  6599  0C66  00D1               	movwf	dtoa@n+2
  6600  0C67  083E               	movf	dtoa@d+3,w
  6601  0C68  00D2               	movwf	dtoa@n+3
  6602  0C69  083F               	movf	dtoa@d+4,w
  6603  0C6A  00D3               	movwf	dtoa@n+4
  6604  0C6B  0840               	movf	dtoa@d+5,w
  6605  0C6C  00D4               	movwf	dtoa@n+5
  6606  0C6D  0841               	movf	dtoa@d+6,w
  6607  0C6E  00D5               	movwf	dtoa@n+6
  6608  0C6F  0842               	movf	dtoa@d+7,w
  6609  0C70  00D6               	movwf	dtoa@n+7
  6610  0C71                     l3885:
  6611                           
  6612                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6613  0C71  304F               	movlw	low dtoa@n
  6614  0C72  0086               	movwf	6
  6615  0C73  3000               	movlw	high dtoa@n
  6616  0C74  0087               	movwf	7
  6617  0C75  3F47               	moviw [7]fsr1
  6618  0C76  00C3               	movwf	??_dtoa
  6619  0C77  1BC3               	btfsc	??_dtoa,7
  6620  0C78  2C7A               	goto	u4131
  6621  0C79  2C7C               	goto	u4130
  6622  0C7A                     u4131:
  6623  0C7A  3001               	movlw	1
  6624  0C7B  2C7D               	goto	u4140
  6625  0C7C                     u4130:
  6626  0C7C  3000               	movlw	0
  6627  0C7D                     u4140:
  6628  0C7D  0020               	movlb	0	; select bank0
  6629  0C7E  00C4               	movwf	??_dtoa+1
  6630  0C7F  01C5               	clrf	??_dtoa+2
  6631  0C80  0844               	movf	??_dtoa+1,w
  6632  0C81  00CD               	movwf	dtoa@s
  6633  0C82  0845               	movf	??_dtoa+2,w
  6634  0C83  00CE               	movwf	dtoa@s+1
  6635  0C84                     l3887:
  6636                           
  6637                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6638  0C84  084D               	movf	dtoa@s,w
  6639  0C85  044E               	iorwf	dtoa@s+1,w
  6640  0C86  1903               	btfsc	3,2
  6641  0C87  2C89               	goto	u4151
  6642  0C88  2C8A               	goto	u4150
  6643  0C89                     u4151:
  6644  0C89  2CA8               	goto	l1158
  6645  0C8A                     u4150:
  6646  0C8A                     l3889:
  6647                           
  6648                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6649  0C8A  09CF               	comf	dtoa@n,f
  6650  0C8B  09D0               	comf	dtoa@n+1,f
  6651  0C8C  09D1               	comf	dtoa@n+2,f
  6652  0C8D  09D2               	comf	dtoa@n+3,f
  6653  0C8E  09D3               	comf	dtoa@n+4,f
  6654  0C8F  09D4               	comf	dtoa@n+5,f
  6655  0C90  09D5               	comf	dtoa@n+6,f
  6656  0C91  09D6               	comf	dtoa@n+7,f
  6657  0C92  0ACF               	incf	dtoa@n,f
  6658  0C93  1D03               	skipz
  6659  0C94  2CA8               	goto	u416lld
  6660  0C95  0AD0               	incf	dtoa@n+1,f
  6661  0C96  1D03               	skipz
  6662  0C97  2CA8               	goto	u416lld
  6663  0C98  0AD1               	incf	dtoa@n+2,f
  6664  0C99  1D03               	skipz
  6665  0C9A  2CA8               	goto	u416lld
  6666  0C9B  0AD2               	incf	dtoa@n+3,f
  6667  0C9C  1D03               	skipz
  6668  0C9D  2CA8               	goto	u416lld
  6669  0C9E  0AD3               	incf	dtoa@n+4,f
  6670  0C9F  1D03               	skipz
  6671  0CA0  2CA8               	goto	u416lld
  6672  0CA1  0AD4               	incf	dtoa@n+5,f
  6673  0CA2  1D03               	skipz
  6674  0CA3  2CA8               	goto	u416lld
  6675  0CA4  0AD5               	incf	dtoa@n+6,f
  6676  0CA5  1D03               	skipz
  6677  0CA6  2CA8               	goto	u416lld
  6678  0CA7  0AD6               	incf	dtoa@n+7,f
  6679  0CA8                     u416lld:
  6680  0CA8                     l1158:	
  6681                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 297:     }
  6682                           
  6683                           
  6684                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6685  0CA8  0021               	movlb	1	; select bank1
  6686  0CA9  1BA5               	btfsc	(_prec+1)^(0+128),7
  6687  0CAA  2CAC               	goto	u4171
  6688  0CAB  2CAD               	goto	u4170
  6689  0CAC                     u4171:
  6690  0CAC  2CB1               	goto	l1159
  6691  0CAD                     u4170:
  6692  0CAD                     l3891:
  6693                           
  6694                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6695  0CAD  30FD               	movlw	253
  6696  0CAE  05F6               	andwf	_flags,f
  6697  0CAF  30FF               	movlw	255
  6698  0CB0  05F7               	andwf	_flags+1,f
  6699  0CB1                     l1159:	
  6700                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 302:     }
  6701                           
  6702                           
  6703                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6704  0CB1  0825               	movf	(_prec+1)^(0+128),w
  6705  0CB2  3A80               	xorlw	128
  6706  0CB3  0020               	movlb	0	; select bank0
  6707  0CB4  00C3               	movwf	??_dtoa
  6708  0CB5  3080               	movlw	128
  6709  0CB6  0243               	subwf	??_dtoa,w
  6710  0CB7  1D03               	skipz
  6711  0CB8  2CBC               	goto	u4185
  6712  0CB9  3001               	movlw	1
  6713  0CBA  0021               	movlb	1	; select bank1
  6714  0CBB  0224               	subwf	_prec^(0+128),w
  6715  0CBC                     u4185:
  6716  0CBC  1803               	skipnc
  6717  0CBD  2CBF               	goto	u4181
  6718  0CBE  2CC0               	goto	u4180
  6719  0CBF                     u4181:
  6720  0CBF  2CC6               	goto	l3895
  6721  0CC0                     u4180:
  6722  0CC0                     l3893:
  6723  0CC0  3001               	movlw	1
  6724  0CC1  0020               	movlb	0	; select bank0
  6725  0CC2  00C9               	movwf	dtoa@p
  6726  0CC3  3000               	movlw	0
  6727  0CC4  00CA               	movwf	dtoa@p+1
  6728  0CC5  2CCE               	goto	l1163
  6729  0CC6                     l3895:
  6730  0CC6  0021               	movlb	1	; select bank1
  6731  0CC7  0825               	movf	(_prec+1)^(0+128),w
  6732  0CC8  0020               	movlb	0	; select bank0
  6733  0CC9  00CA               	movwf	dtoa@p+1
  6734  0CCA  0021               	movlb	1	; select bank1
  6735  0CCB  0824               	movf	_prec^(0+128),w
  6736  0CCC  0020               	movlb	0	; select bank0
  6737  0CCD  00C9               	movwf	dtoa@p
  6738  0CCE                     l1163:
  6739                           
  6740                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6741  0CCE  0021               	movlb	1	; select bank1
  6742  0CCF  0823               	movf	(_width+1)^(0+128),w
  6743  0CD0  0020               	movlb	0	; select bank0
  6744  0CD1  00CC               	movwf	dtoa@w+1
  6745  0CD2  0021               	movlb	1	; select bank1
  6746  0CD3  0822               	movf	_width^(0+128),w
  6747  0CD4  0020               	movlb	0	; select bank0
  6748  0CD5  00CB               	movwf	dtoa@w
  6749  0CD6                     l3897:
  6750                           
  6751                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6752  0CD6  084D               	movf	dtoa@s,w
  6753  0CD7  044E               	iorwf	dtoa@s+1,w
  6754  0CD8  1D03               	btfss	3,2
  6755  0CD9  2CDB               	goto	u4191
  6756  0CDA  2CDC               	goto	u4190
  6757  0CDB                     u4191:
  6758  0CDB  2CE0               	goto	l3901
  6759  0CDC                     u4190:
  6760  0CDC                     l3899:
  6761  0CDC  1D76               	btfss	_flags,2
  6762  0CDD  2CDF               	goto	u4201
  6763  0CDE  2CE0               	goto	u4200
  6764  0CDF                     u4201:
  6765  0CDF  2CE4               	goto	l1164
  6766  0CE0                     u4200:
  6767  0CE0                     l3901:
  6768                           
  6769                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  6770  0CE0  30FF               	movlw	255
  6771  0CE1  07CB               	addwf	dtoa@w,f
  6772  0CE2  30FF               	movlw	255
  6773  0CE3  3DCC               	addwfc	dtoa@w+1,f
  6774  0CE4                     l1164:	
  6775                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 307:     }
  6776                           
  6777                           
  6778                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6779  0CE4  301F               	movlw	31
  6780  0CE5  00D7               	movwf	dtoa@i
  6781  0CE6  3000               	movlw	0
  6782  0CE7  00D8               	movwf	dtoa@i+1
  6783  0CE8                     l3903:
  6784                           
  6785                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6786  0CE8  0023               	movlb	3	; select bank3
  6787  0CE9  01BF               	clrf	(_dbuf^(0+384)+31)
  6788                           
  6789                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6790  0CEA  2D54               	goto	l1167
  6791  0CEB                     l3905:
  6792                           
  6793                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  6794  0CEB  30FF               	movlw	255
  6795  0CEC  0020               	movlb	0	; select bank0
  6796  0CED  07D7               	addwf	dtoa@i,f
  6797  0CEE  30FF               	movlw	255
  6798  0CEF  3DD8               	addwfc	dtoa@i+1,f
  6799  0CF0                     l3907:
  6800                           
  6801                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6802  0CF0  300A               	movlw	10
  6803  0CF1  00A0               	movwf	___aomod@divisor
  6804  0CF2  01A1               	clrf	___aomod@divisor+1
  6805  0CF3  01A2               	clrf	___aomod@divisor+2
  6806  0CF4  01A3               	clrf	___aomod@divisor+3
  6807  0CF5  01A4               	clrf	___aomod@divisor+4
  6808  0CF6  01A5               	clrf	___aomod@divisor+5
  6809  0CF7  01A6               	clrf	___aomod@divisor+6
  6810  0CF8  01A7               	clrf	___aomod@divisor+7
  6811  0CF9  084F               	movf	dtoa@n,w
  6812  0CFA  00A8               	movwf	___aomod@dividend
  6813  0CFB  0850               	movf	dtoa@n+1,w
  6814  0CFC  00A9               	movwf	___aomod@dividend+1
  6815  0CFD  0851               	movf	dtoa@n+2,w
  6816  0CFE  00AA               	movwf	___aomod@dividend+2
  6817  0CFF  0852               	movf	dtoa@n+3,w
  6818  0D00  00AB               	movwf	___aomod@dividend+3
  6819  0D01  0853               	movf	dtoa@n+4,w
  6820  0D02  00AC               	movwf	___aomod@dividend+4
  6821  0D03  0854               	movf	dtoa@n+5,w
  6822  0D04  00AD               	movwf	___aomod@dividend+5
  6823  0D05  0855               	movf	dtoa@n+6,w
  6824  0D06  00AE               	movwf	___aomod@dividend+6
  6825  0D07  0856               	movf	dtoa@n+7,w
  6826  0D08  00AF               	movwf	___aomod@dividend+7
  6827  0D09  318B  2372  318C   	fcall	___aomod
  6828  0D0C  0020               	movlb	0	; select bank0
  6829  0D0D  0821               	movf	?___aomod+1,w
  6830  0D0E  00B4               	movwf	abs@a+1
  6831  0D0F  0820               	movf	?___aomod,w
  6832  0D10  00B3               	movwf	abs@a
  6833  0D11  3196  264E  318C   	fcall	_abs
  6834  0D14  0020               	movlb	0	; select bank0
  6835  0D15  0833               	movf	?_abs,w
  6836  0D16  3E30               	addlw	48
  6837  0D17  00C3               	movwf	??_dtoa
  6838  0D18  0857               	movf	dtoa@i,w
  6839  0D19  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6840  0D1A  0086               	movwf	6
  6841  0D1B  3001               	movlw	1	; select bank3/4
  6842  0D1C  0087               	movwf	7
  6843  0D1D  0843               	movf	??_dtoa,w
  6844  0D1E  0081               	movwf	1
  6845  0D1F                     l3909:
  6846                           
  6847                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  6848  0D1F  30FF               	movlw	255
  6849  0D20  07C9               	addwf	dtoa@p,f
  6850  0D21  30FF               	movlw	255
  6851  0D22  3DCA               	addwfc	dtoa@p+1,f
  6852  0D23                     l3911:
  6853                           
  6854                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  6855  0D23  30FF               	movlw	255
  6856  0D24  07CB               	addwf	dtoa@w,f
  6857  0D25  30FF               	movlw	255
  6858  0D26  3DCC               	addwfc	dtoa@w+1,f
  6859  0D27                     l3913:
  6860                           
  6861                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6862  0D27  300A               	movlw	10
  6863  0D28  00A0               	movwf	___aodiv@divisor
  6864  0D29  01A1               	clrf	___aodiv@divisor+1
  6865  0D2A  01A2               	clrf	___aodiv@divisor+2
  6866  0D2B  01A3               	clrf	___aodiv@divisor+3
  6867  0D2C  01A4               	clrf	___aodiv@divisor+4
  6868  0D2D  01A5               	clrf	___aodiv@divisor+5
  6869  0D2E  01A6               	clrf	___aodiv@divisor+6
  6870  0D2F  01A7               	clrf	___aodiv@divisor+7
  6871  0D30  084F               	movf	dtoa@n,w
  6872  0D31  00A8               	movwf	___aodiv@dividend
  6873  0D32  0850               	movf	dtoa@n+1,w
  6874  0D33  00A9               	movwf	___aodiv@dividend+1
  6875  0D34  0851               	movf	dtoa@n+2,w
  6876  0D35  00AA               	movwf	___aodiv@dividend+2
  6877  0D36  0852               	movf	dtoa@n+3,w
  6878  0D37  00AB               	movwf	___aodiv@dividend+3
  6879  0D38  0853               	movf	dtoa@n+4,w
  6880  0D39  00AC               	movwf	___aodiv@dividend+4
  6881  0D3A  0854               	movf	dtoa@n+5,w
  6882  0D3B  00AD               	movwf	___aodiv@dividend+5
  6883  0D3C  0855               	movf	dtoa@n+6,w
  6884  0D3D  00AE               	movwf	___aodiv@dividend+6
  6885  0D3E  0856               	movf	dtoa@n+7,w
  6886  0D3F  00AF               	movwf	___aodiv@dividend+7
  6887  0D40  3186  269A  318C   	fcall	___aodiv
  6888  0D43  0020               	movlb	0	; select bank0
  6889  0D44  0820               	movf	?___aodiv,w
  6890  0D45  00CF               	movwf	dtoa@n
  6891  0D46  0821               	movf	?___aodiv+1,w
  6892  0D47  00D0               	movwf	dtoa@n+1
  6893  0D48  0822               	movf	?___aodiv+2,w
  6894  0D49  00D1               	movwf	dtoa@n+2
  6895  0D4A  0823               	movf	?___aodiv+3,w
  6896  0D4B  00D2               	movwf	dtoa@n+3
  6897  0D4C  0824               	movf	?___aodiv+4,w
  6898  0D4D  00D3               	movwf	dtoa@n+4
  6899  0D4E  0825               	movf	?___aodiv+5,w
  6900  0D4F  00D4               	movwf	dtoa@n+5
  6901  0D50  0826               	movf	?___aodiv+6,w
  6902  0D51  00D5               	movwf	dtoa@n+6
  6903  0D52  0827               	movf	?___aodiv+7,w
  6904  0D53  00D6               	movwf	dtoa@n+7
  6905  0D54                     l1167:	
  6906                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 318:     }
  6907                           
  6908                           
  6909                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6910  0D54  0020               	movlb	0	; select bank0
  6911  0D55  0858               	movf	dtoa@i+1,w
  6912  0D56  3A80               	xorlw	128
  6913  0D57  00C3               	movwf	??_dtoa
  6914  0D58  3080               	movlw	128
  6915  0D59  0243               	subwf	??_dtoa,w
  6916  0D5A  1D03               	skipz
  6917  0D5B  2D5E               	goto	u4215
  6918  0D5C  3001               	movlw	1
  6919  0D5D  0257               	subwf	dtoa@i,w
  6920  0D5E                     u4215:
  6921  0D5E  1C03               	skipc
  6922  0D5F  2D61               	goto	u4211
  6923  0D60  2D62               	goto	u4210
  6924  0D61                     u4211:
  6925  0D61  2D8E               	goto	l3923
  6926  0D62                     u4210:
  6927  0D62                     l3915:
  6928  0D62  0020               	movlb	0	; select bank0
  6929  0D63  084F               	movf	dtoa@n,w
  6930  0D64  0450               	iorwf	dtoa@n+1,w
  6931  0D65  0451               	iorwf	dtoa@n+2,w
  6932  0D66  0452               	iorwf	dtoa@n+3,w
  6933  0D67  0453               	iorwf	dtoa@n+4,w
  6934  0D68  0454               	iorwf	dtoa@n+5,w
  6935  0D69  0455               	iorwf	dtoa@n+6,w
  6936  0D6A  0456               	iorwf	dtoa@n+7,w
  6937  0D6B  1D03               	skipz
  6938  0D6C  2D6E               	goto	u4221
  6939  0D6D  2D6F               	goto	u4220
  6940  0D6E                     u4221:
  6941  0D6E  2CEB               	goto	l3905
  6942  0D6F                     u4220:
  6943  0D6F                     l3917:
  6944  0D6F  084A               	movf	dtoa@p+1,w
  6945  0D70  3A80               	xorlw	128
  6946  0D71  00C3               	movwf	??_dtoa
  6947  0D72  3080               	movlw	128
  6948  0D73  0243               	subwf	??_dtoa,w
  6949  0D74  1D03               	skipz
  6950  0D75  2D78               	goto	u4235
  6951  0D76  3001               	movlw	1
  6952  0D77  0249               	subwf	dtoa@p,w
  6953  0D78                     u4235:
  6954  0D78  1803               	skipnc
  6955  0D79  2D7B               	goto	u4231
  6956  0D7A  2D7C               	goto	u4230
  6957  0D7B                     u4231:
  6958  0D7B  2CEB               	goto	l3905
  6959  0D7C                     u4230:
  6960  0D7C                     l3919:
  6961  0D7C  0020               	movlb	0	; select bank0
  6962  0D7D  084C               	movf	dtoa@w+1,w
  6963  0D7E  3A80               	xorlw	128
  6964  0D7F  00C3               	movwf	??_dtoa
  6965  0D80  3080               	movlw	128
  6966  0D81  0243               	subwf	??_dtoa,w
  6967  0D82  1D03               	skipz
  6968  0D83  2D86               	goto	u4245
  6969  0D84  3001               	movlw	1
  6970  0D85  024B               	subwf	dtoa@w,w
  6971  0D86                     u4245:
  6972  0D86  1C03               	skipc
  6973  0D87  2D89               	goto	u4241
  6974  0D88  2D8A               	goto	u4240
  6975  0D89                     u4241:
  6976  0D89  2D8E               	goto	l3923
  6977  0D8A                     u4240:
  6978  0D8A                     l3921:
  6979  0D8A  18F6               	btfsc	_flags,1
  6980  0D8B  2D8D               	goto	u4251
  6981  0D8C  2D8E               	goto	u4250
  6982  0D8D                     u4251:
  6983  0D8D  2CEB               	goto	l3905
  6984  0D8E                     u4250:
  6985  0D8E                     l3923:
  6986                           
  6987                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6988  0D8E  0020               	movlb	0	; select bank0
  6989  0D8F  084D               	movf	dtoa@s,w
  6990  0D90  044E               	iorwf	dtoa@s+1,w
  6991  0D91  1D03               	btfss	3,2
  6992  0D92  2D94               	goto	u4261
  6993  0D93  2D95               	goto	u4260
  6994  0D94                     u4261:
  6995  0D94  2D99               	goto	l3927
  6996  0D95                     u4260:
  6997  0D95                     l3925:
  6998  0D95  1D76               	btfss	_flags,2
  6999  0D96  2D98               	goto	u4271
  7000  0D97  2D99               	goto	u4270
  7001  0D98                     u4271:
  7002  0D98  2DB5               	goto	l3937
  7003  0D99                     u4270:
  7004  0D99                     l3927:
  7005                           
  7006                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  7007  0D99  30FF               	movlw	255
  7008  0D9A  07D7               	addwf	dtoa@i,f
  7009  0D9B  30FF               	movlw	255
  7010  0D9C  3DD8               	addwfc	dtoa@i+1,f
  7011  0D9D                     l3929:
  7012                           
  7013                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7014  0D9D  084D               	movf	dtoa@s,w
  7015  0D9E  044E               	iorwf	dtoa@s+1,w
  7016  0D9F  1D03               	btfss	3,2
  7017  0DA0  2DA2               	goto	u4281
  7018  0DA1  2DA3               	goto	u4280
  7019  0DA2                     u4281:
  7020  0DA2  2DA8               	goto	l3933
  7021  0DA3                     u4280:
  7022  0DA3                     l3931:
  7023  0DA3  302B               	movlw	43
  7024  0DA4  00C7               	movwf	_dtoa$1596
  7025  0DA5  3000               	movlw	0
  7026  0DA6  00C8               	movwf	_dtoa$1596+1
  7027  0DA7  2DAC               	goto	l3935
  7028  0DA8                     l3933:
  7029  0DA8  302D               	movlw	45
  7030  0DA9  00C7               	movwf	_dtoa$1596
  7031  0DAA  3000               	movlw	0
  7032  0DAB  00C8               	movwf	_dtoa$1596+1
  7033  0DAC                     l3935:
  7034  0DAC  0847               	movf	_dtoa$1596,w
  7035  0DAD  00C3               	movwf	??_dtoa
  7036  0DAE  0857               	movf	dtoa@i,w
  7037  0DAF  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7038  0DB0  0086               	movwf	6
  7039  0DB1  3001               	movlw	1	; select bank3/4
  7040  0DB2  0087               	movwf	7
  7041  0DB3  0843               	movf	??_dtoa,w
  7042  0DB4  0081               	movwf	1
  7043  0DB5                     l3937:
  7044                           
  7045                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7046  0DB5  0857               	movf	dtoa@i,w
  7047  0DB6  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7048  0DB7  00C3               	movwf	??_dtoa
  7049  0DB8  0843               	movf	??_dtoa,w
  7050  0DB9  00B0               	movwf	pad@buf
  7051  0DBA  084C               	movf	dtoa@w+1,w
  7052  0DBB  00B2               	movwf	pad@p+1
  7053  0DBC  084B               	movf	dtoa@w,w
  7054  0DBD  00B1               	movwf	pad@p
  7055  0DBE  0846               	movf	dtoa@fp,w
  7056  0DBF  3187  279F  318C   	fcall	_pad
  7057  0DC2  0020               	movlb	0	; select bank0
  7058  0DC3  0831               	movf	?_pad+1,w
  7059  0DC4  00BC               	movwf	?_dtoa+1
  7060  0DC5  0830               	movf	?_pad,w
  7061  0DC6  00BB               	movwf	?_dtoa
  7062  0DC7                     l1181:
  7063  0DC7  0008               	return
  7064  0DC8                     __end_of_dtoa:
  7065                           
  7066                           	psect	text8
  7067  079F                     __ptext8:	
  7068 ;; *************** function _pad *****************
  7069 ;; Defined at:
  7070 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  fp              1    wreg     PTR struct _IO_FILE
  7073 ;;		 -> sprintf@f(10), 
  7074 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  7075 ;;		 -> dbuf(32), 
  7076 ;;  p               2   17[BANK0 ] int 
  7077 ;; Auto vars:     Size  Location     Type
  7078 ;;  fp              1   24[BANK0 ] PTR struct _IO_FILE
  7079 ;;		 -> sprintf@f(10), 
  7080 ;;  w               2   22[BANK0 ] int 
  7081 ;;  i               2   20[BANK0 ] int 
  7082 ;; Return value:  Size  Location     Type
  7083 ;;                  2   16[BANK0 ] int 
  7084 ;; Registers used:
  7085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7086 ;; Tracked objects:
  7087 ;;		On entry : 0/0
  7088 ;;		On exit  : 0/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7091 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7092 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7093 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7094 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7095 ;;Total ram usage:        9 bytes
  7096 ;; Hardware stack levels used: 1
  7097 ;; Hardware stack levels required when called: 5
  7098 ;; This function calls:
  7099 ;;		_fputc
  7100 ;;		_fputs
  7101 ;;		_strlen
  7102 ;; This function is called by:
  7103 ;;		_dtoa
  7104 ;; This function uses a non-reentrant model
  7105 ;;
  7106                           
  7107  079F                     _pad:	
  7108                           ;psect for function _pad
  7109                           
  7110                           
  7111                           ;incstack = 0
  7112                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7113                           ;pad@fp stored from wreg
  7114  079F  0020               	movlb	0	; select bank0
  7115  07A0  00B8               	movwf	pad@fp
  7116  07A1                     l3857:
  7117                           
  7118                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7119  07A1  1C76               	btfss	_flags,0
  7120  07A2  2FA4               	goto	u4081
  7121  07A3  2FA5               	goto	u4080
  7122  07A4                     u4081:
  7123  07A4  2FAD               	goto	l3861
  7124  07A5                     u4080:
  7125  07A5                     l3859:
  7126                           
  7127                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7128  07A5  0838               	movf	pad@fp,w
  7129  07A6  00B3               	movwf	??_pad
  7130  07A7  0833               	movf	??_pad,w
  7131  07A8  00A8               	movwf	fputs@fp
  7132  07A9  0830               	movf	pad@buf,w
  7133  07AA  3196  26B7  3187   	fcall	_fputs
  7134  07AD                     l3861:
  7135                           
  7136                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7137  07AD  0020               	movlb	0	; select bank0
  7138  07AE  1BB2               	btfsc	pad@p+1,7
  7139  07AF  2FB1               	goto	u4091
  7140  07B0  2FB2               	goto	u4090
  7141  07B1                     u4091:
  7142  07B1  2FB7               	goto	l3865
  7143  07B2                     u4090:
  7144  07B2                     l3863:
  7145  07B2  0832               	movf	pad@p+1,w
  7146  07B3  00B7               	movwf	pad@w+1
  7147  07B4  0831               	movf	pad@p,w
  7148  07B5  00B6               	movwf	pad@w
  7149  07B6  2FB9               	goto	l1150
  7150  07B7                     l3865:
  7151  07B7  01B6               	clrf	pad@w
  7152  07B8  01B7               	clrf	pad@w+1
  7153  07B9                     l1150:
  7154                           
  7155                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7156  07B9  01B4               	clrf	pad@i
  7157  07BA  01B5               	clrf	pad@i+1
  7158                           
  7159                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7160  07BB  2FCD               	goto	l3871
  7161  07BC                     l3867:
  7162                           
  7163                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7164  07BC  3020               	movlw	32
  7165  07BD  0020               	movlb	0	; select bank0
  7166  07BE  00A0               	movwf	fputc@c
  7167  07BF  3000               	movlw	0
  7168  07C0  00A1               	movwf	fputc@c+1
  7169  07C1  0838               	movf	pad@fp,w
  7170  07C2  00B3               	movwf	??_pad
  7171  07C3  0833               	movf	??_pad,w
  7172  07C4  00A2               	movwf	fputc@fp
  7173  07C5  3188  2095  3187   	fcall	_fputc
  7174  07C8                     l3869:
  7175                           
  7176                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7177  07C8  3001               	movlw	1
  7178  07C9  0020               	movlb	0	; select bank0
  7179  07CA  07B4               	addwf	pad@i,f
  7180  07CB  3000               	movlw	0
  7181  07CC  3DB5               	addwfc	pad@i+1,f
  7182  07CD                     l3871:
  7183                           
  7184                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7185  07CD  0835               	movf	pad@i+1,w
  7186  07CE  3A80               	xorlw	128
  7187  07CF  00B3               	movwf	??_pad
  7188  07D0  0837               	movf	pad@w+1,w
  7189  07D1  3A80               	xorlw	128
  7190  07D2  0233               	subwf	??_pad,w
  7191  07D3  1D03               	skipz
  7192  07D4  2FD7               	goto	u4105
  7193  07D5  0836               	movf	pad@w,w
  7194  07D6  0234               	subwf	pad@i,w
  7195  07D7                     u4105:
  7196  07D7  1C03               	skipc
  7197  07D8  2FDA               	goto	u4101
  7198  07D9  2FDB               	goto	u4100
  7199  07DA                     u4101:
  7200  07DA  2FBC               	goto	l3867
  7201  07DB                     u4100:
  7202  07DB                     l1153:
  7203                           
  7204                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7205  07DB  1876               	btfsc	_flags,0
  7206  07DC  2FDE               	goto	u4111
  7207  07DD  2FDF               	goto	u4110
  7208  07DE                     u4111:
  7209  07DE  2FE8               	goto	l3875
  7210  07DF                     u4110:
  7211  07DF                     l3873:
  7212                           
  7213                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7214  07DF  0020               	movlb	0	; select bank0
  7215  07E0  0838               	movf	pad@fp,w
  7216  07E1  00B3               	movwf	??_pad
  7217  07E2  0833               	movf	??_pad,w
  7218  07E3  00A8               	movwf	fputs@fp
  7219  07E4  0830               	movf	pad@buf,w
  7220  07E5  3196  26B7  3187   	fcall	_fputs
  7221  07E8                     l3875:
  7222                           
  7223                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7224  07E8  0020               	movlb	0	; select bank0
  7225  07E9  0830               	movf	pad@buf,w
  7226  07EA  3196  2633  3187   	fcall	_strlen
  7227  07ED  0020               	movlb	0	; select bank0
  7228  07EE  0836               	movf	pad@w,w
  7229  07EF  0720               	addwf	?_strlen,w
  7230  07F0  00B0               	movwf	?_pad
  7231  07F1  0837               	movf	pad@w+1,w
  7232  07F2  3D21               	addwfc	?_strlen+1,w
  7233  07F3  00B1               	movwf	?_pad+1
  7234  07F4                     l1155:
  7235  07F4  0008               	return
  7236  07F5                     __end_of_pad:
  7237                           
  7238                           	psect	text9
  7239  1633                     __ptext9:	
  7240 ;; *************** function _strlen *****************
  7241 ;; Defined at:
  7242 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;  s               1    wreg     PTR const unsigned char 
  7245 ;;		 -> dbuf(32), 
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  7248 ;;		 -> dbuf(32), 
  7249 ;;  a               1    3[BANK0 ] PTR const unsigned char 
  7250 ;;		 -> dbuf(32), 
  7251 ;; Return value:  Size  Location     Type
  7252 ;;                  2    0[BANK0 ] unsigned int 
  7253 ;; Registers used:
  7254 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7255 ;; Tracked objects:
  7256 ;;		On entry : 0/0
  7257 ;;		On exit  : 0/0
  7258 ;;		Unchanged: 0/0
  7259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7260 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7261 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7262 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7263 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7264 ;;Total ram usage:        5 bytes
  7265 ;; Hardware stack levels used: 1
  7266 ;; Hardware stack levels required when called: 2
  7267 ;; This function calls:
  7268 ;;		Nothing
  7269 ;; This function is called by:
  7270 ;;		_pad
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274  1633                     _strlen:	
  7275                           ;psect for function _strlen
  7276                           
  7277                           
  7278                           ;incstack = 0
  7279                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  7280                           ;strlen@s stored from wreg
  7281  1633  0020               	movlb	0	; select bank0
  7282  1634  00A4               	movwf	strlen@s
  7283  1635                     l3779:
  7284  1635  0824               	movf	strlen@s,w
  7285  1636  00A2               	movwf	??_strlen
  7286  1637  0822               	movf	??_strlen,w
  7287  1638  00A3               	movwf	strlen@a
  7288  1639  2E3E               	goto	l3783
  7289  163A                     l3781:
  7290  163A  3001               	movlw	1
  7291  163B  00A2               	movwf	??_strlen
  7292  163C  0822               	movf	??_strlen,w
  7293  163D  07A4               	addwf	strlen@s,f
  7294  163E                     l3783:
  7295  163E  0824               	movf	strlen@s,w
  7296  163F  0086               	movwf	6
  7297  1640  3001               	movlw	1	; select bank2/3
  7298  1641  0087               	movwf	7
  7299  1642  0801               	movf	1,w
  7300  1643  1D03               	btfss	3,2
  7301  1644  2E46               	goto	u3861
  7302  1645  2E47               	goto	u3860
  7303  1646                     u3861:
  7304  1646  2E3A               	goto	l3781
  7305  1647                     u3860:
  7306  1647                     l3785:
  7307  1647  0823               	movf	strlen@a,w
  7308  1648  0224               	subwf	strlen@s,w
  7309  1649  00A0               	movwf	?_strlen
  7310  164A  01A1               	clrf	?_strlen+1
  7311  164B  1BA0               	btfsc	?_strlen,7
  7312  164C  03A1               	decf	?_strlen+1,f
  7313  164D                     l1231:
  7314  164D  0008               	return
  7315  164E                     __end_of_strlen:
  7316                           
  7317                           	psect	text10
  7318  16B7                     __ptext10:	
  7319 ;; *************** function _fputs *****************
  7320 ;; Defined at:
  7321 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  7322 ;; Parameters:    Size  Location     Type
  7323 ;;  s               1    wreg     PTR const unsigned char 
  7324 ;;		 -> dbuf(32), 
  7325 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
  7326 ;;		 -> sprintf@f(10), 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;  s               1   15[BANK0 ] PTR const unsigned char 
  7329 ;;		 -> dbuf(32), 
  7330 ;;  i               2   13[BANK0 ] int 
  7331 ;;  c               1   12[BANK0 ] unsigned char 
  7332 ;; Return value:  Size  Location     Type
  7333 ;;                  2    8[BANK0 ] int 
  7334 ;; Registers used:
  7335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7336 ;; Tracked objects:
  7337 ;;		On entry : 0/0
  7338 ;;		On exit  : 0/0
  7339 ;;		Unchanged: 0/0
  7340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7341 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7342 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7343 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7344 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7345 ;;Total ram usage:        8 bytes
  7346 ;; Hardware stack levels used: 1
  7347 ;; Hardware stack levels required when called: 4
  7348 ;; This function calls:
  7349 ;;		_fputc
  7350 ;; This function is called by:
  7351 ;;		_pad
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355  16B7                     _fputs:	
  7356                           ;psect for function _fputs
  7357                           
  7358                           
  7359                           ;incstack = 0
  7360                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7361                           ;fputs@s stored from wreg
  7362  16B7  0020               	movlb	0	; select bank0
  7363  16B8  00AF               	movwf	fputs@s
  7364  16B9                     l3771:
  7365  16B9  01AD               	clrf	fputs@i
  7366  16BA  01AE               	clrf	fputs@i+1
  7367  16BB  2ECF               	goto	l3777
  7368  16BC                     l3773:
  7369  16BC  082C               	movf	fputs@c,w
  7370  16BD  00A9               	movwf	??_fputs
  7371  16BE  01AA               	clrf	??_fputs+1
  7372  16BF  0829               	movf	??_fputs,w
  7373  16C0  00A0               	movwf	fputc@c
  7374  16C1  082A               	movf	??_fputs+1,w
  7375  16C2  00A1               	movwf	fputc@c+1
  7376  16C3  0828               	movf	fputs@fp,w
  7377  16C4  00AB               	movwf	??_fputs+2
  7378  16C5  082B               	movf	??_fputs+2,w
  7379  16C6  00A2               	movwf	fputc@fp
  7380  16C7  3188  2095  3196   	fcall	_fputc
  7381  16CA                     l3775:
  7382  16CA  3001               	movlw	1
  7383  16CB  0020               	movlb	0	; select bank0
  7384  16CC  07AD               	addwf	fputs@i,f
  7385  16CD  3000               	movlw	0
  7386  16CE  3DAE               	addwfc	fputs@i+1,f
  7387  16CF                     l3777:
  7388  16CF  082D               	movf	fputs@i,w
  7389  16D0  072F               	addwf	fputs@s,w
  7390  16D1  00A9               	movwf	??_fputs
  7391  16D2  0829               	movf	??_fputs,w
  7392  16D3  0086               	movwf	6
  7393  16D4  3001               	movlw	1	; select bank2/3
  7394  16D5  0087               	movwf	7
  7395  16D6  0801               	movf	1,w
  7396  16D7  00AA               	movwf	??_fputs+1
  7397  16D8  082A               	movf	??_fputs+1,w
  7398  16D9  00AC               	movwf	fputs@c
  7399  16DA  082C               	movf	fputs@c,w
  7400  16DB  1D03               	btfss	3,2
  7401  16DC  2EDE               	goto	u3851
  7402  16DD  2EDF               	goto	u3850
  7403  16DE                     u3851:
  7404  16DE  2EBC               	goto	l3773
  7405  16DF                     u3850:
  7406  16DF                     l1222:
  7407  16DF  0008               	return
  7408  16E0                     __end_of_fputs:
  7409                           
  7410                           	psect	text11
  7411  0895                     __ptext11:	
  7412 ;; *************** function _fputc *****************
  7413 ;; Defined at:
  7414 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;  c               2    0[BANK0 ] int 
  7417 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  7418 ;;		 -> sprintf@f(10), 
  7419 ;; Auto vars:     Size  Location     Type
  7420 ;;		None
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  2    0[BANK0 ] int 
  7423 ;; Registers used:
  7424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7425 ;; Tracked objects:
  7426 ;;		On entry : 0/0
  7427 ;;		On exit  : 0/0
  7428 ;;		Unchanged: 0/0
  7429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7430 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7432 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7433 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7434 ;;Total ram usage:        8 bytes
  7435 ;; Hardware stack levels used: 1
  7436 ;; Hardware stack levels required when called: 3
  7437 ;; This function calls:
  7438 ;;		_putch
  7439 ;; This function is called by:
  7440 ;;		_pad
  7441 ;;		_vfpfcnvrt
  7442 ;;		_fputs
  7443 ;; This function uses a non-reentrant model
  7444 ;;
  7445                           
  7446  0895                     _fputc:	
  7447                           ;psect for function _fputc
  7448                           
  7449  0895                     l3755:	
  7450                           ;incstack = 0
  7451                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7452                           
  7453  0895  0020               	movlb	0	; select bank0
  7454  0896  0822               	movf	fputc@fp,w
  7455  0897  1903               	btfsc	3,2
  7456  0898  289A               	goto	u3811
  7457  0899  289B               	goto	u3810
  7458  089A                     u3811:
  7459  089A  28A0               	goto	l3759
  7460  089B                     u3810:
  7461  089B                     l3757:
  7462  089B  0822               	movf	fputc@fp,w
  7463  089C  1D03               	btfss	3,2
  7464  089D  289F               	goto	u3821
  7465  089E  28A0               	goto	u3820
  7466  089F                     u3821:
  7467  089F  28A5               	goto	l3761
  7468  08A0                     u3820:
  7469  08A0                     l3759:
  7470  08A0  0820               	movf	fputc@c,w
  7471  08A1  3187  27FE  3188   	fcall	_putch
  7472  08A4  28E9               	goto	l1214
  7473  08A5                     l3761:
  7474  08A5  0822               	movf	fputc@fp,w
  7475  08A6  3E08               	addlw	8
  7476  08A7  0086               	movwf	6
  7477  08A8  0187               	clrf	7
  7478  08A9  0016               	moviw fsr1++
  7479  08AA  0401               	iorwf	1,w
  7480  08AB  1903               	btfsc	3,2
  7481  08AC  28AE               	goto	u3831
  7482  08AD  28AF               	goto	u3830
  7483  08AE                     u3831:
  7484  08AE  28CD               	goto	l3765
  7485  08AF                     u3830:
  7486  08AF                     l3763:
  7487  08AF  0822               	movf	fputc@fp,w
  7488  08B0  3E08               	addlw	8
  7489  08B1  0086               	movwf	6
  7490  08B2  0187               	clrf	7
  7491  08B3  3F40               	moviw [0]fsr1
  7492  08B4  00A3               	movwf	??_fputc
  7493  08B5  3F41               	moviw [1]fsr1
  7494  08B6  00A4               	movwf	??_fputc+1
  7495  08B7  0822               	movf	fputc@fp,w
  7496  08B8  3E02               	addlw	2
  7497  08B9  0086               	movwf	6
  7498  08BA  0187               	clrf	7
  7499  08BB  3F40               	moviw [0]fsr1
  7500  08BC  00A5               	movwf	??_fputc+2
  7501  08BD  3F41               	moviw [1]fsr1
  7502  08BE  00A6               	movwf	??_fputc+3
  7503  08BF  0826               	movf	??_fputc+3,w
  7504  08C0  3A80               	xorlw	128
  7505  08C1  00A7               	movwf	??_fputc+4
  7506  08C2  0824               	movf	??_fputc+1,w
  7507  08C3  3A80               	xorlw	128
  7508  08C4  0227               	subwf	??_fputc+4,w
  7509  08C5  1D03               	skipz
  7510  08C6  28C9               	goto	u3845
  7511  08C7  0823               	movf	??_fputc,w
  7512  08C8  0225               	subwf	??_fputc+2,w
  7513  08C9                     u3845:
  7514  08C9  1803               	skipnc
  7515  08CA  28CC               	goto	u3841
  7516  08CB  28CD               	goto	u3840
  7517  08CC                     u3841:
  7518  08CC  28E9               	goto	l1214
  7519  08CD                     u3840:
  7520  08CD                     l3765:
  7521  08CD  0020               	movlb	0	; select bank0
  7522  08CE  0820               	movf	fputc@c,w
  7523  08CF  00A3               	movwf	??_fputc
  7524  08D0  0822               	movf	fputc@fp,w
  7525  08D1  0086               	movwf	6
  7526  08D2  0187               	clrf	7
  7527  08D3  0822               	movf	fputc@fp,w
  7528  08D4  3E02               	addlw	2
  7529  08D5  0084               	movwf	4
  7530  08D6  0185               	clrf	5
  7531  08D7  0800               	movf	0,w
  7532  08D8  0701               	addwf	1,w
  7533  08D9  00A4               	movwf	??_fputc+1
  7534  08DA  0824               	movf	??_fputc+1,w
  7535  08DB  0086               	movwf	6
  7536  08DC  3001               	movlw	1	; select bank2/3
  7537  08DD  0087               	movwf	7
  7538  08DE  0823               	movf	??_fputc,w
  7539  08DF  0081               	movwf	1
  7540  08E0                     l3767:
  7541  08E0  0822               	movf	fputc@fp,w
  7542  08E1  3E02               	addlw	2
  7543  08E2  0086               	movwf	6
  7544  08E3  0187               	clrf	7
  7545  08E4  3001               	movlw	1
  7546  08E5  0781               	addwf	1,f
  7547  08E6  3141               	addfsr 1,1
  7548  08E7  1803               	skipnc
  7549  08E8  0A81               	incf	1,f
  7550  08E9                     l1214:
  7551  08E9  0008               	return
  7552  08EA                     __end_of_fputc:
  7553                           
  7554                           	psect	text12
  7555  07FE                     __ptext12:	
  7556 ;; *************** function _putch *****************
  7557 ;; Defined at:
  7558 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;  c               1    wreg     unsigned char 
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;  c               1    0[COMMON] unsigned char 
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  1    wreg      void 
  7565 ;; Registers used:
  7566 ;;		wreg
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7576 ;;Total ram usage:        0 bytes
  7577 ;; Hardware stack levels used: 1
  7578 ;; Hardware stack levels required when called: 2
  7579 ;; This function calls:
  7580 ;;		Nothing
  7581 ;; This function is called by:
  7582 ;;		_fputc
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586  07FE                     _putch:	
  7587                           ;psect for function _putch
  7588                           
  7589  07FE                     l1225:	
  7590                           ;incstack = 0
  7591                           ; Regs used in _putch: [wreg]
  7592                           
  7593  07FE  0008               	return
  7594  07FF                     __end_of_putch:
  7595                           
  7596                           	psect	text13
  7597  164E                     __ptext13:	
  7598 ;; *************** function _abs *****************
  7599 ;; Defined at:
  7600 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;  a               2   19[BANK0 ] int 
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;		None
  7605 ;; Return value:  Size  Location     Type
  7606 ;;                  2   19[BANK0 ] int 
  7607 ;; Registers used:
  7608 ;;		wreg, status,2, status,0
  7609 ;; Tracked objects:
  7610 ;;		On entry : 0/0
  7611 ;;		On exit  : 0/0
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7614 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7616 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7617 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7618 ;;Total ram usage:        4 bytes
  7619 ;; Hardware stack levels used: 1
  7620 ;; Hardware stack levels required when called: 2
  7621 ;; This function calls:
  7622 ;;		Nothing
  7623 ;; This function is called by:
  7624 ;;		_dtoa
  7625 ;; This function uses a non-reentrant model
  7626 ;;
  7627                           
  7628  164E                     _abs:	
  7629                           ;psect for function _abs
  7630                           
  7631  164E                     l3879:	
  7632                           ;incstack = 0
  7633                           ; Regs used in _abs: [wreg+status,2+status,0]
  7634                           
  7635  164E  0020               	movlb	0	; select bank0
  7636  164F  0834               	movf	abs@a+1,w
  7637  1650  3A80               	xorlw	128
  7638  1651  00B5               	movwf	??_abs
  7639  1652  3080               	movlw	128
  7640  1653  0235               	subwf	??_abs,w
  7641  1654  1D03               	skipz
  7642  1655  2E58               	goto	u4125
  7643  1656  3001               	movlw	1
  7644  1657  0233               	subwf	abs@a,w
  7645  1658                     u4125:
  7646  1658  1803               	skipnc
  7647  1659  2E5B               	goto	u4121
  7648  165A  2E5C               	goto	u4120
  7649  165B                     u4121:
  7650  165B  2E69               	goto	l1199
  7651  165C                     u4120:
  7652  165C                     l3881:
  7653  165C  0020               	movlb	0	; select bank0
  7654  165D  0933               	comf	abs@a,w
  7655  165E  00B5               	movwf	??_abs
  7656  165F  0934               	comf	abs@a+1,w
  7657  1660  00B6               	movwf	??_abs+1
  7658  1661  0AB5               	incf	??_abs,f
  7659  1662  1903               	skipnz
  7660  1663  0AB6               	incf	??_abs+1,f
  7661  1664  0835               	movf	??_abs,w
  7662  1665  00B3               	movwf	?_abs
  7663  1666  0836               	movf	??_abs+1,w
  7664  1667  00B4               	movwf	?_abs+1
  7665  1668  2E69               	goto	l1202
  7666  1669                     l1199:
  7667  1669                     l1202:
  7668  1669  0008               	return
  7669  166A                     __end_of_abs:
  7670                           
  7671                           	psect	text14
  7672  0B72                     __ptext14:	
  7673 ;; *************** function ___aomod *****************
  7674 ;; Defined at:
  7675 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  7676 ;; Parameters:    Size  Location     Type
  7677 ;;  divisor         8    0[BANK0 ] long long 
  7678 ;;  dividend        8    8[BANK0 ] long long 
  7679 ;; Auto vars:     Size  Location     Type
  7680 ;;  sign            1   18[BANK0 ] unsigned char 
  7681 ;;  counter         1   17[BANK0 ] unsigned char 
  7682 ;; Return value:  Size  Location     Type
  7683 ;;                  8    0[BANK0 ] long long 
  7684 ;; Registers used:
  7685 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7686 ;; Tracked objects:
  7687 ;;		On entry : 0/0
  7688 ;;		On exit  : 0/0
  7689 ;;		Unchanged: 0/0
  7690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7691 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7692 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7693 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7694 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7695 ;;Total ram usage:       19 bytes
  7696 ;; Hardware stack levels used: 1
  7697 ;; Hardware stack levels required when called: 2
  7698 ;; This function calls:
  7699 ;;		Nothing
  7700 ;; This function is called by:
  7701 ;;		_dtoa
  7702 ;; This function uses a non-reentrant model
  7703 ;;
  7704                           
  7705  0B72                     ___aomod:	
  7706                           ;psect for function ___aomod
  7707                           
  7708  0B72                     l3827:	
  7709                           ;incstack = 0
  7710                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  7711                           
  7712  0B72  0020               	movlb	0	; select bank0
  7713  0B73  01B2               	clrf	___aomod@sign
  7714  0B74                     l3829:
  7715  0B74  3028               	movlw	low ___aomod@dividend
  7716  0B75  0086               	movwf	6
  7717  0B76  3000               	movlw	high ___aomod@dividend
  7718  0B77  0087               	movwf	7
  7719  0B78  3F47               	moviw [7]fsr1
  7720  0B79  00B0               	movwf	??___aomod
  7721  0B7A  1FB0               	btfss	??___aomod,7
  7722  0B7B  2B7D               	goto	u3981
  7723  0B7C  2B7E               	goto	u3980
  7724  0B7D                     u3981:
  7725  0B7D  2BA0               	goto	l3833
  7726  0B7E                     u3980:
  7727  0B7E                     l3831:
  7728  0B7E  0020               	movlb	0	; select bank0
  7729  0B7F  09A8               	comf	___aomod@dividend,f
  7730  0B80  09A9               	comf	___aomod@dividend+1,f
  7731  0B81  09AA               	comf	___aomod@dividend+2,f
  7732  0B82  09AB               	comf	___aomod@dividend+3,f
  7733  0B83  09AC               	comf	___aomod@dividend+4,f
  7734  0B84  09AD               	comf	___aomod@dividend+5,f
  7735  0B85  09AE               	comf	___aomod@dividend+6,f
  7736  0B86  09AF               	comf	___aomod@dividend+7,f
  7737  0B87  0AA8               	incf	___aomod@dividend,f
  7738  0B88  1D03               	skipz
  7739  0B89  2B9D               	goto	u399lld
  7740  0B8A  0AA9               	incf	___aomod@dividend+1,f
  7741  0B8B  1D03               	skipz
  7742  0B8C  2B9D               	goto	u399lld
  7743  0B8D  0AAA               	incf	___aomod@dividend+2,f
  7744  0B8E  1D03               	skipz
  7745  0B8F  2B9D               	goto	u399lld
  7746  0B90  0AAB               	incf	___aomod@dividend+3,f
  7747  0B91  1D03               	skipz
  7748  0B92  2B9D               	goto	u399lld
  7749  0B93  0AAC               	incf	___aomod@dividend+4,f
  7750  0B94  1D03               	skipz
  7751  0B95  2B9D               	goto	u399lld
  7752  0B96  0AAD               	incf	___aomod@dividend+5,f
  7753  0B97  1D03               	skipz
  7754  0B98  2B9D               	goto	u399lld
  7755  0B99  0AAE               	incf	___aomod@dividend+6,f
  7756  0B9A  1D03               	skipz
  7757  0B9B  2B9D               	goto	u399lld
  7758  0B9C  0AAF               	incf	___aomod@dividend+7,f
  7759  0B9D                     u399lld:
  7760  0B9D  0020               	movlb	0	; select bank0
  7761  0B9E  01B2               	clrf	___aomod@sign
  7762  0B9F  0AB2               	incf	___aomod@sign,f
  7763  0BA0                     l3833:
  7764  0BA0  3020               	movlw	low ___aomod@divisor
  7765  0BA1  0086               	movwf	6
  7766  0BA2  3000               	movlw	high ___aomod@divisor
  7767  0BA3  0087               	movwf	7
  7768  0BA4  3F47               	moviw [7]fsr1
  7769  0BA5  0020               	movlb	0	; select bank0
  7770  0BA6  00B0               	movwf	??___aomod
  7771  0BA7  1FB0               	btfss	??___aomod,7
  7772  0BA8  2BAA               	goto	u4001
  7773  0BA9  2BAB               	goto	u4000
  7774  0BAA                     u4001:
  7775  0BAA  2BCA               	goto	l3837
  7776  0BAB                     u4000:
  7777  0BAB                     l3835:
  7778  0BAB  0020               	movlb	0	; select bank0
  7779  0BAC  09A0               	comf	___aomod@divisor,f
  7780  0BAD  09A1               	comf	___aomod@divisor+1,f
  7781  0BAE  09A2               	comf	___aomod@divisor+2,f
  7782  0BAF  09A3               	comf	___aomod@divisor+3,f
  7783  0BB0  09A4               	comf	___aomod@divisor+4,f
  7784  0BB1  09A5               	comf	___aomod@divisor+5,f
  7785  0BB2  09A6               	comf	___aomod@divisor+6,f
  7786  0BB3  09A7               	comf	___aomod@divisor+7,f
  7787  0BB4  0AA0               	incf	___aomod@divisor,f
  7788  0BB5  1D03               	skipz
  7789  0BB6  2BCA               	goto	u401lld
  7790  0BB7  0AA1               	incf	___aomod@divisor+1,f
  7791  0BB8  1D03               	skipz
  7792  0BB9  2BCA               	goto	u401lld
  7793  0BBA  0AA2               	incf	___aomod@divisor+2,f
  7794  0BBB  1D03               	skipz
  7795  0BBC  2BCA               	goto	u401lld
  7796  0BBD  0AA3               	incf	___aomod@divisor+3,f
  7797  0BBE  1D03               	skipz
  7798  0BBF  2BCA               	goto	u401lld
  7799  0BC0  0AA4               	incf	___aomod@divisor+4,f
  7800  0BC1  1D03               	skipz
  7801  0BC2  2BCA               	goto	u401lld
  7802  0BC3  0AA5               	incf	___aomod@divisor+5,f
  7803  0BC4  1D03               	skipz
  7804  0BC5  2BCA               	goto	u401lld
  7805  0BC6  0AA6               	incf	___aomod@divisor+6,f
  7806  0BC7  1D03               	skipz
  7807  0BC8  2BCA               	goto	u401lld
  7808  0BC9  0AA7               	incf	___aomod@divisor+7,f
  7809  0BCA                     u401lld:
  7810  0BCA                     l3837:
  7811  0BCA  0020               	movlb	0	; select bank0
  7812  0BCB  0820               	movf	___aomod@divisor,w
  7813  0BCC  0421               	iorwf	___aomod@divisor+1,w
  7814  0BCD  0422               	iorwf	___aomod@divisor+2,w
  7815  0BCE  0423               	iorwf	___aomod@divisor+3,w
  7816  0BCF  0424               	iorwf	___aomod@divisor+4,w
  7817  0BD0  0425               	iorwf	___aomod@divisor+5,w
  7818  0BD1  0426               	iorwf	___aomod@divisor+6,w
  7819  0BD2  0427               	iorwf	___aomod@divisor+7,w
  7820  0BD3  1903               	skipnz
  7821  0BD4  2BD6               	goto	u4021
  7822  0BD5  2BD7               	goto	u4020
  7823  0BD6                     u4021:
  7824  0BD6  2C2A               	goto	l3853
  7825  0BD7                     u4020:
  7826  0BD7                     l3839:
  7827  0BD7  01B1               	clrf	___aomod@counter
  7828  0BD8  0AB1               	incf	___aomod@counter,f
  7829  0BD9  2BE6               	goto	l3845
  7830  0BDA                     l3841:
  7831  0BDA  35A0               	lslf	___aomod@divisor,f
  7832  0BDB  0DA1               	rlf	___aomod@divisor+1,f
  7833  0BDC  0DA2               	rlf	___aomod@divisor+2,f
  7834  0BDD  0DA3               	rlf	___aomod@divisor+3,f
  7835  0BDE  0DA4               	rlf	___aomod@divisor+4,f
  7836  0BDF  0DA5               	rlf	___aomod@divisor+5,f
  7837  0BE0  0DA6               	rlf	___aomod@divisor+6,f
  7838  0BE1  0DA7               	rlf	___aomod@divisor+7,f
  7839  0BE2                     l3843:
  7840  0BE2  3001               	movlw	1
  7841  0BE3  00B0               	movwf	??___aomod
  7842  0BE4  0830               	movf	??___aomod,w
  7843  0BE5  07B1               	addwf	___aomod@counter,f
  7844  0BE6                     l3845:
  7845  0BE6  1FA7               	btfss	___aomod@divisor+7,7
  7846  0BE7  2BE9               	goto	u4031
  7847  0BE8  2BEA               	goto	u4030
  7848  0BE9                     u4031:
  7849  0BE9  2BDA               	goto	l3841
  7850  0BEA                     u4030:
  7851  0BEA                     l3847:
  7852  0BEA  0827               	movf	___aomod@divisor+7,w
  7853  0BEB  022F               	subwf	___aomod@dividend+7,w
  7854  0BEC  1D03               	skipz
  7855  0BED  2C08               	goto	u4045
  7856  0BEE  0826               	movf	___aomod@divisor+6,w
  7857  0BEF  022E               	subwf	___aomod@dividend+6,w
  7858  0BF0  1D03               	skipz
  7859  0BF1  2C08               	goto	u4045
  7860  0BF2  0825               	movf	___aomod@divisor+5,w
  7861  0BF3  022D               	subwf	___aomod@dividend+5,w
  7862  0BF4  1D03               	skipz
  7863  0BF5  2C08               	goto	u4045
  7864  0BF6  0824               	movf	___aomod@divisor+4,w
  7865  0BF7  022C               	subwf	___aomod@dividend+4,w
  7866  0BF8  1D03               	skipz
  7867  0BF9  2C08               	goto	u4045
  7868  0BFA  0823               	movf	___aomod@divisor+3,w
  7869  0BFB  022B               	subwf	___aomod@dividend+3,w
  7870  0BFC  1D03               	skipz
  7871  0BFD  2C08               	goto	u4045
  7872  0BFE  0822               	movf	___aomod@divisor+2,w
  7873  0BFF  022A               	subwf	___aomod@dividend+2,w
  7874  0C00  1D03               	skipz
  7875  0C01  2C08               	goto	u4045
  7876  0C02  0821               	movf	___aomod@divisor+1,w
  7877  0C03  0229               	subwf	___aomod@dividend+1,w
  7878  0C04  1D03               	skipz
  7879  0C05  2C08               	goto	u4045
  7880  0C06  0820               	movf	___aomod@divisor,w
  7881  0C07  0228               	subwf	___aomod@dividend,w
  7882  0C08                     u4045:
  7883  0C08  1C03               	skipc
  7884  0C09  2C0B               	goto	u4041
  7885  0C0A  2C0C               	goto	u4040
  7886  0C0B                     u4041:
  7887  0C0B  2C1C               	goto	l3851
  7888  0C0C                     u4040:
  7889  0C0C                     l3849:
  7890  0C0C  0820               	movf	___aomod@divisor,w
  7891  0C0D  02A8               	subwf	___aomod@dividend,f
  7892  0C0E  0821               	movf	___aomod@divisor+1,w
  7893  0C0F  3BA9               	subwfb	___aomod@dividend+1,f
  7894  0C10  0822               	movf	___aomod@divisor+2,w
  7895  0C11  3BAA               	subwfb	___aomod@dividend+2,f
  7896  0C12  0823               	movf	___aomod@divisor+3,w
  7897  0C13  3BAB               	subwfb	___aomod@dividend+3,f
  7898  0C14  0824               	movf	___aomod@divisor+4,w
  7899  0C15  3BAC               	subwfb	___aomod@dividend+4,f
  7900  0C16  0825               	movf	___aomod@divisor+5,w
  7901  0C17  3BAD               	subwfb	___aomod@dividend+5,f
  7902  0C18  0826               	movf	___aomod@divisor+6,w
  7903  0C19  3BAE               	subwfb	___aomod@dividend+6,f
  7904  0C1A  0827               	movf	___aomod@divisor+7,w
  7905  0C1B  3BAF               	subwfb	___aomod@dividend+7,f
  7906  0C1C                     l3851:
  7907  0C1C  36A7               	lsrf	___aomod@divisor+7,f
  7908  0C1D  0CA6               	rrf	___aomod@divisor+6,f
  7909  0C1E  0CA5               	rrf	___aomod@divisor+5,f
  7910  0C1F  0CA4               	rrf	___aomod@divisor+4,f
  7911  0C20  0CA3               	rrf	___aomod@divisor+3,f
  7912  0C21  0CA2               	rrf	___aomod@divisor+2,f
  7913  0C22  0CA1               	rrf	___aomod@divisor+1,f
  7914  0C23  0CA0               	rrf	___aomod@divisor,f
  7915  0C24  3001               	movlw	1
  7916  0C25  02B1               	subwf	___aomod@counter,f
  7917  0C26  1D03               	btfss	3,2
  7918  0C27  2C29               	goto	u4051
  7919  0C28  2C2A               	goto	u4050
  7920  0C29                     u4051:
  7921  0C29  2BEA               	goto	l3847
  7922  0C2A                     u4050:
  7923  0C2A                     l3853:
  7924  0C2A  0832               	movf	___aomod@sign,w
  7925  0C2B  1903               	btfsc	3,2
  7926  0C2C  2C2E               	goto	u4061
  7927  0C2D  2C2F               	goto	u4060
  7928  0C2E                     u4061:
  7929  0C2E  2C4D               	goto	l768
  7930  0C2F                     u4060:
  7931  0C2F                     l3855:
  7932  0C2F  09A8               	comf	___aomod@dividend,f
  7933  0C30  09A9               	comf	___aomod@dividend+1,f
  7934  0C31  09AA               	comf	___aomod@dividend+2,f
  7935  0C32  09AB               	comf	___aomod@dividend+3,f
  7936  0C33  09AC               	comf	___aomod@dividend+4,f
  7937  0C34  09AD               	comf	___aomod@dividend+5,f
  7938  0C35  09AE               	comf	___aomod@dividend+6,f
  7939  0C36  09AF               	comf	___aomod@dividend+7,f
  7940  0C37  0AA8               	incf	___aomod@dividend,f
  7941  0C38  1D03               	skipz
  7942  0C39  2C4D               	goto	u407lld
  7943  0C3A  0AA9               	incf	___aomod@dividend+1,f
  7944  0C3B  1D03               	skipz
  7945  0C3C  2C4D               	goto	u407lld
  7946  0C3D  0AAA               	incf	___aomod@dividend+2,f
  7947  0C3E  1D03               	skipz
  7948  0C3F  2C4D               	goto	u407lld
  7949  0C40  0AAB               	incf	___aomod@dividend+3,f
  7950  0C41  1D03               	skipz
  7951  0C42  2C4D               	goto	u407lld
  7952  0C43  0AAC               	incf	___aomod@dividend+4,f
  7953  0C44  1D03               	skipz
  7954  0C45  2C4D               	goto	u407lld
  7955  0C46  0AAD               	incf	___aomod@dividend+5,f
  7956  0C47  1D03               	skipz
  7957  0C48  2C4D               	goto	u407lld
  7958  0C49  0AAE               	incf	___aomod@dividend+6,f
  7959  0C4A  1D03               	skipz
  7960  0C4B  2C4D               	goto	u407lld
  7961  0C4C  0AAF               	incf	___aomod@dividend+7,f
  7962  0C4D                     u407lld:
  7963  0C4D                     l768:
  7964  0C4D  0020               	movlb	0	; select bank0
  7965  0C4E  0828               	movf	___aomod@dividend,w
  7966  0C4F  00A0               	movwf	?___aomod
  7967  0C50  0829               	movf	___aomod@dividend+1,w
  7968  0C51  00A1               	movwf	?___aomod+1
  7969  0C52  082A               	movf	___aomod@dividend+2,w
  7970  0C53  00A2               	movwf	?___aomod+2
  7971  0C54  082B               	movf	___aomod@dividend+3,w
  7972  0C55  00A3               	movwf	?___aomod+3
  7973  0C56  082C               	movf	___aomod@dividend+4,w
  7974  0C57  00A4               	movwf	?___aomod+4
  7975  0C58  082D               	movf	___aomod@dividend+5,w
  7976  0C59  00A5               	movwf	?___aomod+5
  7977  0C5A  082E               	movf	___aomod@dividend+6,w
  7978  0C5B  00A6               	movwf	?___aomod+6
  7979  0C5C  082F               	movf	___aomod@dividend+7,w
  7980  0C5D  00A7               	movwf	?___aomod+7
  7981  0C5E                     l769:
  7982  0C5E  0008               	return
  7983  0C5F                     __end_of___aomod:
  7984                           
  7985                           	psect	text15
  7986  069A                     __ptext15:	
  7987 ;; *************** function ___aodiv *****************
  7988 ;; Defined at:
  7989 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  7990 ;; Parameters:    Size  Location     Type
  7991 ;;  divisor         8    0[BANK0 ] long long 
  7992 ;;  dividend        8    8[BANK0 ] long long 
  7993 ;; Auto vars:     Size  Location     Type
  7994 ;;  quotient        8   19[BANK0 ] long long 
  7995 ;;  sign            1   18[BANK0 ] unsigned char 
  7996 ;;  counter         1   17[BANK0 ] unsigned char 
  7997 ;; Return value:  Size  Location     Type
  7998 ;;                  8    0[BANK0 ] long long 
  7999 ;; Registers used:
  8000 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/0
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8006 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8007 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8008 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8009 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8010 ;;Total ram usage:       27 bytes
  8011 ;; Hardware stack levels used: 1
  8012 ;; Hardware stack levels required when called: 2
  8013 ;; This function calls:
  8014 ;;		Nothing
  8015 ;; This function is called by:
  8016 ;;		_dtoa
  8017 ;; This function uses a non-reentrant model
  8018 ;;
  8019                           
  8020  069A                     ___aodiv:	
  8021                           ;psect for function ___aodiv
  8022                           
  8023  069A                     l3789:	
  8024                           ;incstack = 0
  8025                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  8026                           
  8027  069A  0020               	movlb	0	; select bank0
  8028  069B  01B2               	clrf	___aodiv@sign
  8029  069C                     l3791:
  8030  069C  3020               	movlw	low ___aodiv@divisor
  8031  069D  0086               	movwf	6
  8032  069E  3000               	movlw	high ___aodiv@divisor
  8033  069F  0087               	movwf	7
  8034  06A0  3F47               	moviw [7]fsr1
  8035  06A1  00B0               	movwf	??___aodiv
  8036  06A2  1FB0               	btfss	??___aodiv,7
  8037  06A3  2EA5               	goto	u3871
  8038  06A4  2EA6               	goto	u3870
  8039  06A5                     u3871:
  8040  06A5  2EC8               	goto	l3795
  8041  06A6                     u3870:
  8042  06A6                     l3793:
  8043  06A6  0020               	movlb	0	; select bank0
  8044  06A7  09A0               	comf	___aodiv@divisor,f
  8045  06A8  09A1               	comf	___aodiv@divisor+1,f
  8046  06A9  09A2               	comf	___aodiv@divisor+2,f
  8047  06AA  09A3               	comf	___aodiv@divisor+3,f
  8048  06AB  09A4               	comf	___aodiv@divisor+4,f
  8049  06AC  09A5               	comf	___aodiv@divisor+5,f
  8050  06AD  09A6               	comf	___aodiv@divisor+6,f
  8051  06AE  09A7               	comf	___aodiv@divisor+7,f
  8052  06AF  0AA0               	incf	___aodiv@divisor,f
  8053  06B0  1D03               	skipz
  8054  06B1  2EC5               	goto	u388lld
  8055  06B2  0AA1               	incf	___aodiv@divisor+1,f
  8056  06B3  1D03               	skipz
  8057  06B4  2EC5               	goto	u388lld
  8058  06B5  0AA2               	incf	___aodiv@divisor+2,f
  8059  06B6  1D03               	skipz
  8060  06B7  2EC5               	goto	u388lld
  8061  06B8  0AA3               	incf	___aodiv@divisor+3,f
  8062  06B9  1D03               	skipz
  8063  06BA  2EC5               	goto	u388lld
  8064  06BB  0AA4               	incf	___aodiv@divisor+4,f
  8065  06BC  1D03               	skipz
  8066  06BD  2EC5               	goto	u388lld
  8067  06BE  0AA5               	incf	___aodiv@divisor+5,f
  8068  06BF  1D03               	skipz
  8069  06C0  2EC5               	goto	u388lld
  8070  06C1  0AA6               	incf	___aodiv@divisor+6,f
  8071  06C2  1D03               	skipz
  8072  06C3  2EC5               	goto	u388lld
  8073  06C4  0AA7               	incf	___aodiv@divisor+7,f
  8074  06C5                     u388lld:
  8075  06C5  0020               	movlb	0	; select bank0
  8076  06C6  01B2               	clrf	___aodiv@sign
  8077  06C7  0AB2               	incf	___aodiv@sign,f
  8078  06C8                     l3795:
  8079  06C8  3028               	movlw	low ___aodiv@dividend
  8080  06C9  0086               	movwf	6
  8081  06CA  3000               	movlw	high ___aodiv@dividend
  8082  06CB  0087               	movwf	7
  8083  06CC  3F47               	moviw [7]fsr1
  8084  06CD  0020               	movlb	0	; select bank0
  8085  06CE  00B0               	movwf	??___aodiv
  8086  06CF  1FB0               	btfss	??___aodiv,7
  8087  06D0  2ED2               	goto	u3891
  8088  06D1  2ED3               	goto	u3890
  8089  06D2                     u3891:
  8090  06D2  2EF7               	goto	l3801
  8091  06D3                     u3890:
  8092  06D3                     l3797:
  8093  06D3  0020               	movlb	0	; select bank0
  8094  06D4  09A8               	comf	___aodiv@dividend,f
  8095  06D5  09A9               	comf	___aodiv@dividend+1,f
  8096  06D6  09AA               	comf	___aodiv@dividend+2,f
  8097  06D7  09AB               	comf	___aodiv@dividend+3,f
  8098  06D8  09AC               	comf	___aodiv@dividend+4,f
  8099  06D9  09AD               	comf	___aodiv@dividend+5,f
  8100  06DA  09AE               	comf	___aodiv@dividend+6,f
  8101  06DB  09AF               	comf	___aodiv@dividend+7,f
  8102  06DC  0AA8               	incf	___aodiv@dividend,f
  8103  06DD  1D03               	skipz
  8104  06DE  2EF2               	goto	u390lld
  8105  06DF  0AA9               	incf	___aodiv@dividend+1,f
  8106  06E0  1D03               	skipz
  8107  06E1  2EF2               	goto	u390lld
  8108  06E2  0AAA               	incf	___aodiv@dividend+2,f
  8109  06E3  1D03               	skipz
  8110  06E4  2EF2               	goto	u390lld
  8111  06E5  0AAB               	incf	___aodiv@dividend+3,f
  8112  06E6  1D03               	skipz
  8113  06E7  2EF2               	goto	u390lld
  8114  06E8  0AAC               	incf	___aodiv@dividend+4,f
  8115  06E9  1D03               	skipz
  8116  06EA  2EF2               	goto	u390lld
  8117  06EB  0AAD               	incf	___aodiv@dividend+5,f
  8118  06EC  1D03               	skipz
  8119  06ED  2EF2               	goto	u390lld
  8120  06EE  0AAE               	incf	___aodiv@dividend+6,f
  8121  06EF  1D03               	skipz
  8122  06F0  2EF2               	goto	u390lld
  8123  06F1  0AAF               	incf	___aodiv@dividend+7,f
  8124  06F2                     u390lld:
  8125  06F2                     l3799:
  8126  06F2  3001               	movlw	1
  8127  06F3  0020               	movlb	0	; select bank0
  8128  06F4  00B0               	movwf	??___aodiv
  8129  06F5  0830               	movf	??___aodiv,w
  8130  06F6  06B2               	xorwf	___aodiv@sign,f
  8131  06F7                     l3801:
  8132  06F7  3033               	movlw	low ___aodiv@quotient
  8133  06F8  0086               	movwf	6
  8134  06F9  3000               	movlw	high ___aodiv@quotient
  8135  06FA  0087               	movwf	7
  8136  06FB  3008               	movlw	8
  8137  06FC  0020               	movlb	0	; select bank0
  8138  06FD  00B0               	movwf	??___aodiv
  8139  06FE  3000               	movlw	0
  8140  06FF                     u3910:
  8141  06FF  001E               	movwi fsr1++
  8142  0700  0BB0               	decfsz	??___aodiv,f
  8143  0701  2EFF               	goto	u3910
  8144  0702                     l3803:
  8145  0702  0820               	movf	___aodiv@divisor,w
  8146  0703  0421               	iorwf	___aodiv@divisor+1,w
  8147  0704  0422               	iorwf	___aodiv@divisor+2,w
  8148  0705  0423               	iorwf	___aodiv@divisor+3,w
  8149  0706  0424               	iorwf	___aodiv@divisor+4,w
  8150  0707  0425               	iorwf	___aodiv@divisor+5,w
  8151  0708  0426               	iorwf	___aodiv@divisor+6,w
  8152  0709  0427               	iorwf	___aodiv@divisor+7,w
  8153  070A  1903               	skipnz
  8154  070B  2F0D               	goto	u3921
  8155  070C  2F0E               	goto	u3920
  8156  070D                     u3921:
  8157  070D  2F6A               	goto	l3823
  8158  070E                     u3920:
  8159  070E                     l3805:
  8160  070E  01B1               	clrf	___aodiv@counter
  8161  070F  0AB1               	incf	___aodiv@counter,f
  8162  0710  2F1D               	goto	l3811
  8163  0711                     l3807:
  8164  0711  35A0               	lslf	___aodiv@divisor,f
  8165  0712  0DA1               	rlf	___aodiv@divisor+1,f
  8166  0713  0DA2               	rlf	___aodiv@divisor+2,f
  8167  0714  0DA3               	rlf	___aodiv@divisor+3,f
  8168  0715  0DA4               	rlf	___aodiv@divisor+4,f
  8169  0716  0DA5               	rlf	___aodiv@divisor+5,f
  8170  0717  0DA6               	rlf	___aodiv@divisor+6,f
  8171  0718  0DA7               	rlf	___aodiv@divisor+7,f
  8172  0719                     l3809:
  8173  0719  3001               	movlw	1
  8174  071A  00B0               	movwf	??___aodiv
  8175  071B  0830               	movf	??___aodiv,w
  8176  071C  07B1               	addwf	___aodiv@counter,f
  8177  071D                     l3811:
  8178  071D  1FA7               	btfss	___aodiv@divisor+7,7
  8179  071E  2F20               	goto	u3931
  8180  071F  2F21               	goto	u3930
  8181  0720                     u3931:
  8182  0720  2F11               	goto	l3807
  8183  0721                     u3930:
  8184  0721                     l3813:
  8185  0721  35B3               	lslf	___aodiv@quotient,f
  8186  0722  0DB4               	rlf	___aodiv@quotient+1,f
  8187  0723  0DB5               	rlf	___aodiv@quotient+2,f
  8188  0724  0DB6               	rlf	___aodiv@quotient+3,f
  8189  0725  0DB7               	rlf	___aodiv@quotient+4,f
  8190  0726  0DB8               	rlf	___aodiv@quotient+5,f
  8191  0727  0DB9               	rlf	___aodiv@quotient+6,f
  8192  0728  0DBA               	rlf	___aodiv@quotient+7,f
  8193  0729                     l3815:
  8194  0729  0827               	movf	___aodiv@divisor+7,w
  8195  072A  022F               	subwf	___aodiv@dividend+7,w
  8196  072B  1D03               	skipz
  8197  072C  2F47               	goto	u3945
  8198  072D  0826               	movf	___aodiv@divisor+6,w
  8199  072E  022E               	subwf	___aodiv@dividend+6,w
  8200  072F  1D03               	skipz
  8201  0730  2F47               	goto	u3945
  8202  0731  0825               	movf	___aodiv@divisor+5,w
  8203  0732  022D               	subwf	___aodiv@dividend+5,w
  8204  0733  1D03               	skipz
  8205  0734  2F47               	goto	u3945
  8206  0735  0824               	movf	___aodiv@divisor+4,w
  8207  0736  022C               	subwf	___aodiv@dividend+4,w
  8208  0737  1D03               	skipz
  8209  0738  2F47               	goto	u3945
  8210  0739  0823               	movf	___aodiv@divisor+3,w
  8211  073A  022B               	subwf	___aodiv@dividend+3,w
  8212  073B  1D03               	skipz
  8213  073C  2F47               	goto	u3945
  8214  073D  0822               	movf	___aodiv@divisor+2,w
  8215  073E  022A               	subwf	___aodiv@dividend+2,w
  8216  073F  1D03               	skipz
  8217  0740  2F47               	goto	u3945
  8218  0741  0821               	movf	___aodiv@divisor+1,w
  8219  0742  0229               	subwf	___aodiv@dividend+1,w
  8220  0743  1D03               	skipz
  8221  0744  2F47               	goto	u3945
  8222  0745  0820               	movf	___aodiv@divisor,w
  8223  0746  0228               	subwf	___aodiv@dividend,w
  8224  0747                     u3945:
  8225  0747  1C03               	skipc
  8226  0748  2F4A               	goto	u3941
  8227  0749  2F4B               	goto	u3940
  8228  074A                     u3941:
  8229  074A  2F5C               	goto	l3821
  8230  074B                     u3940:
  8231  074B                     l3817:
  8232  074B  0820               	movf	___aodiv@divisor,w
  8233  074C  02A8               	subwf	___aodiv@dividend,f
  8234  074D  0821               	movf	___aodiv@divisor+1,w
  8235  074E  3BA9               	subwfb	___aodiv@dividend+1,f
  8236  074F  0822               	movf	___aodiv@divisor+2,w
  8237  0750  3BAA               	subwfb	___aodiv@dividend+2,f
  8238  0751  0823               	movf	___aodiv@divisor+3,w
  8239  0752  3BAB               	subwfb	___aodiv@dividend+3,f
  8240  0753  0824               	movf	___aodiv@divisor+4,w
  8241  0754  3BAC               	subwfb	___aodiv@dividend+4,f
  8242  0755  0825               	movf	___aodiv@divisor+5,w
  8243  0756  3BAD               	subwfb	___aodiv@dividend+5,f
  8244  0757  0826               	movf	___aodiv@divisor+6,w
  8245  0758  3BAE               	subwfb	___aodiv@dividend+6,f
  8246  0759  0827               	movf	___aodiv@divisor+7,w
  8247  075A  3BAF               	subwfb	___aodiv@dividend+7,f
  8248  075B                     l3819:
  8249  075B  1433               	bsf	___aodiv@quotient,0
  8250  075C                     l3821:
  8251  075C  36A7               	lsrf	___aodiv@divisor+7,f
  8252  075D  0CA6               	rrf	___aodiv@divisor+6,f
  8253  075E  0CA5               	rrf	___aodiv@divisor+5,f
  8254  075F  0CA4               	rrf	___aodiv@divisor+4,f
  8255  0760  0CA3               	rrf	___aodiv@divisor+3,f
  8256  0761  0CA2               	rrf	___aodiv@divisor+2,f
  8257  0762  0CA1               	rrf	___aodiv@divisor+1,f
  8258  0763  0CA0               	rrf	___aodiv@divisor,f
  8259  0764  3001               	movlw	1
  8260  0765  02B1               	subwf	___aodiv@counter,f
  8261  0766  1D03               	btfss	3,2
  8262  0767  2F69               	goto	u3951
  8263  0768  2F6A               	goto	u3950
  8264  0769                     u3951:
  8265  0769  2F21               	goto	l3813
  8266  076A                     u3950:
  8267  076A                     l3823:
  8268  076A  0832               	movf	___aodiv@sign,w
  8269  076B  1903               	btfsc	3,2
  8270  076C  2F6E               	goto	u3961
  8271  076D  2F6F               	goto	u3960
  8272  076E                     u3961:
  8273  076E  2F8D               	goto	l755
  8274  076F                     u3960:
  8275  076F                     l3825:
  8276  076F  09B3               	comf	___aodiv@quotient,f
  8277  0770  09B4               	comf	___aodiv@quotient+1,f
  8278  0771  09B5               	comf	___aodiv@quotient+2,f
  8279  0772  09B6               	comf	___aodiv@quotient+3,f
  8280  0773  09B7               	comf	___aodiv@quotient+4,f
  8281  0774  09B8               	comf	___aodiv@quotient+5,f
  8282  0775  09B9               	comf	___aodiv@quotient+6,f
  8283  0776  09BA               	comf	___aodiv@quotient+7,f
  8284  0777  0AB3               	incf	___aodiv@quotient,f
  8285  0778  1D03               	skipz
  8286  0779  2F8D               	goto	u397lld
  8287  077A  0AB4               	incf	___aodiv@quotient+1,f
  8288  077B  1D03               	skipz
  8289  077C  2F8D               	goto	u397lld
  8290  077D  0AB5               	incf	___aodiv@quotient+2,f
  8291  077E  1D03               	skipz
  8292  077F  2F8D               	goto	u397lld
  8293  0780  0AB6               	incf	___aodiv@quotient+3,f
  8294  0781  1D03               	skipz
  8295  0782  2F8D               	goto	u397lld
  8296  0783  0AB7               	incf	___aodiv@quotient+4,f
  8297  0784  1D03               	skipz
  8298  0785  2F8D               	goto	u397lld
  8299  0786  0AB8               	incf	___aodiv@quotient+5,f
  8300  0787  1D03               	skipz
  8301  0788  2F8D               	goto	u397lld
  8302  0789  0AB9               	incf	___aodiv@quotient+6,f
  8303  078A  1D03               	skipz
  8304  078B  2F8D               	goto	u397lld
  8305  078C  0ABA               	incf	___aodiv@quotient+7,f
  8306  078D                     u397lld:
  8307  078D                     l755:
  8308  078D  0020               	movlb	0	; select bank0
  8309  078E  0833               	movf	___aodiv@quotient,w
  8310  078F  00A0               	movwf	?___aodiv
  8311  0790  0834               	movf	___aodiv@quotient+1,w
  8312  0791  00A1               	movwf	?___aodiv+1
  8313  0792  0835               	movf	___aodiv@quotient+2,w
  8314  0793  00A2               	movwf	?___aodiv+2
  8315  0794  0836               	movf	___aodiv@quotient+3,w
  8316  0795  00A3               	movwf	?___aodiv+3
  8317  0796  0837               	movf	___aodiv@quotient+4,w
  8318  0797  00A4               	movwf	?___aodiv+4
  8319  0798  0838               	movf	___aodiv@quotient+5,w
  8320  0799  00A5               	movwf	?___aodiv+5
  8321  079A  0839               	movf	___aodiv@quotient+6,w
  8322  079B  00A6               	movwf	?___aodiv+6
  8323  079C  083A               	movf	___aodiv@quotient+7,w
  8324  079D  00A7               	movwf	?___aodiv+7
  8325  079E                     l756:
  8326  079E  0008               	return
  8327  079F                     __end_of___aodiv:
  8328                           
  8329                           	psect	text16
  8330  161A                     __ptext16:	
  8331 ;; *************** function _initMSSP1_I2C *****************
  8332 ;; Defined at:
  8333 ;;		line 233 in file "main.c"
  8334 ;; Parameters:    Size  Location     Type
  8335 ;;		None
  8336 ;; Auto vars:     Size  Location     Type
  8337 ;;		None
  8338 ;; Return value:  Size  Location     Type
  8339 ;;                  1    wreg      void 
  8340 ;; Registers used:
  8341 ;;		wreg, status,2
  8342 ;; Tracked objects:
  8343 ;;		On entry : 0/0
  8344 ;;		On exit  : 0/0
  8345 ;;		Unchanged: 0/0
  8346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8351 ;;Total ram usage:        0 bytes
  8352 ;; Hardware stack levels used: 1
  8353 ;; Hardware stack levels required when called: 2
  8354 ;; This function calls:
  8355 ;;		Nothing
  8356 ;; This function is called by:
  8357 ;;		_main
  8358 ;; This function uses a non-reentrant model
  8359 ;;
  8360                           
  8361  161A                     _initMSSP1_I2C:	
  8362                           ;psect for function _initMSSP1_I2C
  8363                           
  8364  161A                     l4073:	
  8365                           ;incstack = 0
  8366                           ; Regs used in _initMSSP1_I2C: [wreg+status,2]
  8367                           
  8368                           
  8369                           ;main.c: 234:     OSCCON1 = 0x62;
  8370  161A  3062               	movlw	98
  8371  161B  0031               	movlb	17	; select bank17
  8372  161C  008D               	movwf	13	;volatile
  8373  161D                     l4075:
  8374                           
  8375                           ;main.c: 236:     OSCCON3 = 0x00;
  8376  161D  018F               	clrf	15	;volatile
  8377  161E                     l4077:
  8378                           
  8379                           ;main.c: 238:     OSCEN = 0x00;
  8380  161E  0191               	clrf	17	;volatile
  8381                           
  8382                           ;main.c: 240:     OSCFRQ = 0x02;
  8383  161F  3002               	movlw	2
  8384  1620  0093               	movwf	19	;volatile
  8385  1621                     l4079:
  8386                           
  8387                           ;main.c: 242:     OSCTUNE = 0x00;
  8388  1621  0192               	clrf	18	;volatile
  8389  1622                     l4081:
  8390                           
  8391                           ;main.c: 246:     SSP1CON1 = 0b00101000;
  8392  1622  3028               	movlw	40
  8393  1623  0023               	movlb	3	; select bank3
  8394  1624  0090               	movwf	16	;volatile
  8395  1625                     l4083:
  8396                           
  8397                           ;main.c: 249:     SSP1STAT = 0x80;
  8398  1625  3080               	movlw	128
  8399  1626  008F               	movwf	15	;volatile
  8400  1627                     l4085:
  8401                           
  8402                           ;main.c: 252:     SSP1CON2 = 0x10;
  8403  1627  3010               	movlw	16
  8404  1628  0091               	movwf	17	;volatile
  8405                           
  8406                           ;main.c: 255:     SSP1CON3 = 0x00;
  8407  1629  0192               	clrf	18	;volatile
  8408  162A                     l4087:
  8409                           
  8410                           ;main.c: 258:     SSP1ADD = (32000000/(4 * 400000))-1;
  8411  162A  3013               	movlw	19
  8412  162B  008D               	movwf	13	;volatile
  8413  162C                     l4089:
  8414                           
  8415                           ;main.c: 261:     TRISC = 0x58;
  8416  162C  3058               	movlw	88
  8417  162D  0020               	movlb	0	; select bank0
  8418  162E  0093               	movwf	19	;volatile
  8419  162F                     l4091:
  8420                           
  8421                           ;main.c: 263:     PIR3bits.SSP1IF = 0;
  8422  162F  002E               	movlb	14	; select bank14
  8423  1630  100F               	bcf	15,0	;volatile
  8424  1631                     l4093:
  8425                           
  8426                           ;main.c: 265:     PIE3bits.SSP1IE = 0;
  8427  1631  1019               	bcf	25,0	;volatile
  8428  1632                     l209:
  8429  1632  0008               	return
  8430  1633                     __end_of_initMSSP1_I2C:
  8431                           
  8432                           	psect	text17
  8433  168E                     __ptext17:	
  8434 ;; *************** function _fabsf *****************
  8435 ;; Defined at:
  8436 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fabsf.c"
  8437 ;; Parameters:    Size  Location     Type
  8438 ;;  x               4   14[BANK0 ] float 
  8439 ;; Auto vars:     Size  Location     Type
  8440 ;;  u               4   18[BANK0 ] struct .
  8441 ;; Return value:  Size  Location     Type
  8442 ;;                  4   14[BANK0 ] float 
  8443 ;; Registers used:
  8444 ;;		wreg
  8445 ;; Tracked objects:
  8446 ;;		On entry : 0/0
  8447 ;;		On exit  : 0/0
  8448 ;;		Unchanged: 0/0
  8449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8450 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8451 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8453 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8454 ;;Total ram usage:        8 bytes
  8455 ;; Hardware stack levels used: 1
  8456 ;; Hardware stack levels required when called: 2
  8457 ;; This function calls:
  8458 ;;		Nothing
  8459 ;; This function is called by:
  8460 ;;		_main
  8461 ;; This function uses a non-reentrant model
  8462 ;;
  8463                           
  8464  168E                     _fabsf:	
  8465                           ;psect for function _fabsf
  8466                           
  8467  168E                     l4265:	
  8468                           ;incstack = 0
  8469                           ; Regs used in _fabsf: [wreg]
  8470                           
  8471  168E  0022               	movlb	2	; select bank2
  8472  168F  0823               	movf	(fabsf@F465+3)^(0+256),w
  8473  1690  0020               	movlb	0	; select bank0
  8474  1691  00B5               	movwf	fabsf@u+3
  8475  1692  0022               	movlb	2	; select bank2
  8476  1693  0822               	movf	(fabsf@F465+2)^(0+256),w
  8477  1694  0020               	movlb	0	; select bank0
  8478  1695  00B4               	movwf	fabsf@u+2
  8479  1696  0022               	movlb	2	; select bank2
  8480  1697  0821               	movf	(fabsf@F465+1)^(0+256),w
  8481  1698  0020               	movlb	0	; select bank0
  8482  1699  00B3               	movwf	fabsf@u+1
  8483  169A  0022               	movlb	2	; select bank2
  8484  169B  0820               	movf	fabsf@F465^(0+256),w
  8485  169C  0020               	movlb	0	; select bank0
  8486  169D  00B2               	movwf	fabsf@u
  8487  169E  0831               	movf	fabsf@x+3,w
  8488  169F  00B5               	movwf	fabsf@u+3
  8489  16A0  0830               	movf	fabsf@x+2,w
  8490  16A1  00B4               	movwf	fabsf@u+2
  8491  16A2  082F               	movf	fabsf@x+1,w
  8492  16A3  00B3               	movwf	fabsf@u+1
  8493  16A4  082E               	movf	fabsf@x,w
  8494  16A5  00B2               	movwf	fabsf@u
  8495  16A6  30FF               	movlw	255
  8496  16A7  05B2               	andwf	fabsf@u,f
  8497  16A8  30FF               	movlw	255
  8498  16A9  05B3               	andwf	fabsf@u+1,f
  8499  16AA  30FF               	movlw	255
  8500  16AB  05B4               	andwf	fabsf@u+2,f
  8501  16AC  307F               	movlw	127
  8502  16AD  05B5               	andwf	fabsf@u+3,f
  8503  16AE  0835               	movf	fabsf@u+3,w
  8504  16AF  00B1               	movwf	?_fabsf+3
  8505  16B0  0834               	movf	fabsf@u+2,w
  8506  16B1  00B0               	movwf	?_fabsf+2
  8507  16B2  0833               	movf	fabsf@u+1,w
  8508  16B3  00AF               	movwf	?_fabsf+1
  8509  16B4  0832               	movf	fabsf@u,w
  8510  16B5  00AE               	movwf	?_fabsf
  8511  16B6                     l1116:
  8512  16B6  0008               	return
  8513  16B7                     __end_of_fabsf:
  8514                           
  8515                           	psect	text18
  8516  09EA                     __ptext18:	
  8517 ;; *************** function ___xxtofl *****************
  8518 ;; Defined at:
  8519 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;  sign            1    wreg     unsigned char 
  8522 ;;  val             4    0[BANK0 ] long 
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;  sign            1    8[BANK0 ] unsigned char 
  8525 ;;  arg             4   10[BANK0 ] unsigned long 
  8526 ;;  exp             1    9[BANK0 ] unsigned char 
  8527 ;; Return value:  Size  Location     Type
  8528 ;;                  4    0[BANK0 ] unsigned char 
  8529 ;; Registers used:
  8530 ;;		wreg, status,2, status,0
  8531 ;; Tracked objects:
  8532 ;;		On entry : 0/0
  8533 ;;		On exit  : 0/0
  8534 ;;		Unchanged: 0/0
  8535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8536 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8537 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8538 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8539 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8540 ;;Total ram usage:       14 bytes
  8541 ;; Hardware stack levels used: 1
  8542 ;; Hardware stack levels required when called: 2
  8543 ;; This function calls:
  8544 ;;		Nothing
  8545 ;; This function is called by:
  8546 ;;		_main
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550  09EA                     ___xxtofl:	
  8551                           ;psect for function ___xxtofl
  8552                           
  8553                           
  8554                           ;incstack = 0
  8555                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8556                           ;___xxtofl@sign stored from wreg
  8557  09EA  0020               	movlb	0	; select bank0
  8558  09EB  00A8               	movwf	___xxtofl@sign
  8559  09EC                     l3435:
  8560  09EC  0828               	movf	___xxtofl@sign,w
  8561  09ED  1903               	btfsc	3,2
  8562  09EE  29F0               	goto	u3481
  8563  09EF  29F1               	goto	u3480
  8564  09F0                     u3481:
  8565  09F0  2A05               	goto	l3441
  8566  09F1                     u3480:
  8567  09F1                     l3437:
  8568  09F1  1FA3               	btfss	___xxtofl@val+3,7
  8569  09F2  29F4               	goto	u3491
  8570  09F3  29F5               	goto	u3490
  8571  09F4                     u3491:
  8572  09F4  2A05               	goto	l3441
  8573  09F5                     u3490:
  8574  09F5                     l3439:
  8575  09F5  0920               	comf	___xxtofl@val,w
  8576  09F6  00AA               	movwf	___xxtofl@arg
  8577  09F7  0921               	comf	___xxtofl@val+1,w
  8578  09F8  00AB               	movwf	___xxtofl@arg+1
  8579  09F9  0922               	comf	___xxtofl@val+2,w
  8580  09FA  00AC               	movwf	___xxtofl@arg+2
  8581  09FB  0923               	comf	___xxtofl@val+3,w
  8582  09FC  00AD               	movwf	___xxtofl@arg+3
  8583  09FD  0AAA               	incf	___xxtofl@arg,f
  8584  09FE  1903               	skipnz
  8585  09FF  0AAB               	incf	___xxtofl@arg+1,f
  8586  0A00  1903               	skipnz
  8587  0A01  0AAC               	incf	___xxtofl@arg+2,f
  8588  0A02  1903               	skipnz
  8589  0A03  0AAD               	incf	___xxtofl@arg+3,f
  8590  0A04  2A0D               	goto	l1096
  8591  0A05                     l3441:
  8592  0A05  0823               	movf	___xxtofl@val+3,w
  8593  0A06  00AD               	movwf	___xxtofl@arg+3
  8594  0A07  0822               	movf	___xxtofl@val+2,w
  8595  0A08  00AC               	movwf	___xxtofl@arg+2
  8596  0A09  0821               	movf	___xxtofl@val+1,w
  8597  0A0A  00AB               	movwf	___xxtofl@arg+1
  8598  0A0B  0820               	movf	___xxtofl@val,w
  8599  0A0C  00AA               	movwf	___xxtofl@arg
  8600  0A0D                     l1096:
  8601  0A0D  0823               	movf	___xxtofl@val+3,w
  8602  0A0E  0422               	iorwf	___xxtofl@val+2,w
  8603  0A0F  0421               	iorwf	___xxtofl@val+1,w
  8604  0A10  0420               	iorwf	___xxtofl@val,w
  8605  0A11  1D03               	skipz
  8606  0A12  2A14               	goto	u3501
  8607  0A13  2A15               	goto	u3500
  8608  0A14                     u3501:
  8609  0A14  2A1E               	goto	l3447
  8610  0A15                     u3500:
  8611  0A15                     l3443:
  8612  0A15  3000               	movlw	0
  8613  0A16  00A3               	movwf	?___xxtofl+3
  8614  0A17  3000               	movlw	0
  8615  0A18  00A2               	movwf	?___xxtofl+2
  8616  0A19  3000               	movlw	0
  8617  0A1A  00A1               	movwf	?___xxtofl+1
  8618  0A1B  3000               	movlw	0
  8619  0A1C  00A0               	movwf	?___xxtofl
  8620  0A1D  2A96               	goto	l1098
  8621  0A1E                     l3447:
  8622  0A1E  3096               	movlw	150
  8623  0A1F  00A4               	movwf	??___xxtofl
  8624  0A20  0824               	movf	??___xxtofl,w
  8625  0A21  00A9               	movwf	___xxtofl@exp
  8626  0A22  2A2E               	goto	l3451
  8627  0A23                     l3449:
  8628  0A23  3001               	movlw	1
  8629  0A24  00A4               	movwf	??___xxtofl
  8630  0A25  0824               	movf	??___xxtofl,w
  8631  0A26  07A9               	addwf	___xxtofl@exp,f
  8632  0A27  3001               	movlw	1
  8633  0A28                     u3515:
  8634  0A28  36AD               	lsrf	___xxtofl@arg+3,f
  8635  0A29  0CAC               	rrf	___xxtofl@arg+2,f
  8636  0A2A  0CAB               	rrf	___xxtofl@arg+1,f
  8637  0A2B  0CAA               	rrf	___xxtofl@arg,f
  8638  0A2C  0B89               	decfsz	9,f
  8639  0A2D  2A28               	goto	u3515
  8640  0A2E                     l3451:
  8641  0A2E  30FE               	movlw	254
  8642  0A2F  052D               	andwf	___xxtofl@arg+3,w
  8643  0A30  1D03               	btfss	3,2
  8644  0A31  2A33               	goto	u3521
  8645  0A32  2A34               	goto	u3520
  8646  0A33                     u3521:
  8647  0A33  2A23               	goto	l3449
  8648  0A34                     u3520:
  8649  0A34  2A48               	goto	l1102
  8650  0A35                     l3453:
  8651  0A35  3001               	movlw	1
  8652  0A36  00A4               	movwf	??___xxtofl
  8653  0A37  0824               	movf	??___xxtofl,w
  8654  0A38  07A9               	addwf	___xxtofl@exp,f
  8655  0A39                     l3455:
  8656  0A39  3001               	movlw	1
  8657  0A3A  07AA               	addwf	___xxtofl@arg,f
  8658  0A3B  3000               	movlw	0
  8659  0A3C  3DAB               	addwfc	___xxtofl@arg+1,f
  8660  0A3D  3000               	movlw	0
  8661  0A3E  3DAC               	addwfc	___xxtofl@arg+2,f
  8662  0A3F  3000               	movlw	0
  8663  0A40  3DAD               	addwfc	___xxtofl@arg+3,f
  8664  0A41                     l3457:
  8665  0A41  3001               	movlw	1
  8666  0A42                     u3535:
  8667  0A42  36AD               	lsrf	___xxtofl@arg+3,f
  8668  0A43  0CAC               	rrf	___xxtofl@arg+2,f
  8669  0A44  0CAB               	rrf	___xxtofl@arg+1,f
  8670  0A45  0CAA               	rrf	___xxtofl@arg,f
  8671  0A46  0B89               	decfsz	9,f
  8672  0A47  2A42               	goto	u3535
  8673  0A48                     l1102:
  8674  0A48  30FF               	movlw	255
  8675  0A49  052D               	andwf	___xxtofl@arg+3,w
  8676  0A4A  1D03               	btfss	3,2
  8677  0A4B  2A4D               	goto	u3541
  8678  0A4C  2A4E               	goto	u3540
  8679  0A4D                     u3541:
  8680  0A4D  2A35               	goto	l3453
  8681  0A4E                     u3540:
  8682  0A4E  2A58               	goto	l3461
  8683  0A4F                     l3459:
  8684  0A4F  3001               	movlw	1
  8685  0A50  02A9               	subwf	___xxtofl@exp,f
  8686  0A51  3001               	movlw	1
  8687  0A52                     u3555:
  8688  0A52  35AA               	lslf	___xxtofl@arg,f
  8689  0A53  0DAB               	rlf	___xxtofl@arg+1,f
  8690  0A54  0DAC               	rlf	___xxtofl@arg+2,f
  8691  0A55  0DAD               	rlf	___xxtofl@arg+3,f
  8692  0A56  0B89               	decfsz	9,f
  8693  0A57  2A52               	goto	u3555
  8694  0A58                     l3461:
  8695  0A58  1BAC               	btfsc	___xxtofl@arg+2,7
  8696  0A59  2A5B               	goto	u3561
  8697  0A5A  2A5C               	goto	u3560
  8698  0A5B                     u3561:
  8699  0A5B  2A62               	goto	l1109
  8700  0A5C                     u3560:
  8701  0A5C                     l3463:
  8702  0A5C  3002               	movlw	2
  8703  0A5D  0229               	subwf	___xxtofl@exp,w
  8704  0A5E  1803               	skipnc
  8705  0A5F  2A61               	goto	u3571
  8706  0A60  2A62               	goto	u3570
  8707  0A61                     u3571:
  8708  0A61  2A4F               	goto	l3459
  8709  0A62                     u3570:
  8710  0A62                     l1109:
  8711  0A62  1829               	btfsc	___xxtofl@exp,0
  8712  0A63  2A65               	goto	u3581
  8713  0A64  2A66               	goto	u3580
  8714  0A65                     u3581:
  8715  0A65  2A6E               	goto	l1110
  8716  0A66                     u3580:
  8717  0A66                     l3465:
  8718  0A66  30FF               	movlw	255
  8719  0A67  05AA               	andwf	___xxtofl@arg,f
  8720  0A68  30FF               	movlw	255
  8721  0A69  05AB               	andwf	___xxtofl@arg+1,f
  8722  0A6A  307F               	movlw	127
  8723  0A6B  05AC               	andwf	___xxtofl@arg+2,f
  8724  0A6C  30FF               	movlw	255
  8725  0A6D  05AD               	andwf	___xxtofl@arg+3,f
  8726  0A6E                     l1110:
  8727  0A6E  1003               	clrc
  8728  0A6F  0CA9               	rrf	___xxtofl@exp,f
  8729  0A70                     l3467:
  8730  0A70  0829               	movf	___xxtofl@exp,w
  8731  0A71  00A4               	movwf	??___xxtofl
  8732  0A72  01A5               	clrf	??___xxtofl+1
  8733  0A73  01A6               	clrf	??___xxtofl+2
  8734  0A74  01A7               	clrf	??___xxtofl+3
  8735  0A75  3018               	movlw	24
  8736  0A76                     u3595:
  8737  0A76  35A4               	lslf	??___xxtofl,f
  8738  0A77  0DA5               	rlf	??___xxtofl+1,f
  8739  0A78  0DA6               	rlf	??___xxtofl+2,f
  8740  0A79  0DA7               	rlf	??___xxtofl+3,f
  8741  0A7A                     u3590:
  8742  0A7A  0B89               	decfsz	9,f
  8743  0A7B  2A76               	goto	u3595
  8744  0A7C  0824               	movf	??___xxtofl,w
  8745  0A7D  04AA               	iorwf	___xxtofl@arg,f
  8746  0A7E  0825               	movf	??___xxtofl+1,w
  8747  0A7F  04AB               	iorwf	___xxtofl@arg+1,f
  8748  0A80  0826               	movf	??___xxtofl+2,w
  8749  0A81  04AC               	iorwf	___xxtofl@arg+2,f
  8750  0A82  0827               	movf	??___xxtofl+3,w
  8751  0A83  04AD               	iorwf	___xxtofl@arg+3,f
  8752  0A84                     l3469:
  8753  0A84  0828               	movf	___xxtofl@sign,w
  8754  0A85  1903               	btfsc	3,2
  8755  0A86  2A88               	goto	u3601
  8756  0A87  2A89               	goto	u3600
  8757  0A88                     u3601:
  8758  0A88  2A8E               	goto	l3475
  8759  0A89                     u3600:
  8760  0A89                     l3471:
  8761  0A89  1FA3               	btfss	___xxtofl@val+3,7
  8762  0A8A  2A8C               	goto	u3611
  8763  0A8B  2A8D               	goto	u3610
  8764  0A8C                     u3611:
  8765  0A8C  2A8E               	goto	l3475
  8766  0A8D                     u3610:
  8767  0A8D                     l3473:
  8768  0A8D  17AD               	bsf	___xxtofl@arg+3,7
  8769  0A8E                     l3475:
  8770  0A8E  082D               	movf	___xxtofl@arg+3,w
  8771  0A8F  00A3               	movwf	?___xxtofl+3
  8772  0A90  082C               	movf	___xxtofl@arg+2,w
  8773  0A91  00A2               	movwf	?___xxtofl+2
  8774  0A92  082B               	movf	___xxtofl@arg+1,w
  8775  0A93  00A1               	movwf	?___xxtofl+1
  8776  0A94  082A               	movf	___xxtofl@arg,w
  8777  0A95  00A0               	movwf	?___xxtofl
  8778  0A96                     l1098:
  8779  0A96  0008               	return
  8780  0A97                     __end_of___xxtofl:
  8781                           
  8782                           	psect	text19
  8783  08EA                     __ptext19:	
  8784 ;; *************** function ___fltol *****************
  8785 ;; Defined at:
  8786 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  8787 ;; Parameters:    Size  Location     Type
  8788 ;;  f1              4   60[BANK0 ] unsigned char 
  8789 ;; Auto vars:     Size  Location     Type
  8790 ;;  exp1            1   70[BANK0 ] unsigned char 
  8791 ;;  sign1           1   69[BANK0 ] unsigned char 
  8792 ;; Return value:  Size  Location     Type
  8793 ;;                  4   60[BANK0 ] long 
  8794 ;; Registers used:
  8795 ;;		wreg, status,2, status,0
  8796 ;; Tracked objects:
  8797 ;;		On entry : 0/0
  8798 ;;		On exit  : 0/0
  8799 ;;		Unchanged: 0/0
  8800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8801 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8802 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8803 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8804 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8805 ;;Total ram usage:       11 bytes
  8806 ;; Hardware stack levels used: 1
  8807 ;; Hardware stack levels required when called: 2
  8808 ;; This function calls:
  8809 ;;		Nothing
  8810 ;; This function is called by:
  8811 ;;		_main
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815  08EA                     ___fltol:	
  8816                           ;psect for function ___fltol
  8817                           
  8818  08EA                     l3065:	
  8819                           ;incstack = 0
  8820                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8821                           
  8822  08EA  1003               	clrc
  8823  08EB  0020               	movlb	0	; select bank0
  8824  08EC  0D5E               	rlf	___fltol@f1+2,w
  8825  08ED  0D5F               	rlf	___fltol@f1+3,w
  8826  08EE  00E0               	movwf	??___fltol
  8827  08EF  0860               	movf	??___fltol,w
  8828  08F0  00E6               	movwf	___fltol@exp1
  8829  08F1  0866               	movf	___fltol@exp1,w
  8830  08F2  1D03               	btfss	3,2
  8831  08F3  28F5               	goto	u2691
  8832  08F4  28F6               	goto	u2690
  8833  08F5                     u2691:
  8834  08F5  28FF               	goto	l3071
  8835  08F6                     u2690:
  8836  08F6                     l3067:
  8837  08F6  3000               	movlw	0
  8838  08F7  00DF               	movwf	?___fltol+3
  8839  08F8  3000               	movlw	0
  8840  08F9  00DE               	movwf	?___fltol+2
  8841  08FA  3000               	movlw	0
  8842  08FB  00DD               	movwf	?___fltol+1
  8843  08FC  3000               	movlw	0
  8844  08FD  00DC               	movwf	?___fltol
  8845  08FE  295E               	goto	l849
  8846  08FF                     l3071:
  8847  08FF  085C               	movf	___fltol@f1,w
  8848  0900  00E0               	movwf	??___fltol
  8849  0901  085D               	movf	___fltol@f1+1,w
  8850  0902  00E1               	movwf	??___fltol+1
  8851  0903  085E               	movf	___fltol@f1+2,w
  8852  0904  00E2               	movwf	??___fltol+2
  8853  0905  085F               	movf	___fltol@f1+3,w
  8854  0906  00E3               	movwf	??___fltol+3
  8855  0907  301F               	movlw	31
  8856  0908                     u2705:
  8857  0908  36E3               	lsrf	??___fltol+3,f
  8858  0909  0CE2               	rrf	??___fltol+2,f
  8859  090A  0CE1               	rrf	??___fltol+1,f
  8860  090B  0CE0               	rrf	??___fltol,f
  8861  090C                     u2700:
  8862  090C  0B89               	decfsz	9,f
  8863  090D  2908               	goto	u2705
  8864  090E  0860               	movf	??___fltol,w
  8865  090F  00E4               	movwf	??___fltol+4
  8866  0910  0864               	movf	??___fltol+4,w
  8867  0911  00E5               	movwf	___fltol@sign1
  8868  0912                     l3073:
  8869  0912  17DE               	bsf	___fltol@f1+2,7
  8870  0913                     l3075:
  8871  0913  30FF               	movlw	255
  8872  0914  05DC               	andwf	___fltol@f1,f
  8873  0915  30FF               	movlw	255
  8874  0916  05DD               	andwf	___fltol@f1+1,f
  8875  0917  30FF               	movlw	255
  8876  0918  05DE               	andwf	___fltol@f1+2,f
  8877  0919  3000               	movlw	0
  8878  091A  05DF               	andwf	___fltol@f1+3,f
  8879  091B                     l3077:
  8880  091B  3096               	movlw	150
  8881  091C  02E6               	subwf	___fltol@exp1,f
  8882  091D                     l3079:
  8883  091D  1FE6               	btfss	___fltol@exp1,7
  8884  091E  2920               	goto	u2711
  8885  091F  2921               	goto	u2710
  8886  0920                     u2711:
  8887  0920  2939               	goto	l3089
  8888  0921                     u2710:
  8889  0921                     l3081:
  8890  0921  0866               	movf	___fltol@exp1,w
  8891  0922  3A80               	xorlw	128
  8892  0923  3E97               	addlw	151
  8893  0924  1803               	skipnc
  8894  0925  2927               	goto	u2721
  8895  0926  2928               	goto	u2720
  8896  0927                     u2721:
  8897  0927  2929               	goto	l3087
  8898  0928                     u2720:
  8899  0928  28F6               	goto	l3067
  8900  0929                     l3087:
  8901  0929  3001               	movlw	1
  8902  092A                     u2735:
  8903  092A  36DF               	lsrf	___fltol@f1+3,f
  8904  092B  0CDE               	rrf	___fltol@f1+2,f
  8905  092C  0CDD               	rrf	___fltol@f1+1,f
  8906  092D  0CDC               	rrf	___fltol@f1,f
  8907  092E  0B89               	decfsz	9,f
  8908  092F  292A               	goto	u2735
  8909  0930  3001               	movlw	1
  8910  0931  00E0               	movwf	??___fltol
  8911  0932  0860               	movf	??___fltol,w
  8912  0933  07E6               	addwf	___fltol@exp1,f
  8913  0934  1D03               	btfss	3,2
  8914  0935  2937               	goto	u2741
  8915  0936  2938               	goto	u2740
  8916  0937                     u2741:
  8917  0937  2929               	goto	l3087
  8918  0938                     u2740:
  8919  0938  294E               	goto	l3097
  8920  0939                     l3089:
  8921  0939  3020               	movlw	32
  8922  093A  0266               	subwf	___fltol@exp1,w
  8923  093B  1C03               	skipc
  8924  093C  293E               	goto	u2751
  8925  093D  293F               	goto	u2750
  8926  093E                     u2751:
  8927  093E  2949               	goto	l856
  8928  093F                     u2750:
  8929  093F  28F6               	goto	l3067
  8930  0940                     l3095:
  8931  0940  3001               	movlw	1
  8932  0941                     u2765:
  8933  0941  35DC               	lslf	___fltol@f1,f
  8934  0942  0DDD               	rlf	___fltol@f1+1,f
  8935  0943  0DDE               	rlf	___fltol@f1+2,f
  8936  0944  0DDF               	rlf	___fltol@f1+3,f
  8937  0945  0B89               	decfsz	9,f
  8938  0946  2941               	goto	u2765
  8939  0947  3001               	movlw	1
  8940  0948  02E6               	subwf	___fltol@exp1,f
  8941  0949                     l856:
  8942  0949  0866               	movf	___fltol@exp1,w
  8943  094A  1D03               	btfss	3,2
  8944  094B  294D               	goto	u2771
  8945  094C  294E               	goto	u2770
  8946  094D                     u2771:
  8947  094D  2940               	goto	l3095
  8948  094E                     u2770:
  8949  094E                     l3097:
  8950  094E  0865               	movf	___fltol@sign1,w
  8951  094F  1903               	btfsc	3,2
  8952  0950  2952               	goto	u2781
  8953  0951  2953               	goto	u2780
  8954  0952                     u2781:
  8955  0952  295E               	goto	l859
  8956  0953                     u2780:
  8957  0953                     l3099:
  8958  0953  09DC               	comf	___fltol@f1,f
  8959  0954  09DD               	comf	___fltol@f1+1,f
  8960  0955  09DE               	comf	___fltol@f1+2,f
  8961  0956  09DF               	comf	___fltol@f1+3,f
  8962  0957  0ADC               	incf	___fltol@f1,f
  8963  0958  1903               	skipnz
  8964  0959  0ADD               	incf	___fltol@f1+1,f
  8965  095A  1903               	skipnz
  8966  095B  0ADE               	incf	___fltol@f1+2,f
  8967  095C  1903               	skipnz
  8968  095D  0ADF               	incf	___fltol@f1+3,f
  8969  095E                     l859:
  8970  095E                     l849:
  8971  095E  0008               	return
  8972  095F                     __end_of___fltol:
  8973                           
  8974                           	psect	text20
  8975  0443                     __ptext20:	
  8976 ;; *************** function ___flmul *****************
  8977 ;; Defined at:
  8978 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  8979 ;; Parameters:    Size  Location     Type
  8980 ;;  b               4   14[BANK0 ] long 
  8981 ;;  a               4   18[BANK0 ] long 
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;  prod            4   34[BANK0 ] struct .
  8984 ;;  grs             4   29[BANK0 ] unsigned long 
  8985 ;;  temp            2   38[BANK0 ] struct .
  8986 ;;  bexp            1   33[BANK0 ] unsigned char 
  8987 ;;  aexp            1   28[BANK0 ] unsigned char 
  8988 ;;  sign            1   27[BANK0 ] unsigned char 
  8989 ;; Return value:  Size  Location     Type
  8990 ;;                  4   14[BANK0 ] unsigned char 
  8991 ;; Registers used:
  8992 ;;		wreg, status,2, status,0, pclath, cstack
  8993 ;; Tracked objects:
  8994 ;;		On entry : 0/0
  8995 ;;		On exit  : 0/0
  8996 ;;		Unchanged: 0/0
  8997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8998 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8999 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9000 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9001 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9002 ;;Total ram usage:       26 bytes
  9003 ;; Hardware stack levels used: 1
  9004 ;; Hardware stack levels required when called: 3
  9005 ;; This function calls:
  9006 ;;		__Umul8_16
  9007 ;; This function is called by:
  9008 ;;		_main
  9009 ;; This function uses a non-reentrant model
  9010 ;;
  9011                           
  9012  0443                     ___flmul:	
  9013                           ;psect for function ___flmul
  9014                           
  9015  0443                     l4281:	
  9016                           ;incstack = 0
  9017                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9018                           
  9019  0443  0020               	movlb	0	; select bank0
  9020  0444  0831               	movf	___flmul@b+3,w
  9021  0445  3980               	andlw	128
  9022  0446  00B6               	movwf	??___flmul
  9023  0447  0836               	movf	??___flmul,w
  9024  0448  00BB               	movwf	___flmul@sign
  9025  0449                     l4283:
  9026  0449  3531               	lslf	___flmul@b+3,w
  9027  044A  00B6               	movwf	??___flmul
  9028  044B  0836               	movf	??___flmul,w
  9029  044C  00C1               	movwf	___flmul@bexp
  9030  044D                     l4285:
  9031  044D  1FB0               	btfss	___flmul@b+2,7
  9032  044E  2C50               	goto	u4511
  9033  044F  2C51               	goto	u4510
  9034  0450                     u4511:
  9035  0450  2C52               	goto	l4289
  9036  0451                     u4510:
  9037  0451                     l4287:
  9038  0451  1441               	bsf	___flmul@bexp,0
  9039  0452                     l4289:
  9040  0452  0841               	movf	___flmul@bexp,w
  9041  0453  1903               	btfsc	3,2
  9042  0454  2C56               	goto	u4521
  9043  0455  2C57               	goto	u4520
  9044  0456                     u4521:
  9045  0456  2C66               	goto	l4297
  9046  0457                     u4520:
  9047  0457                     l4291:
  9048  0457  0A41               	incf	___flmul@bexp,w
  9049  0458  1D03               	btfss	3,2
  9050  0459  2C5B               	goto	u4531
  9051  045A  2C5C               	goto	u4530
  9052  045B                     u4531:
  9053  045B  2C64               	goto	l4295
  9054  045C                     u4530:
  9055  045C                     l4293:
  9056  045C  3000               	movlw	0
  9057  045D  00B1               	movwf	___flmul@b+3
  9058  045E  3000               	movlw	0
  9059  045F  00B0               	movwf	___flmul@b+2
  9060  0460  3000               	movlw	0
  9061  0461  00AF               	movwf	___flmul@b+1
  9062  0462  3000               	movlw	0
  9063  0463  00AE               	movwf	___flmul@b
  9064  0464                     l4295:
  9065  0464  17B0               	bsf	___flmul@b+2,7
  9066  0465  2C6E               	goto	l4299
  9067  0466                     l4297:
  9068  0466  3000               	movlw	0
  9069  0467  00B1               	movwf	___flmul@b+3
  9070  0468  3000               	movlw	0
  9071  0469  00B0               	movwf	___flmul@b+2
  9072  046A  3000               	movlw	0
  9073  046B  00AF               	movwf	___flmul@b+1
  9074  046C  3000               	movlw	0
  9075  046D  00AE               	movwf	___flmul@b
  9076  046E                     l4299:
  9077  046E  0835               	movf	___flmul@a+3,w
  9078  046F  3980               	andlw	128
  9079  0470  00B6               	movwf	??___flmul
  9080  0471  0836               	movf	??___flmul,w
  9081  0472  06BB               	xorwf	___flmul@sign,f
  9082  0473                     l4301:
  9083  0473  3535               	lslf	___flmul@a+3,w
  9084  0474  00B6               	movwf	??___flmul
  9085  0475  0836               	movf	??___flmul,w
  9086  0476  00BC               	movwf	___flmul@aexp
  9087  0477                     l4303:
  9088  0477  1FB4               	btfss	___flmul@a+2,7
  9089  0478  2C7A               	goto	u4541
  9090  0479  2C7B               	goto	u4540
  9091  047A                     u4541:
  9092  047A  2C7C               	goto	l4307
  9093  047B                     u4540:
  9094  047B                     l4305:
  9095  047B  143C               	bsf	___flmul@aexp,0
  9096  047C                     l4307:
  9097  047C  083C               	movf	___flmul@aexp,w
  9098  047D  1903               	btfsc	3,2
  9099  047E  2C80               	goto	u4551
  9100  047F  2C81               	goto	u4550
  9101  0480                     u4551:
  9102  0480  2C90               	goto	l4315
  9103  0481                     u4550:
  9104  0481                     l4309:
  9105  0481  0A3C               	incf	___flmul@aexp,w
  9106  0482  1D03               	btfss	3,2
  9107  0483  2C85               	goto	u4561
  9108  0484  2C86               	goto	u4560
  9109  0485                     u4561:
  9110  0485  2C8E               	goto	l4313
  9111  0486                     u4560:
  9112  0486                     l4311:
  9113  0486  3000               	movlw	0
  9114  0487  00B5               	movwf	___flmul@a+3
  9115  0488  3000               	movlw	0
  9116  0489  00B4               	movwf	___flmul@a+2
  9117  048A  3000               	movlw	0
  9118  048B  00B3               	movwf	___flmul@a+1
  9119  048C  3000               	movlw	0
  9120  048D  00B2               	movwf	___flmul@a
  9121  048E                     l4313:
  9122  048E  17B4               	bsf	___flmul@a+2,7
  9123  048F  2C98               	goto	l4317
  9124  0490                     l4315:
  9125  0490  3000               	movlw	0
  9126  0491  00B5               	movwf	___flmul@a+3
  9127  0492  3000               	movlw	0
  9128  0493  00B4               	movwf	___flmul@a+2
  9129  0494  3000               	movlw	0
  9130  0495  00B3               	movwf	___flmul@a+1
  9131  0496  3000               	movlw	0
  9132  0497  00B2               	movwf	___flmul@a
  9133  0498                     l4317:
  9134  0498  083C               	movf	___flmul@aexp,w
  9135  0499  1903               	btfsc	3,2
  9136  049A  2C9C               	goto	u4571
  9137  049B  2C9D               	goto	u4570
  9138  049C                     u4571:
  9139  049C  2CA2               	goto	l4321
  9140  049D                     u4570:
  9141  049D                     l4319:
  9142  049D  0841               	movf	___flmul@bexp,w
  9143  049E  1D03               	btfss	3,2
  9144  049F  2CA1               	goto	u4581
  9145  04A0  2CA2               	goto	u4580
  9146  04A1                     u4581:
  9147  04A1  2CAB               	goto	l4325
  9148  04A2                     u4580:
  9149  04A2                     l4321:
  9150  04A2  3000               	movlw	0
  9151  04A3  00B1               	movwf	?___flmul+3
  9152  04A4  3000               	movlw	0
  9153  04A5  00B0               	movwf	?___flmul+2
  9154  04A6  3000               	movlw	0
  9155  04A7  00AF               	movwf	?___flmul+1
  9156  04A8  3000               	movlw	0
  9157  04A9  00AE               	movwf	?___flmul
  9158  04AA  2E99               	goto	l1052
  9159  04AB                     l4325:
  9160  04AB  082E               	movf	___flmul@b,w
  9161  04AC  00B6               	movwf	??___flmul
  9162  04AD  0836               	movf	??___flmul,w
  9163  04AE  00A0               	movwf	__Umul8_16@multiplicand
  9164  04AF  0834               	movf	___flmul@a+2,w
  9165  04B0  3196  266A  3184   	fcall	__Umul8_16
  9166  04B3  0020               	movlb	0	; select bank0
  9167  04B4  0821               	movf	?__Umul8_16+1,w
  9168  04B5  00C7               	movwf	___flmul@temp+1
  9169  04B6  0820               	movf	?__Umul8_16,w
  9170  04B7  00C6               	movwf	___flmul@temp
  9171  04B8                     l4327:
  9172  04B8  0846               	movf	___flmul@temp,w
  9173  04B9  00B6               	movwf	??___flmul
  9174  04BA  01B7               	clrf	??___flmul+1
  9175  04BB  01B8               	clrf	??___flmul+2
  9176  04BC  01B9               	clrf	??___flmul+3
  9177  04BD  0839               	movf	??___flmul+3,w
  9178  04BE  00C0               	movwf	___flmul@grs+3
  9179  04BF  0838               	movf	??___flmul+2,w
  9180  04C0  00BF               	movwf	___flmul@grs+2
  9181  04C1  0837               	movf	??___flmul+1,w
  9182  04C2  00BE               	movwf	___flmul@grs+1
  9183  04C3  0836               	movf	??___flmul,w
  9184  04C4  00BD               	movwf	___flmul@grs
  9185  04C5                     l4329:
  9186  04C5  0847               	movf	___flmul@temp+1,w
  9187  04C6  00B6               	movwf	??___flmul
  9188  04C7  01B7               	clrf	??___flmul+1
  9189  04C8  01B8               	clrf	??___flmul+2
  9190  04C9  01B9               	clrf	??___flmul+3
  9191  04CA  0839               	movf	??___flmul+3,w
  9192  04CB  00C5               	movwf	___flmul@prod+3
  9193  04CC  0838               	movf	??___flmul+2,w
  9194  04CD  00C4               	movwf	___flmul@prod+2
  9195  04CE  0837               	movf	??___flmul+1,w
  9196  04CF  00C3               	movwf	___flmul@prod+1
  9197  04D0  0836               	movf	??___flmul,w
  9198  04D1  00C2               	movwf	___flmul@prod
  9199  04D2  082F               	movf	___flmul@b+1,w
  9200  04D3  00B6               	movwf	??___flmul
  9201  04D4  0836               	movf	??___flmul,w
  9202  04D5  00A0               	movwf	__Umul8_16@multiplicand
  9203  04D6  0833               	movf	___flmul@a+1,w
  9204  04D7  3196  266A  3184   	fcall	__Umul8_16
  9205  04DA  0020               	movlb	0	; select bank0
  9206  04DB  0821               	movf	?__Umul8_16+1,w
  9207  04DC  00C7               	movwf	___flmul@temp+1
  9208  04DD  0820               	movf	?__Umul8_16,w
  9209  04DE  00C6               	movwf	___flmul@temp
  9210  04DF                     l4331:
  9211  04DF  0846               	movf	___flmul@temp,w
  9212  04E0  00B6               	movwf	??___flmul
  9213  04E1  01B7               	clrf	??___flmul+1
  9214  04E2  01B8               	clrf	??___flmul+2
  9215  04E3  01B9               	clrf	??___flmul+3
  9216  04E4  0836               	movf	??___flmul,w
  9217  04E5  07BD               	addwf	___flmul@grs,f
  9218  04E6  0837               	movf	??___flmul+1,w
  9219  04E7  3DBE               	addwfc	___flmul@grs+1,f
  9220  04E8  0838               	movf	??___flmul+2,w
  9221  04E9  3DBF               	addwfc	___flmul@grs+2,f
  9222  04EA  0839               	movf	??___flmul+3,w
  9223  04EB  3DC0               	addwfc	___flmul@grs+3,f
  9224  04EC                     l4333:
  9225  04EC  0847               	movf	___flmul@temp+1,w
  9226  04ED  00B6               	movwf	??___flmul
  9227  04EE  01B7               	clrf	??___flmul+1
  9228  04EF  01B8               	clrf	??___flmul+2
  9229  04F0  01B9               	clrf	??___flmul+3
  9230  04F1  0836               	movf	??___flmul,w
  9231  04F2  07C2               	addwf	___flmul@prod,f
  9232  04F3  0837               	movf	??___flmul+1,w
  9233  04F4  3DC3               	addwfc	___flmul@prod+1,f
  9234  04F5  0838               	movf	??___flmul+2,w
  9235  04F6  3DC4               	addwfc	___flmul@prod+2,f
  9236  04F7  0839               	movf	??___flmul+3,w
  9237  04F8  3DC5               	addwfc	___flmul@prod+3,f
  9238  04F9  0830               	movf	___flmul@b+2,w
  9239  04FA  00B6               	movwf	??___flmul
  9240  04FB  0836               	movf	??___flmul,w
  9241  04FC  00A0               	movwf	__Umul8_16@multiplicand
  9242  04FD  0832               	movf	___flmul@a,w
  9243  04FE  3196  266A  3184   	fcall	__Umul8_16
  9244  0501  0020               	movlb	0	; select bank0
  9245  0502  0821               	movf	?__Umul8_16+1,w
  9246  0503  00C7               	movwf	___flmul@temp+1
  9247  0504  0820               	movf	?__Umul8_16,w
  9248  0505  00C6               	movwf	___flmul@temp
  9249  0506                     l4335:
  9250  0506  0846               	movf	___flmul@temp,w
  9251  0507  00B6               	movwf	??___flmul
  9252  0508  01B7               	clrf	??___flmul+1
  9253  0509  01B8               	clrf	??___flmul+2
  9254  050A  01B9               	clrf	??___flmul+3
  9255  050B  0836               	movf	??___flmul,w
  9256  050C  07BD               	addwf	___flmul@grs,f
  9257  050D  0837               	movf	??___flmul+1,w
  9258  050E  3DBE               	addwfc	___flmul@grs+1,f
  9259  050F  0838               	movf	??___flmul+2,w
  9260  0510  3DBF               	addwfc	___flmul@grs+2,f
  9261  0511  0839               	movf	??___flmul+3,w
  9262  0512  3DC0               	addwfc	___flmul@grs+3,f
  9263  0513                     l4337:
  9264  0513  0847               	movf	___flmul@temp+1,w
  9265  0514  00B6               	movwf	??___flmul
  9266  0515  01B7               	clrf	??___flmul+1
  9267  0516  01B8               	clrf	??___flmul+2
  9268  0517  01B9               	clrf	??___flmul+3
  9269  0518  0836               	movf	??___flmul,w
  9270  0519  07C2               	addwf	___flmul@prod,f
  9271  051A  0837               	movf	??___flmul+1,w
  9272  051B  3DC3               	addwfc	___flmul@prod+1,f
  9273  051C  0838               	movf	??___flmul+2,w
  9274  051D  3DC4               	addwfc	___flmul@prod+2,f
  9275  051E  0839               	movf	??___flmul+3,w
  9276  051F  3DC5               	addwfc	___flmul@prod+3,f
  9277  0520                     l4339:
  9278  0520  3008               	movlw	8
  9279  0521                     u4595:
  9280  0521  35BD               	lslf	___flmul@grs,f
  9281  0522  0DBE               	rlf	___flmul@grs+1,f
  9282  0523  0DBF               	rlf	___flmul@grs+2,f
  9283  0524  0DC0               	rlf	___flmul@grs+3,f
  9284  0525  0B89               	decfsz	9,f
  9285  0526  2D21               	goto	u4595
  9286  0527                     l4341:
  9287  0527  082F               	movf	___flmul@b+1,w
  9288  0528  00B6               	movwf	??___flmul
  9289  0529  0836               	movf	??___flmul,w
  9290  052A  00A0               	movwf	__Umul8_16@multiplicand
  9291  052B  0832               	movf	___flmul@a,w
  9292  052C  3196  266A  3184   	fcall	__Umul8_16
  9293  052F  0020               	movlb	0	; select bank0
  9294  0530  0821               	movf	?__Umul8_16+1,w
  9295  0531  00C7               	movwf	___flmul@temp+1
  9296  0532  0820               	movf	?__Umul8_16,w
  9297  0533  00C6               	movwf	___flmul@temp
  9298  0534                     l4343:
  9299  0534  0846               	movf	___flmul@temp,w
  9300  0535  07BD               	addwf	___flmul@grs,f
  9301  0536  0847               	movf	___flmul@temp+1,w
  9302  0537  3DBE               	addwfc	___flmul@grs+1,f
  9303  0538  3000               	movlw	0
  9304  0539  3DBF               	addwfc	___flmul@grs+2,f
  9305  053A  3DC0               	addwfc	___flmul@grs+3,f
  9306  053B                     l4345:
  9307  053B  082E               	movf	___flmul@b,w
  9308  053C  00B6               	movwf	??___flmul
  9309  053D  0836               	movf	??___flmul,w
  9310  053E  00A0               	movwf	__Umul8_16@multiplicand
  9311  053F  0833               	movf	___flmul@a+1,w
  9312  0540  3196  266A  3184   	fcall	__Umul8_16
  9313  0543  0020               	movlb	0	; select bank0
  9314  0544  0821               	movf	?__Umul8_16+1,w
  9315  0545  00C7               	movwf	___flmul@temp+1
  9316  0546  0820               	movf	?__Umul8_16,w
  9317  0547  00C6               	movwf	___flmul@temp
  9318  0548                     l4347:
  9319  0548  0846               	movf	___flmul@temp,w
  9320  0549  07BD               	addwf	___flmul@grs,f
  9321  054A  0847               	movf	___flmul@temp+1,w
  9322  054B  3DBE               	addwfc	___flmul@grs+1,f
  9323  054C  3000               	movlw	0
  9324  054D  3DBF               	addwfc	___flmul@grs+2,f
  9325  054E  3DC0               	addwfc	___flmul@grs+3,f
  9326  054F                     l4349:
  9327  054F  3008               	movlw	8
  9328  0550                     u4605:
  9329  0550  35BD               	lslf	___flmul@grs,f
  9330  0551  0DBE               	rlf	___flmul@grs+1,f
  9331  0552  0DBF               	rlf	___flmul@grs+2,f
  9332  0553  0DC0               	rlf	___flmul@grs+3,f
  9333  0554  0B89               	decfsz	9,f
  9334  0555  2D50               	goto	u4605
  9335  0556  082E               	movf	___flmul@b,w
  9336  0557  00B6               	movwf	??___flmul
  9337  0558  0836               	movf	??___flmul,w
  9338  0559  00A0               	movwf	__Umul8_16@multiplicand
  9339  055A  0832               	movf	___flmul@a,w
  9340  055B  3196  266A  3184   	fcall	__Umul8_16
  9341  055E  0020               	movlb	0	; select bank0
  9342  055F  0821               	movf	?__Umul8_16+1,w
  9343  0560  00C7               	movwf	___flmul@temp+1
  9344  0561  0820               	movf	?__Umul8_16,w
  9345  0562  00C6               	movwf	___flmul@temp
  9346  0563                     l4351:
  9347  0563  0846               	movf	___flmul@temp,w
  9348  0564  07BD               	addwf	___flmul@grs,f
  9349  0565  0847               	movf	___flmul@temp+1,w
  9350  0566  3DBE               	addwfc	___flmul@grs+1,f
  9351  0567  3000               	movlw	0
  9352  0568  3DBF               	addwfc	___flmul@grs+2,f
  9353  0569  3DC0               	addwfc	___flmul@grs+3,f
  9354  056A                     l4353:
  9355  056A  082F               	movf	___flmul@b+1,w
  9356  056B  00B6               	movwf	??___flmul
  9357  056C  0836               	movf	??___flmul,w
  9358  056D  00A0               	movwf	__Umul8_16@multiplicand
  9359  056E  0834               	movf	___flmul@a+2,w
  9360  056F  3196  266A  3184   	fcall	__Umul8_16
  9361  0572  0020               	movlb	0	; select bank0
  9362  0573  0821               	movf	?__Umul8_16+1,w
  9363  0574  00C7               	movwf	___flmul@temp+1
  9364  0575  0820               	movf	?__Umul8_16,w
  9365  0576  00C6               	movwf	___flmul@temp
  9366  0577  0846               	movf	___flmul@temp,w
  9367  0578  07C2               	addwf	___flmul@prod,f
  9368  0579  0847               	movf	___flmul@temp+1,w
  9369  057A  3DC3               	addwfc	___flmul@prod+1,f
  9370  057B  3000               	movlw	0
  9371  057C  3DC4               	addwfc	___flmul@prod+2,f
  9372  057D  3DC5               	addwfc	___flmul@prod+3,f
  9373  057E                     l4355:
  9374  057E  0830               	movf	___flmul@b+2,w
  9375  057F  00B6               	movwf	??___flmul
  9376  0580  0836               	movf	??___flmul,w
  9377  0581  00A0               	movwf	__Umul8_16@multiplicand
  9378  0582  0833               	movf	___flmul@a+1,w
  9379  0583  3196  266A  3184   	fcall	__Umul8_16
  9380  0586  0020               	movlb	0	; select bank0
  9381  0587  0821               	movf	?__Umul8_16+1,w
  9382  0588  00C7               	movwf	___flmul@temp+1
  9383  0589  0820               	movf	?__Umul8_16,w
  9384  058A  00C6               	movwf	___flmul@temp
  9385  058B                     l4357:
  9386  058B  0846               	movf	___flmul@temp,w
  9387  058C  07C2               	addwf	___flmul@prod,f
  9388  058D  0847               	movf	___flmul@temp+1,w
  9389  058E  3DC3               	addwfc	___flmul@prod+1,f
  9390  058F  3000               	movlw	0
  9391  0590  3DC4               	addwfc	___flmul@prod+2,f
  9392  0591  3DC5               	addwfc	___flmul@prod+3,f
  9393  0592  0830               	movf	___flmul@b+2,w
  9394  0593  00B6               	movwf	??___flmul
  9395  0594  0836               	movf	??___flmul,w
  9396  0595  00A0               	movwf	__Umul8_16@multiplicand
  9397  0596  0834               	movf	___flmul@a+2,w
  9398  0597  3196  266A  3184   	fcall	__Umul8_16
  9399  059A  0020               	movlb	0	; select bank0
  9400  059B  0821               	movf	?__Umul8_16+1,w
  9401  059C  00C7               	movwf	___flmul@temp+1
  9402  059D  0820               	movf	?__Umul8_16,w
  9403  059E  00C6               	movwf	___flmul@temp
  9404  059F                     l4359:
  9405  059F  0846               	movf	___flmul@temp,w
  9406  05A0  00B6               	movwf	??___flmul
  9407  05A1  0847               	movf	___flmul@temp+1,w
  9408  05A2  00B7               	movwf	??___flmul+1
  9409  05A3  01B8               	clrf	??___flmul+2
  9410  05A4  01B9               	clrf	??___flmul+3
  9411  05A5  3008               	movlw	8
  9412  05A6                     u4615:
  9413  05A6  35B6               	lslf	??___flmul,f
  9414  05A7  0DB7               	rlf	??___flmul+1,f
  9415  05A8  0DB8               	rlf	??___flmul+2,f
  9416  05A9  0DB9               	rlf	??___flmul+3,f
  9417  05AA                     u4610:
  9418  05AA  0B89               	decfsz	9,f
  9419  05AB  2DA6               	goto	u4615
  9420  05AC  0836               	movf	??___flmul,w
  9421  05AD  07C2               	addwf	___flmul@prod,f
  9422  05AE  0837               	movf	??___flmul+1,w
  9423  05AF  3DC3               	addwfc	___flmul@prod+1,f
  9424  05B0  0838               	movf	??___flmul+2,w
  9425  05B1  3DC4               	addwfc	___flmul@prod+2,f
  9426  05B2  0839               	movf	??___flmul+3,w
  9427  05B3  3DC5               	addwfc	___flmul@prod+3,f
  9428  05B4                     l4361:
  9429  05B4  083D               	movf	___flmul@grs,w
  9430  05B5  00B6               	movwf	??___flmul
  9431  05B6  083E               	movf	___flmul@grs+1,w
  9432  05B7  00B7               	movwf	??___flmul+1
  9433  05B8  083F               	movf	___flmul@grs+2,w
  9434  05B9  00B8               	movwf	??___flmul+2
  9435  05BA  0840               	movf	___flmul@grs+3,w
  9436  05BB  00B9               	movwf	??___flmul+3
  9437  05BC  3018               	movlw	24
  9438  05BD                     u4625:
  9439  05BD  36B9               	lsrf	??___flmul+3,f
  9440  05BE  0CB8               	rrf	??___flmul+2,f
  9441  05BF  0CB7               	rrf	??___flmul+1,f
  9442  05C0  0CB6               	rrf	??___flmul,f
  9443  05C1                     u4620:
  9444  05C1  0B89               	decfsz	9,f
  9445  05C2  2DBD               	goto	u4625
  9446  05C3  0836               	movf	??___flmul,w
  9447  05C4  07C2               	addwf	___flmul@prod,f
  9448  05C5  0837               	movf	??___flmul+1,w
  9449  05C6  3DC3               	addwfc	___flmul@prod+1,f
  9450  05C7  0838               	movf	??___flmul+2,w
  9451  05C8  3DC4               	addwfc	___flmul@prod+2,f
  9452  05C9  0839               	movf	??___flmul+3,w
  9453  05CA  3DC5               	addwfc	___flmul@prod+3,f
  9454  05CB                     l4363:
  9455  05CB  3008               	movlw	8
  9456  05CC                     u4635:
  9457  05CC  35BD               	lslf	___flmul@grs,f
  9458  05CD  0DBE               	rlf	___flmul@grs+1,f
  9459  05CE  0DBF               	rlf	___flmul@grs+2,f
  9460  05CF  0DC0               	rlf	___flmul@grs+3,f
  9461  05D0  0B89               	decfsz	9,f
  9462  05D1  2DCC               	goto	u4635
  9463  05D2                     l4365:
  9464  05D2  0841               	movf	___flmul@bexp,w
  9465  05D3  073C               	addwf	___flmul@aexp,w
  9466  05D4  00B6               	movwf	??___flmul
  9467  05D5  01B7               	clrf	??___flmul+1
  9468  05D6  0DB7               	rlf	??___flmul+1,f
  9469  05D7  0836               	movf	??___flmul,w
  9470  05D8  3E82               	addlw	130
  9471  05D9  00C6               	movwf	___flmul@temp
  9472  05DA  30FF               	movlw	255
  9473  05DB  3D37               	addwfc	??___flmul+1,w
  9474  05DC  00C7               	movwf	___flmul@temp+1
  9475  05DD  2DF5               	goto	l4377
  9476  05DE                     l4367:
  9477  05DE  3001               	movlw	1
  9478  05DF                     u4645:
  9479  05DF  35C2               	lslf	___flmul@prod,f
  9480  05E0  0DC3               	rlf	___flmul@prod+1,f
  9481  05E1  0DC4               	rlf	___flmul@prod+2,f
  9482  05E2  0DC5               	rlf	___flmul@prod+3,f
  9483  05E3  0B89               	decfsz	9,f
  9484  05E4  2DDF               	goto	u4645
  9485  05E5                     l4369:
  9486  05E5  1FC0               	btfss	___flmul@grs+3,7
  9487  05E6  2DE8               	goto	u4651
  9488  05E7  2DE9               	goto	u4650
  9489  05E8                     u4651:
  9490  05E8  2DEA               	goto	l4373
  9491  05E9                     u4650:
  9492  05E9                     l4371:
  9493  05E9  1442               	bsf	___flmul@prod,0
  9494  05EA                     l4373:
  9495  05EA  3001               	movlw	1
  9496  05EB                     u4665:
  9497  05EB  35BD               	lslf	___flmul@grs,f
  9498  05EC  0DBE               	rlf	___flmul@grs+1,f
  9499  05ED  0DBF               	rlf	___flmul@grs+2,f
  9500  05EE  0DC0               	rlf	___flmul@grs+3,f
  9501  05EF  0B89               	decfsz	9,f
  9502  05F0  2DEB               	goto	u4665
  9503  05F1                     l4375:
  9504  05F1  30FF               	movlw	255
  9505  05F2  07C6               	addwf	___flmul@temp,f
  9506  05F3  30FF               	movlw	255
  9507  05F4  3DC7               	addwfc	___flmul@temp+1,f
  9508  05F5                     l4377:
  9509  05F5  1FC4               	btfss	___flmul@prod+2,7
  9510  05F6  2DF8               	goto	u4671
  9511  05F7  2DF9               	goto	u4670
  9512  05F8                     u4671:
  9513  05F8  2DDE               	goto	l4367
  9514  05F9                     u4670:
  9515  05F9                     l4379:
  9516  05F9  01BC               	clrf	___flmul@aexp
  9517  05FA                     l4381:
  9518  05FA  1FC0               	btfss	___flmul@grs+3,7
  9519  05FB  2DFD               	goto	u4681
  9520  05FC  2DFE               	goto	u4680
  9521  05FD                     u4681:
  9522  05FD  2E1A               	goto	l4389
  9523  05FE                     u4680:
  9524  05FE                     l4383:
  9525  05FE  30FF               	movlw	255
  9526  05FF  053D               	andwf	___flmul@grs,w
  9527  0600  00B6               	movwf	??___flmul
  9528  0601  30FF               	movlw	255
  9529  0602  053E               	andwf	___flmul@grs+1,w
  9530  0603  00B7               	movwf	??___flmul+1
  9531  0604  30FF               	movlw	255
  9532  0605  053F               	andwf	___flmul@grs+2,w
  9533  0606  00B8               	movwf	??___flmul+2
  9534  0607  307F               	movlw	127
  9535  0608  0540               	andwf	___flmul@grs+3,w
  9536  0609  00B9               	movwf	??___flmul+3
  9537  060A  0839               	movf	??___flmul+3,w
  9538  060B  0438               	iorwf	??___flmul+2,w
  9539  060C  0437               	iorwf	??___flmul+1,w
  9540  060D  0436               	iorwf	??___flmul,w
  9541  060E  1903               	skipnz
  9542  060F  2E11               	goto	u4691
  9543  0610  2E12               	goto	u4690
  9544  0611                     u4691:
  9545  0611  2E15               	goto	l1058
  9546  0612                     u4690:
  9547  0612                     l4385:
  9548  0612  01BC               	clrf	___flmul@aexp
  9549  0613  0ABC               	incf	___flmul@aexp,f
  9550  0614  2E1A               	goto	l4389
  9551  0615                     l1058:
  9552  0615  1C42               	btfss	___flmul@prod,0
  9553  0616  2E18               	goto	u4701
  9554  0617  2E19               	goto	u4700
  9555  0618                     u4701:
  9556  0618  2E1A               	goto	l4389
  9557  0619                     u4700:
  9558  0619  2E12               	goto	l4385
  9559  061A                     l4389:
  9560  061A  083C               	movf	___flmul@aexp,w
  9561  061B  1903               	btfsc	3,2
  9562  061C  2E1E               	goto	u4711
  9563  061D  2E1F               	goto	u4710
  9564  061E                     u4711:
  9565  061E  2E47               	goto	l4399
  9566  061F                     u4710:
  9567  061F                     l4391:
  9568  061F  3001               	movlw	1
  9569  0620  07C2               	addwf	___flmul@prod,f
  9570  0621  3000               	movlw	0
  9571  0622  3DC3               	addwfc	___flmul@prod+1,f
  9572  0623  3000               	movlw	0
  9573  0624  3DC4               	addwfc	___flmul@prod+2,f
  9574  0625  3000               	movlw	0
  9575  0626  3DC5               	addwfc	___flmul@prod+3,f
  9576  0627                     l4393:
  9577  0627  1C45               	btfss	___flmul@prod+3,0
  9578  0628  2E2A               	goto	u4721
  9579  0629  2E2B               	goto	u4720
  9580  062A                     u4721:
  9581  062A  2E47               	goto	l4399
  9582  062B                     u4720:
  9583  062B                     l4395:
  9584  062B  0842               	movf	___flmul@prod,w
  9585  062C  00B6               	movwf	??___flmul
  9586  062D  0843               	movf	___flmul@prod+1,w
  9587  062E  00B7               	movwf	??___flmul+1
  9588  062F  0844               	movf	___flmul@prod+2,w
  9589  0630  00B8               	movwf	??___flmul+2
  9590  0631  0845               	movf	___flmul@prod+3,w
  9591  0632  00B9               	movwf	??___flmul+3
  9592  0633  3001               	movlw	1
  9593  0634  00BA               	movwf	??___flmul+4
  9594  0635                     u4735:
  9595  0635  37B9               	asrf	??___flmul+3,f
  9596  0636  0CB8               	rrf	??___flmul+2,f
  9597  0637  0CB7               	rrf	??___flmul+1,f
  9598  0638  0CB6               	rrf	??___flmul,f
  9599  0639                     u4730:
  9600  0639  0BBA               	decfsz	??___flmul+4,f
  9601  063A  2E35               	goto	u4735
  9602  063B  0839               	movf	??___flmul+3,w
  9603  063C  00C5               	movwf	___flmul@prod+3
  9604  063D  0838               	movf	??___flmul+2,w
  9605  063E  00C4               	movwf	___flmul@prod+2
  9606  063F  0837               	movf	??___flmul+1,w
  9607  0640  00C3               	movwf	___flmul@prod+1
  9608  0641  0836               	movf	??___flmul,w
  9609  0642  00C2               	movwf	___flmul@prod
  9610  0643                     l4397:
  9611  0643  3001               	movlw	1
  9612  0644  07C6               	addwf	___flmul@temp,f
  9613  0645  3000               	movlw	0
  9614  0646  3DC7               	addwfc	___flmul@temp+1,f
  9615  0647                     l4399:
  9616  0647  0847               	movf	___flmul@temp+1,w
  9617  0648  3A80               	xorlw	128
  9618  0649  00B6               	movwf	??___flmul
  9619  064A  3080               	movlw	128
  9620  064B  0236               	subwf	??___flmul,w
  9621  064C  1D03               	skipz
  9622  064D  2E50               	goto	u4745
  9623  064E  30FF               	movlw	255
  9624  064F  0246               	subwf	___flmul@temp,w
  9625  0650                     u4745:
  9626  0650  1C03               	skipc
  9627  0651  2E53               	goto	u4741
  9628  0652  2E54               	goto	u4740
  9629  0653                     u4741:
  9630  0653  2E5E               	goto	l4403
  9631  0654                     u4740:
  9632  0654                     l4401:
  9633  0654  307F               	movlw	127
  9634  0655  0020               	movlb	0	; select bank0
  9635  0656  00C5               	movwf	___flmul@prod+3
  9636  0657  3080               	movlw	128
  9637  0658  00C4               	movwf	___flmul@prod+2
  9638  0659  3000               	movlw	0
  9639  065A  00C3               	movwf	___flmul@prod+1
  9640  065B  3000               	movlw	0
  9641  065C  00C2               	movwf	___flmul@prod
  9642  065D  2E8D               	goto	l1064
  9643  065E                     l4403:
  9644  065E  0020               	movlb	0	; select bank0
  9645  065F  0847               	movf	___flmul@temp+1,w
  9646  0660  3A80               	xorlw	128
  9647  0661  00B6               	movwf	??___flmul
  9648  0662  3080               	movlw	128
  9649  0663  0236               	subwf	??___flmul,w
  9650  0664  1D03               	skipz
  9651  0665  2E68               	goto	u4755
  9652  0666  3001               	movlw	1
  9653  0667  0246               	subwf	___flmul@temp,w
  9654  0668                     u4755:
  9655  0668  1803               	skipnc
  9656  0669  2E6B               	goto	u4751
  9657  066A  2E6C               	goto	u4750
  9658  066B                     u4751:
  9659  066B  2E77               	goto	l4409
  9660  066C                     u4750:
  9661  066C                     l4405:
  9662  066C  3000               	movlw	0
  9663  066D  0020               	movlb	0	; select bank0
  9664  066E  00C5               	movwf	___flmul@prod+3
  9665  066F  3000               	movlw	0
  9666  0670  00C4               	movwf	___flmul@prod+2
  9667  0671  3000               	movlw	0
  9668  0672  00C3               	movwf	___flmul@prod+1
  9669  0673  3000               	movlw	0
  9670  0674  00C2               	movwf	___flmul@prod
  9671  0675                     l4407:
  9672  0675  01BB               	clrf	___flmul@sign
  9673  0676  2E8D               	goto	l1064
  9674  0677                     l4409:
  9675  0677  0020               	movlb	0	; select bank0
  9676  0678  0846               	movf	___flmul@temp,w
  9677  0679  00B6               	movwf	??___flmul
  9678  067A  0836               	movf	??___flmul,w
  9679  067B  00C1               	movwf	___flmul@bexp
  9680  067C  30FF               	movlw	255
  9681  067D  05C2               	andwf	___flmul@prod,f
  9682  067E  30FF               	movlw	255
  9683  067F  05C3               	andwf	___flmul@prod+1,f
  9684  0680  307F               	movlw	127
  9685  0681  05C4               	andwf	___flmul@prod+2,f
  9686  0682  3000               	movlw	0
  9687  0683  05C5               	andwf	___flmul@prod+3,f
  9688  0684                     l4411:
  9689  0684  1C41               	btfss	___flmul@bexp,0
  9690  0685  2E87               	goto	u4761
  9691  0686  2E88               	goto	u4760
  9692  0687                     u4761:
  9693  0687  2E89               	goto	l4415
  9694  0688                     u4760:
  9695  0688                     l4413:
  9696  0688  17C4               	bsf	___flmul@prod+2,7
  9697  0689                     l4415:
  9698  0689  3641               	lsrf	___flmul@bexp,w
  9699  068A  00B6               	movwf	??___flmul
  9700  068B  0836               	movf	??___flmul,w
  9701  068C  00C5               	movwf	___flmul@prod+3
  9702  068D                     l1064:
  9703  068D  083B               	movf	___flmul@sign,w
  9704  068E  00B6               	movwf	??___flmul
  9705  068F  0836               	movf	??___flmul,w
  9706  0690  04C5               	iorwf	___flmul@prod+3,f
  9707  0691                     l4417:
  9708  0691  0845               	movf	___flmul@prod+3,w
  9709  0692  00B1               	movwf	?___flmul+3
  9710  0693  0844               	movf	___flmul@prod+2,w
  9711  0694  00B0               	movwf	?___flmul+2
  9712  0695  0843               	movf	___flmul@prod+1,w
  9713  0696  00AF               	movwf	?___flmul+1
  9714  0697  0842               	movf	___flmul@prod,w
  9715  0698  00AE               	movwf	?___flmul
  9716  0699                     l1052:
  9717  0699  0008               	return
  9718  069A                     __end_of___flmul:
  9719                           
  9720                           	psect	text21
  9721  166A                     __ptext21:	
  9722 ;; *************** function __Umul8_16 *****************
  9723 ;; Defined at:
  9724 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul8_16.c"
  9725 ;; Parameters:    Size  Location     Type
  9726 ;;  multiplier      1    wreg     unsigned char 
  9727 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  9728 ;; Auto vars:     Size  Location     Type
  9729 ;;  multiplier      1    8[BANK0 ] unsigned char 
  9730 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  9731 ;;  product         2    4[BANK0 ] unsigned int 
  9732 ;; Return value:  Size  Location     Type
  9733 ;;                  2    0[BANK0 ] unsigned int 
  9734 ;; Registers used:
  9735 ;;		wreg, status,2, status,0
  9736 ;; Tracked objects:
  9737 ;;		On entry : 0/0
  9738 ;;		On exit  : 0/0
  9739 ;;		Unchanged: 0/0
  9740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9741 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9742 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9743 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9744 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9745 ;;Total ram usage:        9 bytes
  9746 ;; Hardware stack levels used: 1
  9747 ;; Hardware stack levels required when called: 2
  9748 ;; This function calls:
  9749 ;;		Nothing
  9750 ;; This function is called by:
  9751 ;;		___flmul
  9752 ;; This function uses a non-reentrant model
  9753 ;;
  9754                           
  9755  166A                     __Umul8_16:	
  9756                           ;psect for function __Umul8_16
  9757                           
  9758                           
  9759                           ;incstack = 0
  9760                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9761                           ;__Umul8_16@multiplier stored from wreg
  9762  166A  0020               	movlb	0	; select bank0
  9763  166B  00A8               	movwf	__Umul8_16@multiplier
  9764  166C                     l4023:
  9765  166C  01A4               	clrf	__Umul8_16@product
  9766  166D  01A5               	clrf	__Umul8_16@product+1
  9767  166E                     l4025:
  9768  166E  0820               	movf	__Umul8_16@multiplicand,w
  9769  166F  00A2               	movwf	??__Umul8_16
  9770  1670  01A3               	clrf	??__Umul8_16+1
  9771  1671  0822               	movf	??__Umul8_16,w
  9772  1672  00A6               	movwf	__Umul8_16@word_mpld
  9773  1673  0823               	movf	??__Umul8_16+1,w
  9774  1674  00A7               	movwf	__Umul8_16@word_mpld+1
  9775  1675                     l4027:
  9776  1675  1C28               	btfss	__Umul8_16@multiplier,0
  9777  1676  2E78               	goto	u4431
  9778  1677  2E79               	goto	u4430
  9779  1678                     u4431:
  9780  1678  2E7D               	goto	l1071
  9781  1679                     u4430:
  9782  1679                     l4029:
  9783  1679  0826               	movf	__Umul8_16@word_mpld,w
  9784  167A  07A4               	addwf	__Umul8_16@product,f
  9785  167B  0827               	movf	__Umul8_16@word_mpld+1,w
  9786  167C  3DA5               	addwfc	__Umul8_16@product+1,f
  9787  167D                     l1071:
  9788  167D  3001               	movlw	1
  9789  167E                     u4445:
  9790  167E  35A6               	lslf	__Umul8_16@word_mpld,f
  9791  167F  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  9792  1680  0B89               	decfsz	9,f
  9793  1681  2E7E               	goto	u4445
  9794  1682  1003               	clrc
  9795  1683  0CA8               	rrf	__Umul8_16@multiplier,f
  9796  1684                     l4031:
  9797  1684  0828               	movf	__Umul8_16@multiplier,w
  9798  1685  1D03               	btfss	3,2
  9799  1686  2E88               	goto	u4451
  9800  1687  2E89               	goto	u4450
  9801  1688                     u4451:
  9802  1688  2E75               	goto	l4027
  9803  1689                     u4450:
  9804  1689                     l4033:
  9805  1689  0825               	movf	__Umul8_16@product+1,w
  9806  168A  00A1               	movwf	?__Umul8_16+1
  9807  168B  0824               	movf	__Umul8_16@product,w
  9808  168C  00A0               	movwf	?__Umul8_16
  9809  168D                     l1073:
  9810  168D  0008               	return
  9811  168E                     __end_of__Umul8_16:
  9812                           
  9813                           	psect	text22
  9814  095F                     __ptext22:	
  9815 ;; *************** function ___flge *****************
  9816 ;; Defined at:
  9817 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  9818 ;; Parameters:    Size  Location     Type
  9819 ;;  ff1             4   22[BANK0 ] unsigned int 
  9820 ;;  ff2             4   26[BANK0 ] unsigned int 
  9821 ;; Auto vars:     Size  Location     Type
  9822 ;;		None
  9823 ;; Return value:  Size  Location     Type
  9824 ;;		None               void
  9825 ;; Registers used:
  9826 ;;		wreg, status,2, status,0
  9827 ;; Tracked objects:
  9828 ;;		On entry : 0/0
  9829 ;;		On exit  : 0/0
  9830 ;;		Unchanged: 0/0
  9831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9832 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9834 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9835 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9836 ;;Total ram usage:       12 bytes
  9837 ;; Hardware stack levels used: 1
  9838 ;; Hardware stack levels required when called: 2
  9839 ;; This function calls:
  9840 ;;		Nothing
  9841 ;; This function is called by:
  9842 ;;		_main
  9843 ;; This function uses a non-reentrant model
  9844 ;;
  9845                           
  9846  095F                     ___flge:	
  9847                           ;psect for function ___flge
  9848                           
  9849  095F                     l3045:	
  9850                           ;incstack = 0
  9851                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9852                           
  9853  095F  3000               	movlw	0
  9854  0960  0020               	movlb	0	; select bank0
  9855  0961  0536               	andwf	___flge@ff1,w
  9856  0962  00BE               	movwf	??___flge
  9857  0963  3000               	movlw	0
  9858  0964  0537               	andwf	___flge@ff1+1,w
  9859  0965  00BF               	movwf	??___flge+1
  9860  0966  3080               	movlw	128
  9861  0967  0538               	andwf	___flge@ff1+2,w
  9862  0968  00C0               	movwf	??___flge+2
  9863  0969  307F               	movlw	127
  9864  096A  0539               	andwf	___flge@ff1+3,w
  9865  096B  00C1               	movwf	??___flge+3
  9866  096C  0841               	movf	??___flge+3,w
  9867  096D  0440               	iorwf	??___flge+2,w
  9868  096E  043F               	iorwf	??___flge+1,w
  9869  096F  043E               	iorwf	??___flge,w
  9870  0970  1D03               	skipz
  9871  0971  2973               	goto	u2641
  9872  0972  2974               	goto	u2640
  9873  0973                     u2641:
  9874  0973  297C               	goto	l833
  9875  0974                     u2640:
  9876  0974                     l3047:
  9877  0974  3000               	movlw	0
  9878  0975  00B9               	movwf	___flge@ff1+3
  9879  0976  3000               	movlw	0
  9880  0977  00B8               	movwf	___flge@ff1+2
  9881  0978  3000               	movlw	0
  9882  0979  00B7               	movwf	___flge@ff1+1
  9883  097A  3000               	movlw	0
  9884  097B  00B6               	movwf	___flge@ff1
  9885  097C                     l833:
  9886  097C  3000               	movlw	0
  9887  097D  053A               	andwf	___flge@ff2,w
  9888  097E  00BE               	movwf	??___flge
  9889  097F  3000               	movlw	0
  9890  0980  053B               	andwf	___flge@ff2+1,w
  9891  0981  00BF               	movwf	??___flge+1
  9892  0982  3080               	movlw	128
  9893  0983  053C               	andwf	___flge@ff2+2,w
  9894  0984  00C0               	movwf	??___flge+2
  9895  0985  307F               	movlw	127
  9896  0986  053D               	andwf	___flge@ff2+3,w
  9897  0987  00C1               	movwf	??___flge+3
  9898  0988  0841               	movf	??___flge+3,w
  9899  0989  0440               	iorwf	??___flge+2,w
  9900  098A  043F               	iorwf	??___flge+1,w
  9901  098B  043E               	iorwf	??___flge,w
  9902  098C  1D03               	skipz
  9903  098D  298F               	goto	u2651
  9904  098E  2990               	goto	u2650
  9905  098F                     u2651:
  9906  098F  2998               	goto	l3051
  9907  0990                     u2650:
  9908  0990                     l3049:
  9909  0990  3000               	movlw	0
  9910  0991  00BD               	movwf	___flge@ff2+3
  9911  0992  3000               	movlw	0
  9912  0993  00BC               	movwf	___flge@ff2+2
  9913  0994  3000               	movlw	0
  9914  0995  00BB               	movwf	___flge@ff2+1
  9915  0996  3000               	movlw	0
  9916  0997  00BA               	movwf	___flge@ff2
  9917  0998                     l3051:
  9918  0998  1FB9               	btfss	___flge@ff1+3,7
  9919  0999  299B               	goto	u2661
  9920  099A  299C               	goto	u2660
  9921  099B                     u2661:
  9922  099B  29B4               	goto	l3055
  9923  099C                     u2660:
  9924  099C                     l3053:
  9925  099C  3000               	movlw	0
  9926  099D  00BE               	movwf	??___flge
  9927  099E  3000               	movlw	0
  9928  099F  00BF               	movwf	??___flge+1
  9929  09A0  3000               	movlw	0
  9930  09A1  00C0               	movwf	??___flge+2
  9931  09A2  3080               	movlw	128
  9932  09A3  00C1               	movwf	??___flge+3
  9933  09A4  0836               	movf	___flge@ff1,w
  9934  09A5  02BE               	subwf	??___flge,f
  9935  09A6  0837               	movf	___flge@ff1+1,w
  9936  09A7  3BBF               	subwfb	??___flge+1,f
  9937  09A8  0838               	movf	___flge@ff1+2,w
  9938  09A9  3BC0               	subwfb	??___flge+2,f
  9939  09AA  0839               	movf	___flge@ff1+3,w
  9940  09AB  3BC1               	subwfb	??___flge+3,f
  9941  09AC  0841               	movf	??___flge+3,w
  9942  09AD  00B9               	movwf	___flge@ff1+3
  9943  09AE  0840               	movf	??___flge+2,w
  9944  09AF  00B8               	movwf	___flge@ff1+2
  9945  09B0  083F               	movf	??___flge+1,w
  9946  09B1  00B7               	movwf	___flge@ff1+1
  9947  09B2  083E               	movf	??___flge,w
  9948  09B3  00B6               	movwf	___flge@ff1
  9949  09B4                     l3055:
  9950  09B4  1FBD               	btfss	___flge@ff2+3,7
  9951  09B5  29B7               	goto	u2671
  9952  09B6  29B8               	goto	u2670
  9953  09B7                     u2671:
  9954  09B7  29D0               	goto	l836
  9955  09B8                     u2670:
  9956  09B8                     l3057:
  9957  09B8  3000               	movlw	0
  9958  09B9  00BE               	movwf	??___flge
  9959  09BA  3000               	movlw	0
  9960  09BB  00BF               	movwf	??___flge+1
  9961  09BC  3000               	movlw	0
  9962  09BD  00C0               	movwf	??___flge+2
  9963  09BE  3080               	movlw	128
  9964  09BF  00C1               	movwf	??___flge+3
  9965  09C0  083A               	movf	___flge@ff2,w
  9966  09C1  02BE               	subwf	??___flge,f
  9967  09C2  083B               	movf	___flge@ff2+1,w
  9968  09C3  3BBF               	subwfb	??___flge+1,f
  9969  09C4  083C               	movf	___flge@ff2+2,w
  9970  09C5  3BC0               	subwfb	??___flge+2,f
  9971  09C6  083D               	movf	___flge@ff2+3,w
  9972  09C7  3BC1               	subwfb	??___flge+3,f
  9973  09C8  0841               	movf	??___flge+3,w
  9974  09C9  00BD               	movwf	___flge@ff2+3
  9975  09CA  0840               	movf	??___flge+2,w
  9976  09CB  00BC               	movwf	___flge@ff2+2
  9977  09CC  083F               	movf	??___flge+1,w
  9978  09CD  00BB               	movwf	___flge@ff2+1
  9979  09CE  083E               	movf	??___flge,w
  9980  09CF  00BA               	movwf	___flge@ff2
  9981  09D0                     l836:
  9982  09D0  3080               	movlw	128
  9983  09D1  06B9               	xorwf	___flge@ff1+3,f
  9984  09D2  3080               	movlw	128
  9985  09D3  06BD               	xorwf	___flge@ff2+3,f
  9986  09D4  083D               	movf	___flge@ff2+3,w
  9987  09D5  0239               	subwf	___flge@ff1+3,w
  9988  09D6  1D03               	skipz
  9989  09D7  29E2               	goto	u2685
  9990  09D8  083C               	movf	___flge@ff2+2,w
  9991  09D9  0238               	subwf	___flge@ff1+2,w
  9992  09DA  1D03               	skipz
  9993  09DB  29E2               	goto	u2685
  9994  09DC  083B               	movf	___flge@ff2+1,w
  9995  09DD  0237               	subwf	___flge@ff1+1,w
  9996  09DE  1D03               	skipz
  9997  09DF  29E2               	goto	u2685
  9998  09E0  083A               	movf	___flge@ff2,w
  9999  09E1  0236               	subwf	___flge@ff1,w
 10000  09E2                     u2685:
 10001  09E2  1803               	skipnc
 10002  09E3  29E5               	goto	u2681
 10003  09E4  29E6               	goto	u2680
 10004  09E5                     u2681:
 10005  09E5  29E8               	goto	l3061
 10006  09E6                     u2680:
 10007  09E6                     l3059:
 10008  09E6  1003               	clrc
 10009  09E7  29E9               	goto	l841
 10010  09E8                     l3061:
 10011  09E8  1403               	setc
 10012  09E9                     l841:
 10013  09E9  0008               	return
 10014  09EA                     __end_of___flge:
 10015                           
 10016                           	psect	text23
 10017  0DC8                     __ptext23:	
 10018 ;; *************** function ___fladd *****************
 10019 ;; Defined at:
 10020 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
 10021 ;; Parameters:    Size  Location     Type
 10022 ;;  b               4   40[BANK0 ] unsigned int 
 10023 ;;  a               4   44[BANK0 ] unsigned int 
 10024 ;; Auto vars:     Size  Location     Type
 10025 ;;  grs             1   59[BANK0 ] unsigned char 
 10026 ;;  bexp            1   58[BANK0 ] unsigned char 
 10027 ;;  aexp            1   57[BANK0 ] unsigned char 
 10028 ;;  signs           1   56[BANK0 ] unsigned char 
 10029 ;; Return value:  Size  Location     Type
 10030 ;;                  4   40[BANK0 ] unsigned char 
 10031 ;; Registers used:
 10032 ;;		wreg, status,2, status,0
 10033 ;; Tracked objects:
 10034 ;;		On entry : 0/0
 10035 ;;		On exit  : 0/0
 10036 ;;		Unchanged: 0/0
 10037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10038 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10039 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10040 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10041 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10042 ;;Total ram usage:       20 bytes
 10043 ;; Hardware stack levels used: 1
 10044 ;; Hardware stack levels required when called: 2
 10045 ;; This function calls:
 10046 ;;		Nothing
 10047 ;; This function is called by:
 10048 ;;		_main
 10049 ;; This function uses a non-reentrant model
 10050 ;;
 10051                           
 10052  0DC8                     ___fladd:	
 10053                           ;psect for function ___fladd
 10054                           
 10055  0DC8                     l3101:	
 10056                           ;incstack = 0
 10057                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 10058                           
 10059  0DC8  0020               	movlb	0	; select bank0
 10060  0DC9  084B               	movf	___fladd@b+3,w
 10061  0DCA  3980               	andlw	128
 10062  0DCB  00D0               	movwf	??___fladd
 10063  0DCC  0850               	movf	??___fladd,w
 10064  0DCD  00D8               	movwf	___fladd@signs
 10065  0DCE                     l3103:
 10066  0DCE  354B               	lslf	___fladd@b+3,w
 10067  0DCF  00D0               	movwf	??___fladd
 10068  0DD0  0850               	movf	??___fladd,w
 10069  0DD1  00DA               	movwf	___fladd@bexp
 10070  0DD2                     l3105:
 10071  0DD2  1FCA               	btfss	___fladd@b+2,7
 10072  0DD3  2DD5               	goto	u2791
 10073  0DD4  2DD6               	goto	u2790
 10074  0DD5                     u2791:
 10075  0DD5  2DD7               	goto	l3109
 10076  0DD6                     u2790:
 10077  0DD6                     l3107:
 10078  0DD6  145A               	bsf	___fladd@bexp,0
 10079  0DD7                     l3109:
 10080  0DD7  085A               	movf	___fladd@bexp,w
 10081  0DD8  1903               	btfsc	3,2
 10082  0DD9  2DDB               	goto	u2801
 10083  0DDA  2DDC               	goto	u2800
 10084  0DDB                     u2801:
 10085  0DDB  2DEC               	goto	l3119
 10086  0DDC                     u2800:
 10087  0DDC                     l3111:
 10088  0DDC  0A5A               	incf	___fladd@bexp,w
 10089  0DDD  1D03               	btfss	3,2
 10090  0DDE  2DE0               	goto	u2811
 10091  0DDF  2DE1               	goto	u2810
 10092  0DE0                     u2811:
 10093  0DE0  2DE9               	goto	l3115
 10094  0DE1                     u2810:
 10095  0DE1                     l3113:
 10096  0DE1  3000               	movlw	0
 10097  0DE2  00CB               	movwf	___fladd@b+3
 10098  0DE3  3000               	movlw	0
 10099  0DE4  00CA               	movwf	___fladd@b+2
 10100  0DE5  3000               	movlw	0
 10101  0DE6  00C9               	movwf	___fladd@b+1
 10102  0DE7  3000               	movlw	0
 10103  0DE8  00C8               	movwf	___fladd@b
 10104  0DE9                     l3115:
 10105  0DE9  17CA               	bsf	___fladd@b+2,7
 10106  0DEA                     l3117:
 10107  0DEA  01CB               	clrf	___fladd@b+3
 10108  0DEB  2DF4               	goto	l3121
 10109  0DEC                     l3119:
 10110  0DEC  3000               	movlw	0
 10111  0DED  00CB               	movwf	___fladd@b+3
 10112  0DEE  3000               	movlw	0
 10113  0DEF  00CA               	movwf	___fladd@b+2
 10114  0DF0  3000               	movlw	0
 10115  0DF1  00C9               	movwf	___fladd@b+1
 10116  0DF2  3000               	movlw	0
 10117  0DF3  00C8               	movwf	___fladd@b
 10118  0DF4                     l3121:
 10119  0DF4  084F               	movf	___fladd@a+3,w
 10120  0DF5  3980               	andlw	128
 10121  0DF6  00D0               	movwf	??___fladd
 10122  0DF7  0850               	movf	??___fladd,w
 10123  0DF8  00D9               	movwf	___fladd@aexp
 10124  0DF9                     l3123:
 10125  0DF9  0859               	movf	___fladd@aexp,w
 10126  0DFA  0658               	xorwf	___fladd@signs,w
 10127  0DFB  1903               	skipnz
 10128  0DFC  2DFE               	goto	u2821
 10129  0DFD  2DFF               	goto	u2820
 10130  0DFE                     u2821:
 10131  0DFE  2E00               	goto	l3127
 10132  0DFF                     u2820:
 10133  0DFF                     l3125:
 10134  0DFF  1758               	bsf	___fladd@signs,6
 10135  0E00                     l3127:
 10136  0E00  354F               	lslf	___fladd@a+3,w
 10137  0E01  00D0               	movwf	??___fladd
 10138  0E02  0850               	movf	??___fladd,w
 10139  0E03  00D9               	movwf	___fladd@aexp
 10140  0E04                     l3129:
 10141  0E04  1FCE               	btfss	___fladd@a+2,7
 10142  0E05  2E07               	goto	u2831
 10143  0E06  2E08               	goto	u2830
 10144  0E07                     u2831:
 10145  0E07  2E09               	goto	l3133
 10146  0E08                     u2830:
 10147  0E08                     l3131:
 10148  0E08  1459               	bsf	___fladd@aexp,0
 10149  0E09                     l3133:
 10150  0E09  0859               	movf	___fladd@aexp,w
 10151  0E0A  1903               	btfsc	3,2
 10152  0E0B  2E0D               	goto	u2841
 10153  0E0C  2E0E               	goto	u2840
 10154  0E0D                     u2841:
 10155  0E0D  2E1E               	goto	l3143
 10156  0E0E                     u2840:
 10157  0E0E                     l3135:
 10158  0E0E  0A59               	incf	___fladd@aexp,w
 10159  0E0F  1D03               	btfss	3,2
 10160  0E10  2E12               	goto	u2851
 10161  0E11  2E13               	goto	u2850
 10162  0E12                     u2851:
 10163  0E12  2E1B               	goto	l3139
 10164  0E13                     u2850:
 10165  0E13                     l3137:
 10166  0E13  3000               	movlw	0
 10167  0E14  00CF               	movwf	___fladd@a+3
 10168  0E15  3000               	movlw	0
 10169  0E16  00CE               	movwf	___fladd@a+2
 10170  0E17  3000               	movlw	0
 10171  0E18  00CD               	movwf	___fladd@a+1
 10172  0E19  3000               	movlw	0
 10173  0E1A  00CC               	movwf	___fladd@a
 10174  0E1B                     l3139:
 10175  0E1B  17CE               	bsf	___fladd@a+2,7
 10176  0E1C                     l3141:
 10177  0E1C  01CF               	clrf	___fladd@a+3
 10178  0E1D  2E26               	goto	l956
 10179  0E1E                     l3143:
 10180  0E1E  3000               	movlw	0
 10181  0E1F  00CF               	movwf	___fladd@a+3
 10182  0E20  3000               	movlw	0
 10183  0E21  00CE               	movwf	___fladd@a+2
 10184  0E22  3000               	movlw	0
 10185  0E23  00CD               	movwf	___fladd@a+1
 10186  0E24  3000               	movlw	0
 10187  0E25  00CC               	movwf	___fladd@a
 10188  0E26                     l956:
 10189  0E26  085A               	movf	___fladd@bexp,w
 10190  0E27  0259               	subwf	___fladd@aexp,w
 10191  0E28  1803               	skipnc
 10192  0E29  2E2B               	goto	u2861
 10193  0E2A  2E2C               	goto	u2860
 10194  0E2B                     u2861:
 10195  0E2B  2E70               	goto	l3179
 10196  0E2C                     u2860:
 10197  0E2C                     l3145:
 10198  0E2C  1F58               	btfss	___fladd@signs,6
 10199  0E2D  2E2F               	goto	u2871
 10200  0E2E  2E30               	goto	u2870
 10201  0E2F                     u2871:
 10202  0E2F  2E34               	goto	l3149
 10203  0E30                     u2870:
 10204  0E30                     l3147:
 10205  0E30  3080               	movlw	128
 10206  0E31  00D0               	movwf	??___fladd
 10207  0E32  0850               	movf	??___fladd,w
 10208  0E33  06D8               	xorwf	___fladd@signs,f
 10209  0E34                     l3149:
 10210  0E34  085A               	movf	___fladd@bexp,w
 10211  0E35  00D0               	movwf	??___fladd
 10212  0E36  0850               	movf	??___fladd,w
 10213  0E37  00DB               	movwf	___fladd@grs
 10214  0E38                     l3151:
 10215  0E38  0859               	movf	___fladd@aexp,w
 10216  0E39  00D0               	movwf	??___fladd
 10217  0E3A  0850               	movf	??___fladd,w
 10218  0E3B  00DA               	movwf	___fladd@bexp
 10219  0E3C                     l3153:
 10220  0E3C  085B               	movf	___fladd@grs,w
 10221  0E3D  00D0               	movwf	??___fladd
 10222  0E3E  0850               	movf	??___fladd,w
 10223  0E3F  00D9               	movwf	___fladd@aexp
 10224  0E40                     l3155:
 10225  0E40  0848               	movf	___fladd@b,w
 10226  0E41  00D0               	movwf	??___fladd
 10227  0E42  0850               	movf	??___fladd,w
 10228  0E43  00DB               	movwf	___fladd@grs
 10229  0E44                     l3157:
 10230  0E44  084C               	movf	___fladd@a,w
 10231  0E45  00D0               	movwf	??___fladd
 10232  0E46  0850               	movf	??___fladd,w
 10233  0E47  00C8               	movwf	___fladd@b
 10234  0E48                     l3159:
 10235  0E48  085B               	movf	___fladd@grs,w
 10236  0E49  00D0               	movwf	??___fladd
 10237  0E4A  0850               	movf	??___fladd,w
 10238  0E4B  00CC               	movwf	___fladd@a
 10239  0E4C                     l3161:
 10240  0E4C  0849               	movf	___fladd@b+1,w
 10241  0E4D  00D0               	movwf	??___fladd
 10242  0E4E  0850               	movf	??___fladd,w
 10243  0E4F  00DB               	movwf	___fladd@grs
 10244  0E50                     l3163:
 10245  0E50  084D               	movf	___fladd@a+1,w
 10246  0E51  00D0               	movwf	??___fladd
 10247  0E52  0850               	movf	??___fladd,w
 10248  0E53  00C9               	movwf	___fladd@b+1
 10249  0E54                     l3165:
 10250  0E54  085B               	movf	___fladd@grs,w
 10251  0E55  00D0               	movwf	??___fladd
 10252  0E56  0850               	movf	??___fladd,w
 10253  0E57  00CD               	movwf	___fladd@a+1
 10254  0E58                     l3167:
 10255  0E58  084A               	movf	___fladd@b+2,w
 10256  0E59  00D0               	movwf	??___fladd
 10257  0E5A  0850               	movf	??___fladd,w
 10258  0E5B  00DB               	movwf	___fladd@grs
 10259  0E5C                     l3169:
 10260  0E5C  084E               	movf	___fladd@a+2,w
 10261  0E5D  00D0               	movwf	??___fladd
 10262  0E5E  0850               	movf	??___fladd,w
 10263  0E5F  00CA               	movwf	___fladd@b+2
 10264  0E60                     l3171:
 10265  0E60  085B               	movf	___fladd@grs,w
 10266  0E61  00D0               	movwf	??___fladd
 10267  0E62  0850               	movf	??___fladd,w
 10268  0E63  00CE               	movwf	___fladd@a+2
 10269  0E64                     l3173:
 10270  0E64  084B               	movf	___fladd@b+3,w
 10271  0E65  00D0               	movwf	??___fladd
 10272  0E66  0850               	movf	??___fladd,w
 10273  0E67  00DB               	movwf	___fladd@grs
 10274  0E68                     l3175:
 10275  0E68  084F               	movf	___fladd@a+3,w
 10276  0E69  00D0               	movwf	??___fladd
 10277  0E6A  0850               	movf	??___fladd,w
 10278  0E6B  00CB               	movwf	___fladd@b+3
 10279  0E6C                     l3177:
 10280  0E6C  085B               	movf	___fladd@grs,w
 10281  0E6D  00D0               	movwf	??___fladd
 10282  0E6E  0850               	movf	??___fladd,w
 10283  0E6F  00CF               	movwf	___fladd@a+3
 10284  0E70                     l3179:
 10285  0E70  01DB               	clrf	___fladd@grs
 10286  0E71                     l3181:
 10287  0E71  0859               	movf	___fladd@aexp,w
 10288  0E72  00D0               	movwf	??___fladd
 10289  0E73  01D1               	clrf	??___fladd+1
 10290  0E74  0851               	movf	??___fladd+1,w
 10291  0E75  00D3               	movwf	??___fladd+3
 10292  0E76  085A               	movf	___fladd@bexp,w
 10293  0E77  0250               	subwf	??___fladd,w
 10294  0E78  00D2               	movwf	??___fladd+2
 10295  0E79  1C03               	skipc
 10296  0E7A  03D3               	decf	??___fladd+3,f
 10297  0E7B  0853               	movf	??___fladd+3,w
 10298  0E7C  3A80               	xorlw	128
 10299  0E7D  00D4               	movwf	??___fladd+4
 10300  0E7E  3080               	movlw	128
 10301  0E7F  0254               	subwf	??___fladd+4,w
 10302  0E80  1D03               	skipz
 10303  0E81  2E84               	goto	u2885
 10304  0E82  301A               	movlw	26
 10305  0E83  0252               	subwf	??___fladd+2,w
 10306  0E84                     u2885:
 10307  0E84  1C03               	skipc
 10308  0E85  2E87               	goto	u2881
 10309  0E86  2E88               	goto	u2880
 10310  0E87                     u2881:
 10311  0E87  2EC0               	goto	l3197
 10312  0E88                     u2880:
 10313  0E88                     l3183:
 10314  0E88  0020               	movlb	0	; select bank0
 10315  0E89  084B               	movf	___fladd@b+3,w
 10316  0E8A  044A               	iorwf	___fladd@b+2,w
 10317  0E8B  0449               	iorwf	___fladd@b+1,w
 10318  0E8C  0448               	iorwf	___fladd@b,w
 10319  0E8D  1D03               	skipz
 10320  0E8E  2E90               	goto	u2891
 10321  0E8F  2E92               	goto	u2890
 10322  0E90                     u2891:
 10323  0E90  3001               	movlw	1
 10324  0E91  2E93               	goto	u2900
 10325  0E92                     u2890:
 10326  0E92  3000               	movlw	0
 10327  0E93                     u2900:
 10328  0E93  00D0               	movwf	??___fladd
 10329  0E94  0850               	movf	??___fladd,w
 10330  0E95  00DB               	movwf	___fladd@grs
 10331  0E96  3000               	movlw	0
 10332  0E97  00CB               	movwf	___fladd@b+3
 10333  0E98  3000               	movlw	0
 10334  0E99  00CA               	movwf	___fladd@b+2
 10335  0E9A  3000               	movlw	0
 10336  0E9B  00C9               	movwf	___fladd@b+1
 10337  0E9C  3000               	movlw	0
 10338  0E9D  00C8               	movwf	___fladd@b
 10339  0E9E  0859               	movf	___fladd@aexp,w
 10340  0E9F  00D0               	movwf	??___fladd
 10341  0EA0  0850               	movf	??___fladd,w
 10342  0EA1  00DA               	movwf	___fladd@bexp
 10343  0EA2  2EC7               	goto	l960
 10344  0EA3                     l962:
 10345  0EA3  1C5B               	btfss	___fladd@grs,0
 10346  0EA4  2EA6               	goto	u2911
 10347  0EA5  2EA7               	goto	u2910
 10348  0EA6                     u2911:
 10349  0EA6  2EAD               	goto	l3187
 10350  0EA7                     u2910:
 10351  0EA7                     l3185:
 10352  0EA7  365B               	lsrf	___fladd@grs,w
 10353  0EA8  3801               	iorlw	1
 10354  0EA9  00D0               	movwf	??___fladd
 10355  0EAA  0850               	movf	??___fladd,w
 10356  0EAB  00DB               	movwf	___fladd@grs
 10357  0EAC  2EAF               	goto	l3189
 10358  0EAD                     l3187:
 10359  0EAD  1003               	clrc
 10360  0EAE  0CDB               	rrf	___fladd@grs,f
 10361  0EAF                     l3189:
 10362  0EAF  1C48               	btfss	___fladd@b,0
 10363  0EB0  2EB2               	goto	u2921
 10364  0EB1  2EB3               	goto	u2920
 10365  0EB2                     u2921:
 10366  0EB2  2EB4               	goto	l3193
 10367  0EB3                     u2920:
 10368  0EB3                     l3191:
 10369  0EB3  17DB               	bsf	___fladd@grs,7
 10370  0EB4                     l3193:
 10371  0EB4  3001               	movlw	1
 10372  0EB5  00D0               	movwf	??___fladd
 10373  0EB6                     u2935:
 10374  0EB6  37CB               	asrf	___fladd@b+3,f
 10375  0EB7  0CCA               	rrf	___fladd@b+2,f
 10376  0EB8  0CC9               	rrf	___fladd@b+1,f
 10377  0EB9  0CC8               	rrf	___fladd@b,f
 10378  0EBA  0BD0               	decfsz	??___fladd& (0+127),f
 10379  0EBB  2EB6               	goto	u2935
 10380  0EBC                     l3195:
 10381  0EBC  3001               	movlw	1
 10382  0EBD  00D0               	movwf	??___fladd
 10383  0EBE  0850               	movf	??___fladd,w
 10384  0EBF  07DA               	addwf	___fladd@bexp,f
 10385  0EC0                     l3197:
 10386  0EC0  0020               	movlb	0	; select bank0
 10387  0EC1  0859               	movf	___fladd@aexp,w
 10388  0EC2  025A               	subwf	___fladd@bexp,w
 10389  0EC3  1C03               	skipc
 10390  0EC4  2EC6               	goto	u2941
 10391  0EC5  2EC7               	goto	u2940
 10392  0EC6                     u2941:
 10393  0EC6  2EA3               	goto	l962
 10394  0EC7                     u2940:
 10395  0EC7                     l960:
 10396  0EC7  1B58               	btfsc	___fladd@signs,6
 10397  0EC8  2ECA               	goto	u2951
 10398  0EC9  2ECB               	goto	u2950
 10399  0ECA                     u2951:
 10400  0ECA  2F03               	goto	l3223
 10401  0ECB                     u2950:
 10402  0ECB                     l3199:
 10403  0ECB  085A               	movf	___fladd@bexp,w
 10404  0ECC  1D03               	btfss	3,2
 10405  0ECD  2ECF               	goto	u2961
 10406  0ECE  2ED0               	goto	u2960
 10407  0ECF                     u2961:
 10408  0ECF  2ED9               	goto	l3205
 10409  0ED0                     u2960:
 10410  0ED0                     l3201:
 10411  0ED0  3000               	movlw	0
 10412  0ED1  00CB               	movwf	?___fladd+3
 10413  0ED2  3000               	movlw	0
 10414  0ED3  00CA               	movwf	?___fladd+2
 10415  0ED4  3000               	movlw	0
 10416  0ED5  00C9               	movwf	?___fladd+1
 10417  0ED6  3000               	movlw	0
 10418  0ED7  00C8               	movwf	?___fladd
 10419  0ED8  2FFF               	goto	l969
 10420  0ED9                     l3205:
 10421  0ED9  084C               	movf	___fladd@a,w
 10422  0EDA  07C8               	addwf	___fladd@b,f
 10423  0EDB  084D               	movf	___fladd@a+1,w
 10424  0EDC  3DC9               	addwfc	___fladd@b+1,f
 10425  0EDD  084E               	movf	___fladd@a+2,w
 10426  0EDE  3DCA               	addwfc	___fladd@b+2,f
 10427  0EDF  084F               	movf	___fladd@a+3,w
 10428  0EE0  3DCB               	addwfc	___fladd@b+3,f
 10429  0EE1                     l3207:
 10430  0EE1  1C4B               	btfss	___fladd@b+3,0
 10431  0EE2  2EE4               	goto	u2971
 10432  0EE3  2EE5               	goto	u2970
 10433  0EE4                     u2971:
 10434  0EE4  2F8F               	goto	l3257
 10435  0EE5                     u2970:
 10436  0EE5                     l3209:
 10437  0EE5  1C5B               	btfss	___fladd@grs,0
 10438  0EE6  2EE8               	goto	u2981
 10439  0EE7  2EE9               	goto	u2980
 10440  0EE8                     u2981:
 10441  0EE8  2EEF               	goto	l3213
 10442  0EE9                     u2980:
 10443  0EE9                     l3211:
 10444  0EE9  365B               	lsrf	___fladd@grs,w
 10445  0EEA  3801               	iorlw	1
 10446  0EEB  00D0               	movwf	??___fladd
 10447  0EEC  0850               	movf	??___fladd,w
 10448  0EED  00DB               	movwf	___fladd@grs
 10449  0EEE  2EF1               	goto	l3215
 10450  0EEF                     l3213:
 10451  0EEF  1003               	clrc
 10452  0EF0  0CDB               	rrf	___fladd@grs,f
 10453  0EF1                     l3215:
 10454  0EF1  1C48               	btfss	___fladd@b,0
 10455  0EF2  2EF4               	goto	u2991
 10456  0EF3  2EF5               	goto	u2990
 10457  0EF4                     u2991:
 10458  0EF4  2EF6               	goto	l3219
 10459  0EF5                     u2990:
 10460  0EF5                     l3217:
 10461  0EF5  17DB               	bsf	___fladd@grs,7
 10462  0EF6                     l3219:
 10463  0EF6  3001               	movlw	1
 10464  0EF7  00D0               	movwf	??___fladd
 10465  0EF8                     u3005:
 10466  0EF8  37CB               	asrf	___fladd@b+3,f
 10467  0EF9  0CCA               	rrf	___fladd@b+2,f
 10468  0EFA  0CC9               	rrf	___fladd@b+1,f
 10469  0EFB  0CC8               	rrf	___fladd@b,f
 10470  0EFC  0BD0               	decfsz	??___fladd& (0+127),f
 10471  0EFD  2EF8               	goto	u3005
 10472  0EFE                     l3221:
 10473  0EFE  3001               	movlw	1
 10474  0EFF  00D0               	movwf	??___fladd
 10475  0F00  0850               	movf	??___fladd,w
 10476  0F01  07DA               	addwf	___fladd@bexp,f
 10477  0F02  2F8F               	goto	l3257
 10478  0F03                     l3223:
 10479  0F03  084B               	movf	___fladd@b+3,w
 10480  0F04  3A80               	xorlw	128
 10481  0F05  00D0               	movwf	??___fladd
 10482  0F06  084F               	movf	___fladd@a+3,w
 10483  0F07  3A80               	xorlw	128
 10484  0F08  0250               	subwf	??___fladd,w
 10485  0F09  1D03               	skipz
 10486  0F0A  2F15               	goto	u3013
 10487  0F0B  084E               	movf	___fladd@a+2,w
 10488  0F0C  024A               	subwf	___fladd@b+2,w
 10489  0F0D  1D03               	skipz
 10490  0F0E  2F15               	goto	u3013
 10491  0F0F  084D               	movf	___fladd@a+1,w
 10492  0F10  0249               	subwf	___fladd@b+1,w
 10493  0F11  1D03               	skipz
 10494  0F12  2F15               	goto	u3013
 10495  0F13  084C               	movf	___fladd@a,w
 10496  0F14  0248               	subwf	___fladd@b,w
 10497  0F15                     u3013:
 10498  0F15  1803               	skipnc
 10499  0F16  2F18               	goto	u3011
 10500  0F17  2F19               	goto	u3010
 10501  0F18                     u3011:
 10502  0F18  2F51               	goto	l3233
 10503  0F19                     u3010:
 10504  0F19                     l3225:
 10505  0F19  30FF               	movlw	255
 10506  0F1A  00D0               	movwf	??___fladd
 10507  0F1B  30FF               	movlw	255
 10508  0F1C  00D1               	movwf	??___fladd+1
 10509  0F1D  30FF               	movlw	255
 10510  0F1E  00D2               	movwf	??___fladd+2
 10511  0F1F  30FF               	movlw	255
 10512  0F20  00D3               	movwf	??___fladd+3
 10513  0F21  0848               	movf	___fladd@b,w
 10514  0F22  024C               	subwf	___fladd@a,w
 10515  0F23  00D4               	movwf	??___fladd+4
 10516  0F24  0849               	movf	___fladd@b+1,w
 10517  0F25  3B4D               	subwfb	___fladd@a+1,w
 10518  0F26  00D5               	movwf	??___fladd+5
 10519  0F27  084A               	movf	___fladd@b+2,w
 10520  0F28  3B4E               	subwfb	___fladd@a+2,w
 10521  0F29  00D6               	movwf	??___fladd+6
 10522  0F2A  084B               	movf	___fladd@b+3,w
 10523  0F2B  3B4F               	subwfb	___fladd@a+3,w
 10524  0F2C  00D7               	movwf	??___fladd+7
 10525  0F2D  0854               	movf	??___fladd+4,w
 10526  0F2E  07D0               	addwf	??___fladd,f
 10527  0F2F  0855               	movf	??___fladd+5,w
 10528  0F30  3DD1               	addwfc	??___fladd+1,f
 10529  0F31  0856               	movf	??___fladd+6,w
 10530  0F32  3DD2               	addwfc	??___fladd+2,f
 10531  0F33  0857               	movf	??___fladd+7,w
 10532  0F34  3DD3               	addwfc	??___fladd+3,f
 10533  0F35  0853               	movf	??___fladd+3,w
 10534  0F36  00CB               	movwf	___fladd@b+3
 10535  0F37  0852               	movf	??___fladd+2,w
 10536  0F38  00CA               	movwf	___fladd@b+2
 10537  0F39  0851               	movf	??___fladd+1,w
 10538  0F3A  00C9               	movwf	___fladd@b+1
 10539  0F3B  0850               	movf	??___fladd,w
 10540  0F3C  00C8               	movwf	___fladd@b
 10541  0F3D                     l3227:
 10542  0F3D  3080               	movlw	128
 10543  0F3E  00D0               	movwf	??___fladd
 10544  0F3F  0850               	movf	??___fladd,w
 10545  0F40  06D8               	xorwf	___fladd@signs,f
 10546  0F41  09DB               	comf	___fladd@grs,f
 10547  0F42  0ADB               	incf	___fladd@grs,f
 10548  0F43                     l3229:
 10549  0F43  085B               	movf	___fladd@grs,w
 10550  0F44  1D03               	btfss	3,2
 10551  0F45  2F47               	goto	u3021
 10552  0F46  2F48               	goto	u3020
 10553  0F47                     u3021:
 10554  0F47  2F59               	goto	l977
 10555  0F48                     u3020:
 10556  0F48                     l3231:
 10557  0F48  3001               	movlw	1
 10558  0F49  07C8               	addwf	___fladd@b,f
 10559  0F4A  3000               	movlw	0
 10560  0F4B  3DC9               	addwfc	___fladd@b+1,f
 10561  0F4C  3000               	movlw	0
 10562  0F4D  3DCA               	addwfc	___fladd@b+2,f
 10563  0F4E  3000               	movlw	0
 10564  0F4F  3DCB               	addwfc	___fladd@b+3,f
 10565  0F50  2F59               	goto	l977
 10566  0F51                     l3233:
 10567  0F51  084C               	movf	___fladd@a,w
 10568  0F52  02C8               	subwf	___fladd@b,f
 10569  0F53  084D               	movf	___fladd@a+1,w
 10570  0F54  3BC9               	subwfb	___fladd@b+1,f
 10571  0F55  084E               	movf	___fladd@a+2,w
 10572  0F56  3BCA               	subwfb	___fladd@b+2,f
 10573  0F57  084F               	movf	___fladd@a+3,w
 10574  0F58  3BCB               	subwfb	___fladd@b+3,f
 10575  0F59                     l977:
 10576  0F59  084B               	movf	___fladd@b+3,w
 10577  0F5A  044A               	iorwf	___fladd@b+2,w
 10578  0F5B  0449               	iorwf	___fladd@b+1,w
 10579  0F5C  0448               	iorwf	___fladd@b,w
 10580  0F5D  1D03               	skipz
 10581  0F5E  2F60               	goto	u3031
 10582  0F5F  2F61               	goto	u3030
 10583  0F60                     u3031:
 10584  0F60  2F8B               	goto	l3255
 10585  0F61                     u3030:
 10586  0F61                     l3235:
 10587  0F61  085B               	movf	___fladd@grs,w
 10588  0F62  1D03               	btfss	3,2
 10589  0F63  2F65               	goto	u3041
 10590  0F64  2F66               	goto	u3040
 10591  0F65                     u3041:
 10592  0F65  2F8B               	goto	l3255
 10593  0F66                     u3040:
 10594  0F66                     l3237:
 10595  0F66  3000               	movlw	0
 10596  0F67  00CB               	movwf	?___fladd+3
 10597  0F68  3000               	movlw	0
 10598  0F69  00CA               	movwf	?___fladd+2
 10599  0F6A  3000               	movlw	0
 10600  0F6B  00C9               	movwf	?___fladd+1
 10601  0F6C  3000               	movlw	0
 10602  0F6D  00C8               	movwf	?___fladd
 10603  0F6E  2FFF               	goto	l969
 10604  0F6F                     l3241:
 10605  0F6F  3001               	movlw	1
 10606  0F70                     u3055:
 10607  0F70  35C8               	lslf	___fladd@b,f
 10608  0F71  0DC9               	rlf	___fladd@b+1,f
 10609  0F72  0DCA               	rlf	___fladd@b+2,f
 10610  0F73  0DCB               	rlf	___fladd@b+3,f
 10611  0F74  0B89               	decfsz	9,f
 10612  0F75  2F70               	goto	u3055
 10613  0F76                     l3243:
 10614  0F76  1FDB               	btfss	___fladd@grs,7
 10615  0F77  2F79               	goto	u3061
 10616  0F78  2F7A               	goto	u3060
 10617  0F79                     u3061:
 10618  0F79  2F7B               	goto	l981
 10619  0F7A                     u3060:
 10620  0F7A                     l3245:
 10621  0F7A  1448               	bsf	___fladd@b,0
 10622  0F7B                     l981:
 10623  0F7B  1C5B               	btfss	___fladd@grs,0
 10624  0F7C  2F7E               	goto	u3071
 10625  0F7D  2F7F               	goto	u3070
 10626  0F7E                     u3071:
 10627  0F7E  2F82               	goto	l3249
 10628  0F7F                     u3070:
 10629  0F7F                     l3247:
 10630  0F7F  1403               	setc
 10631  0F80  0DDB               	rlf	___fladd@grs,f
 10632  0F81  2F84               	goto	l3251
 10633  0F82                     l3249:
 10634  0F82  1003               	clrc
 10635  0F83  0DDB               	rlf	___fladd@grs,f
 10636  0F84                     l3251:
 10637  0F84  085A               	movf	___fladd@bexp,w
 10638  0F85  1903               	btfsc	3,2
 10639  0F86  2F88               	goto	u3081
 10640  0F87  2F89               	goto	u3080
 10641  0F88                     u3081:
 10642  0F88  2F8B               	goto	l3255
 10643  0F89                     u3080:
 10644  0F89                     l3253:
 10645  0F89  3001               	movlw	1
 10646  0F8A  02DA               	subwf	___fladd@bexp,f
 10647  0F8B                     l3255:
 10648  0F8B  1FCA               	btfss	___fladd@b+2,7
 10649  0F8C  2F8E               	goto	u3091
 10650  0F8D  2F8F               	goto	u3090
 10651  0F8E                     u3091:
 10652  0F8E  2F6F               	goto	l3241
 10653  0F8F                     u3090:
 10654  0F8F                     l3257:
 10655  0F8F  01D9               	clrf	___fladd@aexp
 10656  0F90                     l3259:
 10657  0F90  1FDB               	btfss	___fladd@grs,7
 10658  0F91  2F93               	goto	u3101
 10659  0F92  2F94               	goto	u3100
 10660  0F93                     u3101:
 10661  0F93  2FA2               	goto	l3267
 10662  0F94                     u3100:
 10663  0F94                     l3261:
 10664  0F94  085B               	movf	___fladd@grs,w
 10665  0F95  397F               	andlw	127
 10666  0F96  1903               	btfsc	3,2
 10667  0F97  2F99               	goto	u3111
 10668  0F98  2F9A               	goto	u3110
 10669  0F99                     u3111:
 10670  0F99  2F9D               	goto	l987
 10671  0F9A                     u3110:
 10672  0F9A                     l3263:
 10673  0F9A  01D9               	clrf	___fladd@aexp
 10674  0F9B  0AD9               	incf	___fladd@aexp,f
 10675  0F9C  2FA2               	goto	l3267
 10676  0F9D                     l987:
 10677  0F9D  1C48               	btfss	___fladd@b,0
 10678  0F9E  2FA0               	goto	u3121
 10679  0F9F  2FA1               	goto	u3120
 10680  0FA0                     u3121:
 10681  0FA0  2FA2               	goto	l3267
 10682  0FA1                     u3120:
 10683  0FA1  2F9A               	goto	l3263
 10684  0FA2                     l3267:
 10685  0FA2  0859               	movf	___fladd@aexp,w
 10686  0FA3  1903               	btfsc	3,2
 10687  0FA4  2FA6               	goto	u3131
 10688  0FA5  2FA7               	goto	u3130
 10689  0FA6                     u3131:
 10690  0FA6  2FD4               	goto	l990
 10691  0FA7                     u3130:
 10692  0FA7                     l3269:
 10693  0FA7  3001               	movlw	1
 10694  0FA8  07C8               	addwf	___fladd@b,f
 10695  0FA9  3000               	movlw	0
 10696  0FAA  3DC9               	addwfc	___fladd@b+1,f
 10697  0FAB  3000               	movlw	0
 10698  0FAC  3DCA               	addwfc	___fladd@b+2,f
 10699  0FAD  3000               	movlw	0
 10700  0FAE  3DCB               	addwfc	___fladd@b+3,f
 10701  0FAF                     l3271:
 10702  0FAF  1C4B               	btfss	___fladd@b+3,0
 10703  0FB0  2FB2               	goto	u3141
 10704  0FB1  2FB3               	goto	u3140
 10705  0FB2                     u3141:
 10706  0FB2  2FD4               	goto	l990
 10707  0FB3                     u3140:
 10708  0FB3                     l3273:
 10709  0FB3  0848               	movf	___fladd@b,w
 10710  0FB4  00D0               	movwf	??___fladd
 10711  0FB5  0849               	movf	___fladd@b+1,w
 10712  0FB6  00D1               	movwf	??___fladd+1
 10713  0FB7  084A               	movf	___fladd@b+2,w
 10714  0FB8  00D2               	movwf	??___fladd+2
 10715  0FB9  084B               	movf	___fladd@b+3,w
 10716  0FBA  00D3               	movwf	??___fladd+3
 10717  0FBB  3001               	movlw	1
 10718  0FBC  00D4               	movwf	??___fladd+4
 10719  0FBD                     u3155:
 10720  0FBD  37D3               	asrf	??___fladd+3,f
 10721  0FBE  0CD2               	rrf	??___fladd+2,f
 10722  0FBF  0CD1               	rrf	??___fladd+1,f
 10723  0FC0  0CD0               	rrf	??___fladd,f
 10724  0FC1                     u3150:
 10725  0FC1  0BD4               	decfsz	??___fladd+4,f
 10726  0FC2  2FBD               	goto	u3155
 10727  0FC3  0853               	movf	??___fladd+3,w
 10728  0FC4  00CB               	movwf	___fladd@b+3
 10729  0FC5  0852               	movf	??___fladd+2,w
 10730  0FC6  00CA               	movwf	___fladd@b+2
 10731  0FC7  0851               	movf	??___fladd+1,w
 10732  0FC8  00C9               	movwf	___fladd@b+1
 10733  0FC9  0850               	movf	??___fladd,w
 10734  0FCA  00C8               	movwf	___fladd@b
 10735  0FCB  0A5A               	incf	___fladd@bexp,w
 10736  0FCC  1903               	btfsc	3,2
 10737  0FCD  2FCF               	goto	u3161
 10738  0FCE  2FD0               	goto	u3160
 10739  0FCF                     u3161:
 10740  0FCF  2FD4               	goto	l990
 10741  0FD0                     u3160:
 10742  0FD0                     l3275:
 10743  0FD0  3001               	movlw	1
 10744  0FD1  00D0               	movwf	??___fladd
 10745  0FD2  0850               	movf	??___fladd,w
 10746  0FD3  07DA               	addwf	___fladd@bexp,f
 10747  0FD4                     l990:
 10748  0FD4  0A5A               	incf	___fladd@bexp,w
 10749  0FD5  1903               	btfsc	3,2
 10750  0FD6  2FD8               	goto	u3171
 10751  0FD7  2FD9               	goto	u3170
 10752  0FD8                     u3171:
 10753  0FD8  2FDE               	goto	l3279
 10754  0FD9                     u3170:
 10755  0FD9                     l3277:
 10756  0FD9  085A               	movf	___fladd@bexp,w
 10757  0FDA  1D03               	btfss	3,2
 10758  0FDB  2FDD               	goto	u3181
 10759  0FDC  2FDE               	goto	u3180
 10760  0FDD                     u3181:
 10761  0FDD  2FEC               	goto	l3285
 10762  0FDE                     u3180:
 10763  0FDE                     l3279:
 10764  0FDE  3000               	movlw	0
 10765  0FDF  00CB               	movwf	___fladd@b+3
 10766  0FE0  3000               	movlw	0
 10767  0FE1  00CA               	movwf	___fladd@b+2
 10768  0FE2  3000               	movlw	0
 10769  0FE3  00C9               	movwf	___fladd@b+1
 10770  0FE4  3000               	movlw	0
 10771  0FE5  00C8               	movwf	___fladd@b
 10772  0FE6                     l3281:
 10773  0FE6  085A               	movf	___fladd@bexp,w
 10774  0FE7  1D03               	btfss	3,2
 10775  0FE8  2FEA               	goto	u3191
 10776  0FE9  2FEB               	goto	u3190
 10777  0FEA                     u3191:
 10778  0FEA  2FEC               	goto	l3285
 10779  0FEB                     u3190:
 10780  0FEB                     l3283:
 10781  0FEB  01D8               	clrf	___fladd@signs
 10782  0FEC                     l3285:
 10783  0FEC  1C5A               	btfss	___fladd@bexp,0
 10784  0FED  2FEF               	goto	u3201
 10785  0FEE  2FF0               	goto	u3200
 10786  0FEF                     u3201:
 10787  0FEF  2FF2               	goto	l3289
 10788  0FF0                     u3200:
 10789  0FF0                     l3287:
 10790  0FF0  17CA               	bsf	___fladd@b+2,7
 10791  0FF1  2FF6               	goto	l998
 10792  0FF2                     l3289:
 10793  0FF2  307F               	movlw	127
 10794  0FF3  00D0               	movwf	??___fladd
 10795  0FF4  0850               	movf	??___fladd,w
 10796  0FF5  05CA               	andwf	___fladd@b+2,f
 10797  0FF6                     l998:
 10798  0FF6  365A               	lsrf	___fladd@bexp,w
 10799  0FF7  00D0               	movwf	??___fladd
 10800  0FF8  0850               	movf	??___fladd,w
 10801  0FF9  00CB               	movwf	___fladd@b+3
 10802  0FFA                     l3291:
 10803  0FFA  1FD8               	btfss	___fladd@signs,7
 10804  0FFB  2FFD               	goto	u3211
 10805  0FFC  2FFE               	goto	u3210
 10806  0FFD                     u3211:
 10807  0FFD  2FFF               	goto	l999
 10808  0FFE                     u3210:
 10809  0FFE                     l3293:
 10810  0FFE  17CB               	bsf	___fladd@b+3,7
 10811  0FFF                     l999:
 10812  0FFF                     l969:
 10813  0FFF  0008               	return
 10814  1000                     __end_of___fladd:
 10815                           
 10816                           	psect	text24
 10817  157B                     __ptext24:	
 10818 ;; *************** function _TiResetTics *****************
 10819 ;; Defined at:
 10820 ;;		line 51 in file "timer.c"
 10821 ;; Parameters:    Size  Location     Type
 10822 ;;  Handle          2    4[BANK0 ] int 
 10823 ;; Auto vars:     Size  Location     Type
 10824 ;;		None
 10825 ;; Return value:  Size  Location     Type
 10826 ;;                  1    wreg      void 
 10827 ;; Registers used:
 10828 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10829 ;; Tracked objects:
 10830 ;;		On entry : 0/0
 10831 ;;		On exit  : 0/0
 10832 ;;		Unchanged: 0/0
 10833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10834 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10836 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10837 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10838 ;;Total ram usage:        3 bytes
 10839 ;; Hardware stack levels used: 1
 10840 ;; Hardware stack levels required when called: 3
 10841 ;; This function calls:
 10842 ;;		___bmul
 10843 ;; This function is called by:
 10844 ;;		_main
 10845 ;; This function uses a non-reentrant model
 10846 ;;
 10847                           
 10848  157B                     _TiResetTics:	
 10849                           ;psect for function _TiResetTics
 10850                           
 10851  157B                     l4187:	
 10852                           ;incstack = 0
 10853                           ; Regs used in _TiResetTics: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10854                           
 10855                           
 10856                           ;timer.c: 55:  s_Timers[Handle].h_TicsInicials=h_Tics;
 10857  157B  3003               	movlw	3
 10858  157C  0020               	movlb	0	; select bank0
 10859  157D  00A6               	movwf	??_TiResetTics
 10860  157E  0826               	movf	??_TiResetTics,w
 10861  157F  00A0               	movwf	___bmul@multiplicand
 10862  1580  0824               	movf	TiResetTics@Handle,w
 10863  1581  3195  25A2  3195   	fcall	___bmul
 10864  1584  3E20               	addlw	(low (_s_Timers| (0+512)))& (0+255)
 10865  1585  0086               	movwf	6
 10866  1586  3002               	movlw	2	; select bank4/5
 10867  1587  0087               	movwf	7
 10868  1588  0878               	movf	_h_Tics,w
 10869  1589  3FC0               	movwi [0]fsr1
 10870  158A  0879               	movf	_h_Tics+1,w
 10871  158B  3FC1               	movwi [1]fsr1
 10872  158C                     l357:
 10873  158C  0008               	return
 10874  158D                     __end_of_TiResetTics:
 10875                           
 10876                           	psect	text25
 10877  170B                     __ptext25:	
 10878 ;; *************** function _TiInitTimer *****************
 10879 ;; Defined at:
 10880 ;;		line 16 in file "timer.c"
 10881 ;; Parameters:    Size  Location     Type
 10882 ;;		None
 10883 ;; Auto vars:     Size  Location     Type
 10884 ;;		None
 10885 ;; Return value:  Size  Location     Type
 10886 ;;                  1    wreg      void 
 10887 ;; Registers used:
 10888 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10889 ;; Tracked objects:
 10890 ;;		On entry : 0/0
 10891 ;;		On exit  : 0/0
 10892 ;;		Unchanged: 0/0
 10893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10896 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10897 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10898 ;;Total ram usage:        1 bytes
 10899 ;; Hardware stack levels used: 1
 10900 ;; Hardware stack levels required when called: 3
 10901 ;; This function calls:
 10902 ;;		___bmul
 10903 ;; This function is called by:
 10904 ;;		_main
 10905 ;; This function uses a non-reentrant model
 10906 ;;
 10907                           
 10908  170B                     _TiInitTimer:	
 10909                           ;psect for function _TiInitTimer
 10910                           
 10911  170B                     l4095:	
 10912                           ;incstack = 0
 10913                           ; Regs used in _TiInitTimer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10914                           
 10915                           
 10916                           ;timer.c: 19:  for (counter=0;counter<26;counter++) {
 10917  170B  01FA               	clrf	_counter
 10918  170C                     l4097:
 10919  170C  301A               	movlw	26
 10920  170D  027A               	subwf	_counter,w
 10921  170E  1C03               	skipc
 10922  170F  2F11               	goto	u4471
 10923  1710  2F12               	goto	u4470
 10924  1711                     u4471:
 10925  1711  2F13               	goto	l4101
 10926  1712                     u4470:
 10927  1712  2F27               	goto	l4107
 10928  1713                     l4101:
 10929                           
 10930                           ;timer.c: 20:   s_Timers[counter].b_busy=0;
 10931  1713  3003               	movlw	3
 10932  1714  0020               	movlb	0	; select bank0
 10933  1715  00A4               	movwf	??_TiInitTimer
 10934  1716  0824               	movf	??_TiInitTimer,w
 10935  1717  00A0               	movwf	___bmul@multiplicand
 10936  1718  087A               	movf	_counter,w
 10937  1719  3195  25A2  3197   	fcall	___bmul
 10938  171C  3E22               	addlw	(low ((_s_Timers| (0+512)+2)))& (0+255)
 10939  171D  0086               	movwf	6
 10940  171E  3002               	movlw	2	; select bank4/5
 10941  171F  0087               	movwf	7
 10942  1720  0181               	clrf	1
 10943  1721                     l4103:
 10944                           
 10945                           ;timer.c: 21:  }
 10946  1721  3001               	movlw	1
 10947  1722  0020               	movlb	0	; select bank0
 10948  1723  00A4               	movwf	??_TiInitTimer
 10949  1724  0824               	movf	??_TiInitTimer,w
 10950  1725  07FA               	addwf	_counter,f
 10951  1726  2F0C               	goto	l4097
 10952  1727                     l4107:
 10953                           
 10954                           ;timer.c: 22:  h_Tics=0;
 10955  1727  01F8               	clrf	_h_Tics
 10956  1728  01F9               	clrf	_h_Tics+1
 10957  1729                     l4109:
 10958                           
 10959                           ;timer.c: 32:     T2CLKCON = 0x01;
 10960  1729  3001               	movlw	1
 10961  172A  0025               	movlb	5	; select bank5
 10962  172B  0090               	movwf	16	;volatile
 10963  172C                     l4111:
 10964                           
 10965                           ;timer.c: 33:     T2PR = 1000;
 10966  172C  30E8               	movlw	232
 10967  172D  008D               	movwf	13	;volatile
 10968                           
 10969                           ;timer.c: 35:     T2TMR = 0x00;
 10970  172E  018C               	clrf	12	;volatile
 10971  172F                     l4113:
 10972                           
 10973                           ;timer.c: 36:     PIR4bits.TMR2IF = 0;
 10974  172F  002E               	movlb	14	; select bank14
 10975  1730  1090               	bcf	16,1	;volatile
 10976  1731                     l4115:
 10977                           
 10978                           ;timer.c: 37:     PIE4bits.TMR2IE = 1;
 10979  1731  149A               	bsf	26,1	;volatile
 10980  1732                     l4117:
 10981                           
 10982                           ;timer.c: 38:     T2CON = 0x80;
 10983  1732  3080               	movlw	128
 10984  1733  0025               	movlb	5	; select bank5
 10985  1734  008E               	movwf	14	;volatile
 10986  1735                     l347:
 10987  1735  0008               	return
 10988  1736                     __end_of_TiInitTimer:
 10989                           
 10990                           	psect	text26
 10991  080D                     __ptext26:	
 10992 ;; *************** function _TiGetTimer *****************
 10993 ;; Defined at:
 10994 ;;		line 41 in file "timer.c"
 10995 ;; Parameters:    Size  Location     Type
 10996 ;;		None
 10997 ;; Auto vars:     Size  Location     Type
 10998 ;;  counter         1    8[BANK0 ] unsigned char 
 10999 ;; Return value:  Size  Location     Type
 11000 ;;                  2    4[BANK0 ] int 
 11001 ;; Registers used:
 11002 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11003 ;; Tracked objects:
 11004 ;;		On entry : 0/0
 11005 ;;		On exit  : 0/0
 11006 ;;		Unchanged: 0/0
 11007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11008 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11009 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11010 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11011 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11012 ;;Total ram usage:        5 bytes
 11013 ;; Hardware stack levels used: 1
 11014 ;; Hardware stack levels required when called: 3
 11015 ;; This function calls:
 11016 ;;		___bmul
 11017 ;; This function is called by:
 11018 ;;		_main
 11019 ;; This function uses a non-reentrant model
 11020 ;;
 11021                           
 11022  080D                     _TiGetTimer:	
 11023                           ;psect for function _TiGetTimer
 11024                           
 11025  080D                     l4135:	
 11026                           ;incstack = 0
 11027                           ; Regs used in _TiGetTimer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11028                           
 11029                           
 11030                           ;timer.c: 43:     unsigned char counter=0;
 11031  080D  0020               	movlb	0	; select bank0
 11032  080E  01A8               	clrf	TiGetTimer@counter
 11033                           
 11034                           ;timer.c: 44:  while (s_Timers[counter].b_busy==1) {
 11035  080F  2820               	goto	l4143
 11036  0810                     l4137:
 11037                           
 11038                           ;timer.c: 45:   counter++;
 11039  0810  3001               	movlw	1
 11040  0811  0020               	movlb	0	; select bank0
 11041  0812  00A6               	movwf	??_TiGetTimer
 11042  0813  0826               	movf	??_TiGetTimer,w
 11043  0814  07A8               	addwf	TiGetTimer@counter,f
 11044                           
 11045                           ;timer.c: 46:   if (counter == 26) return -1;
 11046  0815  301A               	movlw	26
 11047  0816  0628               	xorwf	TiGetTimer@counter,w
 11048  0817  1D03               	btfss	3,2
 11049  0818  281A               	goto	u4481
 11050  0819  281B               	goto	u4480
 11051  081A                     u4481:
 11052  081A  2820               	goto	l4143
 11053  081B                     u4480:
 11054  081B                     l4139:
 11055  081B  30FF               	movlw	255
 11056  081C  00A4               	movwf	?_TiGetTimer
 11057  081D  30FF               	movlw	255
 11058  081E  00A5               	movwf	?_TiGetTimer+1
 11059  081F  2848               	goto	l353
 11060  0820                     l4143:
 11061                           
 11062                           ;timer.c: 44:  while (s_Timers[counter].b_busy==1) {
 11063  0820  3003               	movlw	3
 11064  0821  00A6               	movwf	??_TiGetTimer
 11065  0822  0826               	movf	??_TiGetTimer,w
 11066  0823  00A0               	movwf	___bmul@multiplicand
 11067  0824  0828               	movf	TiGetTimer@counter,w
 11068  0825  3195  25A2  3188   	fcall	___bmul
 11069  0828  3E22               	addlw	(low ((_s_Timers| (0+512)+2)))& (0+255)
 11070  0829  0086               	movwf	6
 11071  082A  3002               	movlw	2	; select bank4/5
 11072  082B  0087               	movwf	7
 11073  082C  0301               	decf	1,w
 11074  082D  1903               	btfsc	3,2
 11075  082E  2830               	goto	u4491
 11076  082F  2831               	goto	u4490
 11077  0830                     u4491:
 11078  0830  2810               	goto	l4137
 11079  0831                     u4490:
 11080  0831                     l4145:
 11081                           
 11082                           ;timer.c: 48:  s_Timers[counter].b_busy=1;
 11083  0831  3003               	movlw	3
 11084  0832  0020               	movlb	0	; select bank0
 11085  0833  00A6               	movwf	??_TiGetTimer
 11086  0834  0826               	movf	??_TiGetTimer,w
 11087  0835  00A0               	movwf	___bmul@multiplicand
 11088  0836  0828               	movf	TiGetTimer@counter,w
 11089  0837  3195  25A2  3188   	fcall	___bmul
 11090  083A  3E22               	addlw	(low ((_s_Timers| (0+512)+2)))& (0+255)
 11091  083B  0086               	movwf	6
 11092  083C  3002               	movlw	2	; select bank4/5
 11093  083D  0087               	movwf	7
 11094  083E  0181               	clrf	1
 11095  083F  0A81               	incf	1,f
 11096  0840                     l4147:
 11097                           
 11098                           ;timer.c: 49:  return (counter);
 11099  0840  0020               	movlb	0	; select bank0
 11100  0841  0828               	movf	TiGetTimer@counter,w
 11101  0842  00A6               	movwf	??_TiGetTimer
 11102  0843  01A7               	clrf	??_TiGetTimer+1
 11103  0844  0826               	movf	??_TiGetTimer,w
 11104  0845  00A4               	movwf	?_TiGetTimer
 11105  0846  0827               	movf	??_TiGetTimer+1,w
 11106  0847  00A5               	movwf	?_TiGetTimer+1
 11107  0848                     l353:
 11108  0848  0008               	return
 11109  0849                     __end_of_TiGetTimer:
 11110                           
 11111                           	psect	text27
 11112  1601                     __ptext27:	
 11113 ;; *************** function _TiGetTics *****************
 11114 ;; Defined at:
 11115 ;;		line 58 in file "timer.c"
 11116 ;; Parameters:    Size  Location     Type
 11117 ;;  Handle          2    4[BANK0 ] int 
 11118 ;; Auto vars:     Size  Location     Type
 11119 ;;  actual          2    7[BANK0 ] volatile unsigned int 
 11120 ;; Return value:  Size  Location     Type
 11121 ;;                  2    4[BANK0 ] unsigned int 
 11122 ;; Registers used:
 11123 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11124 ;; Tracked objects:
 11125 ;;		On entry : 0/0
 11126 ;;		On exit  : 0/0
 11127 ;;		Unchanged: 0/0
 11128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11129 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11130 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11132 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11133 ;;Total ram usage:        5 bytes
 11134 ;; Hardware stack levels used: 1
 11135 ;; Hardware stack levels required when called: 3
 11136 ;; This function calls:
 11137 ;;		___bmul
 11138 ;; This function is called by:
 11139 ;;		_main
 11140 ;; This function uses a non-reentrant model
 11141 ;;
 11142                           
 11143  1601                     _TiGetTics:	
 11144                           ;psect for function _TiGetTics
 11145                           
 11146  1601                     l4151:	
 11147                           ;incstack = 0
 11148                           ; Regs used in _TiGetTics: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11149                           
 11150                           
 11151                           ;timer.c: 61:     volatile unsigned int actual;;timer.c: 62:  actual = h_Tics;
 11152  1601  0879               	movf	_h_Tics+1,w
 11153  1602  0020               	movlb	0	; select bank0
 11154  1603  00A8               	movwf	TiGetTics@actual+1	;volatile
 11155  1604  0878               	movf	_h_Tics,w
 11156  1605  00A7               	movwf	TiGetTics@actual	;volatile
 11157  1606                     l4153:
 11158                           
 11159                           ;timer.c: 63:     return (actual-(s_Timers[Handle].h_TicsInicials));
 11160  1606  3003               	movlw	3
 11161  1607  00A6               	movwf	??_TiGetTics
 11162  1608  0826               	movf	??_TiGetTics,w
 11163  1609  00A0               	movwf	___bmul@multiplicand
 11164  160A  0824               	movf	TiGetTics@Handle,w
 11165  160B  3195  25A2  3196   	fcall	___bmul
 11166  160E  3E20               	addlw	(low (_s_Timers| (0+512)))& (0+255)
 11167  160F  0086               	movwf	6
 11168  1610  3002               	movlw	2	; select bank4/5
 11169  1611  0087               	movwf	7
 11170  1612  3F40               	moviw [0]fsr1
 11171  1613  0020               	movlb	0	; select bank0
 11172  1614  0227               	subwf	TiGetTics@actual,w	;volatile
 11173  1615  00A4               	movwf	?_TiGetTics
 11174  1616  3F41               	moviw [1]fsr1
 11175  1617  3B28               	subwfb	TiGetTics@actual+1,w	;volatile
 11176  1618  00A5               	movwf	?_TiGetTics+1
 11177  1619                     l360:
 11178  1619  0008               	return
 11179  161A                     __end_of_TiGetTics:
 11180                           
 11181                           	psect	text28
 11182  15A2                     __ptext28:	
 11183 ;; *************** function ___bmul *****************
 11184 ;; Defined at:
 11185 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul8.c"
 11186 ;; Parameters:    Size  Location     Type
 11187 ;;  multiplier      1    wreg     unsigned char 
 11188 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 11189 ;; Auto vars:     Size  Location     Type
 11190 ;;  multiplier      1    3[BANK0 ] unsigned char 
 11191 ;;  product         1    2[BANK0 ] unsigned char 
 11192 ;; Return value:  Size  Location     Type
 11193 ;;                  1    wreg      unsigned char 
 11194 ;; Registers used:
 11195 ;;		wreg, status,2, status,0
 11196 ;; Tracked objects:
 11197 ;;		On entry : 0/0
 11198 ;;		On exit  : 0/0
 11199 ;;		Unchanged: 0/0
 11200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11201 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11202 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11203 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11204 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11205 ;;Total ram usage:        4 bytes
 11206 ;; Hardware stack levels used: 1
 11207 ;; Hardware stack levels required when called: 2
 11208 ;; This function calls:
 11209 ;;		Nothing
 11210 ;; This function is called by:
 11211 ;;		_TiInitTimer
 11212 ;;		_TiGetTimer
 11213 ;;		_TiResetTics
 11214 ;;		_TiGetTics
 11215 ;;		_INTERRUPT_TMR2
 11216 ;; This function uses a non-reentrant model
 11217 ;;
 11218                           
 11219  15A2                     ___bmul:	
 11220                           ;psect for function ___bmul
 11221                           
 11222                           
 11223                           ;incstack = 0
 11224                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 11225                           ;___bmul@multiplier stored from wreg
 11226  15A2  0020               	movlb	0	; select bank0
 11227  15A3  00A3               	movwf	___bmul@multiplier
 11228  15A4                     l4009:
 11229  15A4  01A2               	clrf	___bmul@product
 11230  15A5                     l4011:
 11231  15A5  1C23               	btfss	___bmul@multiplier,0
 11232  15A6  2DA8               	goto	u4411
 11233  15A7  2DA9               	goto	u4410
 11234  15A8                     u4411:
 11235  15A8  2DAD               	goto	l4015
 11236  15A9                     u4410:
 11237  15A9                     l4013:
 11238  15A9  0820               	movf	___bmul@multiplicand,w
 11239  15AA  00A1               	movwf	??___bmul
 11240  15AB  0821               	movf	??___bmul,w
 11241  15AC  07A2               	addwf	___bmul@product,f
 11242  15AD                     l4015:
 11243  15AD  1003               	clrc
 11244  15AE  0DA0               	rlf	___bmul@multiplicand,f
 11245  15AF                     l4017:
 11246  15AF  1003               	clrc
 11247  15B0  0CA3               	rrf	___bmul@multiplier,f
 11248  15B1  0823               	movf	___bmul@multiplier,w
 11249  15B2  1D03               	btfss	3,2
 11250  15B3  2DB5               	goto	u4421
 11251  15B4  2DB6               	goto	u4420
 11252  15B5                     u4421:
 11253  15B5  2DA5               	goto	l4011
 11254  15B6                     u4420:
 11255  15B6                     l4019:
 11256  15B6  0822               	movf	___bmul@product,w
 11257  15B7                     l681:
 11258  15B7  0008               	return
 11259  15B8                     __end_of___bmul:
 11260                           
 11261                           	psect	text29
 11262  15E8                     __ptext29:	
 11263 ;; *************** function _SiPuts *****************
 11264 ;; Defined at:
 11265 ;;		line 60 in file "uart.c"
 11266 ;; Parameters:    Size  Location     Type
 11267 ;;  s               2    1[BANK0 ] PTR unsigned char 
 11268 ;;		 -> main@tmp(30), STR_6(7), STR_5(7), STR_4(7), 
 11269 ;;		 -> STR_3(7), STR_2(15), STR_1(19), 
 11270 ;; Auto vars:     Size  Location     Type
 11271 ;;		None
 11272 ;; Return value:  Size  Location     Type
 11273 ;;                  1    wreg      void 
 11274 ;; Registers used:
 11275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11276 ;; Tracked objects:
 11277 ;;		On entry : 0/0
 11278 ;;		On exit  : 0/0
 11279 ;;		Unchanged: 0/0
 11280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11281 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11283 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11284 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11285 ;;Total ram usage:        3 bytes
 11286 ;; Hardware stack levels used: 1
 11287 ;; Hardware stack levels required when called: 3
 11288 ;; This function calls:
 11289 ;;		_SiSendChar
 11290 ;; This function is called by:
 11291 ;;		_main
 11292 ;; This function uses a non-reentrant model
 11293 ;;
 11294                           
 11295  15E8                     _SiPuts:	
 11296                           ;psect for function _SiPuts
 11297                           
 11298  15E8                     l4189:	
 11299                           ;incstack = 0
 11300                           ; Regs used in _SiPuts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11301                           
 11302                           
 11303                           ;uart.c: 61:  while(*s) SiSendChar(*s++);
 11304  15E8  2DF6               	goto	l4195
 11305  15E9                     l4191:
 11306  15E9  0821               	movf	SiPuts@s,w
 11307  15EA  0084               	movwf	4
 11308  15EB  0822               	movf	SiPuts@s+1,w
 11309  15EC  0085               	movwf	5
 11310  15ED  0800               	movf	0,w	;code access
 11311  15EE  3195  256D  3195   	fcall	_SiSendChar
 11312  15F1                     l4193:
 11313  15F1  3001               	movlw	1
 11314  15F2  0020               	movlb	0	; select bank0
 11315  15F3  07A1               	addwf	SiPuts@s,f
 11316  15F4  3000               	movlw	0
 11317  15F5  3DA2               	addwfc	SiPuts@s+1,f
 11318  15F6                     l4195:
 11319  15F6  0020               	movlb	0	; select bank0
 11320  15F7  0821               	movf	SiPuts@s,w
 11321  15F8  0084               	movwf	4
 11322  15F9  0822               	movf	SiPuts@s+1,w
 11323  15FA  0085               	movwf	5
 11324  15FB  0012               	moviw fsr0++
 11325  15FC  1D03               	btfss	3,2
 11326  15FD  2DFF               	goto	u4501
 11327  15FE  2E00               	goto	u4500
 11328  15FF                     u4501:
 11329  15FF  2DE9               	goto	l4191
 11330  1600                     u4500:
 11331  1600                     l252:
 11332  1600  0008               	return
 11333  1601                     __end_of_SiPuts:
 11334                           
 11335                           	psect	text30
 11336  156D                     __ptext30:	
 11337 ;; *************** function _SiSendChar *****************
 11338 ;; Defined at:
 11339 ;;		line 51 in file "uart.c"
 11340 ;; Parameters:    Size  Location     Type
 11341 ;;  c               1    wreg     unsigned char 
 11342 ;; Auto vars:     Size  Location     Type
 11343 ;;  c               1    0[BANK0 ] unsigned char 
 11344 ;; Return value:  Size  Location     Type
 11345 ;;                  1    wreg      void 
 11346 ;; Registers used:
 11347 ;;		wreg
 11348 ;; Tracked objects:
 11349 ;;		On entry : 0/0
 11350 ;;		On exit  : 0/0
 11351 ;;		Unchanged: 0/0
 11352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11354 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11356 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11357 ;;Total ram usage:        1 bytes
 11358 ;; Hardware stack levels used: 1
 11359 ;; Hardware stack levels required when called: 2
 11360 ;; This function calls:
 11361 ;;		Nothing
 11362 ;; This function is called by:
 11363 ;;		_SiPuts
 11364 ;; This function uses a non-reentrant model
 11365 ;;
 11366                           
 11367  156D                     _SiSendChar:	
 11368                           ;psect for function _SiSendChar
 11369                           
 11370                           
 11371                           ;incstack = 0
 11372                           ; Regs used in _SiSendChar: [wreg]
 11373                           ;SiSendChar@c stored from wreg
 11374  156D  0020               	movlb	0	; select bank0
 11375  156E  00A0               	movwf	SiSendChar@c
 11376  156F                     l4005:
 11377                           
 11378                           ;uart.c: 54:  while (TX1STAbits.TRMT == 0){__asm("clrwdt");}
 11379  156F  2D71               	goto	l243
 11380  1570                     l244:
 11381  1570  0064               	clrwdt	;# 
 11382  1571                     l243:
 11383  1571  0022               	movlb	2	; select bank2
 11384  1572  1C9E               	btfss	30,1	;volatile
 11385  1573  2D75               	goto	u4401
 11386  1574  2D76               	goto	u4400
 11387  1575                     u4401:
 11388  1575  2D70               	goto	l244
 11389  1576                     u4400:
 11390  1576                     l4007:
 11391                           
 11392                           ;uart.c: 57:  TX1REG = c;
 11393  1576  0020               	movlb	0	; select bank0
 11394  1577  0820               	movf	SiSendChar@c,w
 11395  1578  0022               	movlb	2	; select bank2
 11396  1579  009A               	movwf	26	;volatile
 11397  157A                     l246:
 11398  157A  0008               	return
 11399  157B                     __end_of_SiSendChar:
 11400                           
 11401                           	psect	text31
 11402  15B8                     __ptext31:	
 11403 ;; *************** function _SiInit *****************
 11404 ;; Defined at:
 11405 ;;		line 37 in file "uart.c"
 11406 ;; Parameters:    Size  Location     Type
 11407 ;;  Baud            2    0[BANK0 ] int 
 11408 ;; Auto vars:     Size  Location     Type
 11409 ;;		None
 11410 ;; Return value:  Size  Location     Type
 11411 ;;                  1    wreg      void 
 11412 ;; Registers used:
 11413 ;;		wreg, status,2
 11414 ;; Tracked objects:
 11415 ;;		On entry : 0/0
 11416 ;;		On exit  : 0/0
 11417 ;;		Unchanged: 0/0
 11418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11419 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11422 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11423 ;;Total ram usage:        2 bytes
 11424 ;; Hardware stack levels used: 1
 11425 ;; Hardware stack levels required when called: 2
 11426 ;; This function calls:
 11427 ;;		Nothing
 11428 ;; This function is called by:
 11429 ;;		_main
 11430 ;; This function uses a non-reentrant model
 11431 ;;
 11432                           
 11433  15B8                     _SiInit:	
 11434                           ;psect for function _SiInit
 11435                           
 11436  15B8                     l4119:	
 11437                           ;incstack = 0
 11438                           ; Regs used in _SiInit: [wreg+status,2]
 11439                           
 11440                           
 11441                           ;uart.c: 39:     Inici = Fi = Quants = 0; PIE3bits.RCIE = 1;PIR3bits.RCIF = 0;RC1STAbits
      +                          .CREN = 1;
 11442  15B8  0022               	movlb	2	; select bank2
 11443  15B9  01B4               	clrf	_Quants^(0+256)
 11444  15BA  01B5               	clrf	(_Quants+1)^(0+256)
 11445  15BB  0021               	movlb	1	; select bank1
 11446  15BC  01A6               	clrf	_Fi^(0+128)
 11447  15BD  01A7               	clrf	(_Fi+1)^(0+128)
 11448  15BE  01A8               	clrf	_Inici^(0+128)
 11449  15BF  01A9               	clrf	(_Inici+1)^(0+128)
 11450  15C0                     l4121:
 11451  15C0  002E               	movlb	14	; select bank14
 11452  15C1  1699               	bsf	25,5	;volatile
 11453  15C2                     l4123:
 11454  15C2  128F               	bcf	15,5	;volatile
 11455  15C3                     l4125:
 11456  15C3  0022               	movlb	2	; select bank2
 11457  15C4  161D               	bsf	29,4	;volatile
 11458  15C5                     l4127:
 11459                           
 11460                           ;uart.c: 40:     TX1STA = 0x24;
 11461  15C5  3024               	movlw	36
 11462  15C6  009E               	movwf	30	;volatile
 11463  15C7                     l4129:
 11464                           
 11465                           ;uart.c: 41:     BAUD1CON = 0x08;
 11466  15C7  3008               	movlw	8
 11467  15C8  009F               	movwf	31	;volatile
 11468  15C9                     l4131:
 11469                           
 11470                           ;uart.c: 43:     RC1STA = 0x90;
 11471  15C9  3090               	movlw	144
 11472  15CA  009D               	movwf	29	;volatile
 11473  15CB                     l4133:
 11474                           
 11475                           ;uart.c: 45:     SP1BRGL = 0x0C;
 11476  15CB  300C               	movlw	12
 11477  15CC  009B               	movwf	27	;volatile
 11478                           
 11479                           ;uart.c: 48:     SP1BRGH = 0x00;
 11480  15CD  019C               	clrf	28	;volatile
 11481  15CE                     l240:
 11482  15CE  0008               	return
 11483  15CF                     __end_of_SiInit:
 11484                           
 11485                           	psect	text32
 11486  16E0                     __ptext32:	
 11487 ;; *************** function _InitPinOut *****************
 11488 ;; Defined at:
 11489 ;;		line 8 in file "Init.c"
 11490 ;; Parameters:    Size  Location     Type
 11491 ;;		None
 11492 ;; Auto vars:     Size  Location     Type
 11493 ;;		None
 11494 ;; Return value:  Size  Location     Type
 11495 ;;                  1    wreg      void 
 11496 ;; Registers used:
 11497 ;;		wreg, status,2
 11498 ;; Tracked objects:
 11499 ;;		On entry : 0/0
 11500 ;;		On exit  : 0/0
 11501 ;;		Unchanged: 0/0
 11502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11507 ;;Total ram usage:        0 bytes
 11508 ;; Hardware stack levels used: 1
 11509 ;; Hardware stack levels required when called: 2
 11510 ;; This function calls:
 11511 ;;		Nothing
 11512 ;; This function is called by:
 11513 ;;		_main
 11514 ;; This function uses a non-reentrant model
 11515 ;;
 11516                           
 11517  16E0                     _InitPinOut:	
 11518                           ;psect for function _InitPinOut
 11519                           
 11520  16E0                     l4049:	
 11521                           ;incstack = 0
 11522                           ; Regs used in _InitPinOut: [wreg+status,2]
 11523                           
 11524                           
 11525                           ;Init.c: 11:     TRISA = 0xF0;
 11526  16E0  30F0               	movlw	240
 11527  16E1  0020               	movlb	0	; select bank0
 11528  16E2  0091               	movwf	17	;volatile
 11529                           
 11530                           ;Init.c: 12:     TRISB = 0x30;
 11531  16E3  3030               	movlw	48
 11532  16E4  0092               	movwf	18	;volatile
 11533                           
 11534                           ;Init.c: 13:     TRISC = 0xFE;
 11535  16E5  30FE               	movlw	254
 11536  16E6  0093               	movwf	19	;volatile
 11537  16E7                     l4051:
 11538                           
 11539                           ;Init.c: 15:     ANSELA = 0x00;
 11540  16E7  003E               	movlb	30	; select bank30
 11541  16E8  01B8               	clrf	56	;volatile
 11542  16E9                     l4053:
 11543                           
 11544                           ;Init.c: 16:     ANSELB = 0x00;
 11545  16E9  01C3               	clrf	67	;volatile
 11546  16EA                     l4055:
 11547                           
 11548                           ;Init.c: 17:     ANSELC = 0x00;
 11549  16EA  01CE               	clrf	78	;volatile
 11550  16EB                     l4057:
 11551                           
 11552                           ;Init.c: 20:     ODCONA = 0x00;
 11553  16EB  01BA               	clrf	58	;volatile
 11554  16EC                     l4059:
 11555                           
 11556                           ;Init.c: 21:     ODCONB = 0x00;
 11557  16EC  01C5               	clrf	69	;volatile
 11558  16ED                     l4061:
 11559                           
 11560                           ;Init.c: 22:     ODCONC = 0x00;
 11561  16ED  01D0               	clrf	80	;volatile
 11562                           
 11563                           ;Init.c: 25:     PPSLOCK = 0x55;
 11564  16EE  3055               	movlw	85
 11565  16EF  003D               	movlb	29	; select bank29
 11566  16F0  008F               	movwf	15	;volsfr
 11567                           
 11568                           ;Init.c: 26:     PPSLOCK = 0xAA;
 11569  16F1  30AA               	movlw	170
 11570  16F2  008F               	movwf	15	;volsfr
 11571  16F3                     l4063:
 11572                           
 11573                           ;Init.c: 27:     INTCONbits.GIE = 0;
 11574  16F3  138B               	bcf	11,7	;volatile
 11575  16F4                     l4065:
 11576                           
 11577                           ;Init.c: 28:     PPSLOCKbits.PPSLOCKED = 0x00;
 11578  16F4  100F               	bcf	15,0	;volsfr
 11579                           
 11580                           ;Init.c: 31:     SSP1DATPPS = 0x13;
 11581  16F5  3013               	movlw	19
 11582  16F6  00C6               	movwf	70	;volatile
 11583                           
 11584                           ;Init.c: 32:     SSP1CLKPPS = 0x14;
 11585  16F7  3014               	movlw	20
 11586  16F8  00C5               	movwf	69	;volatile
 11587                           
 11588                           ;Init.c: 33:     RC3PPS = 0x15;
 11589  16F9  3015               	movlw	21
 11590  16FA  003E               	movlb	30	; select bank30
 11591  16FB  00A3               	movwf	35	;volatile
 11592                           
 11593                           ;Init.c: 34:     RC4PPS = 0x14;
 11594  16FC  3014               	movlw	20
 11595  16FD  00A4               	movwf	36	;volatile
 11596                           
 11597                           ;Init.c: 35:     RC5PPS = 0x10;
 11598  16FE  3010               	movlw	16
 11599  16FF  00A5               	movwf	37	;volatile
 11600                           
 11601                           ;Init.c: 37:     RXPPS = 0x16;
 11602  1700  3016               	movlw	22
 11603  1701  003D               	movlb	29	; select bank29
 11604  1702  00CB               	movwf	75	;volatile
 11605                           
 11606                           ;Init.c: 40:     PPSLOCK = 0x55;
 11607  1703  3055               	movlw	85
 11608  1704  008F               	movwf	15	;volsfr
 11609                           
 11610                           ;Init.c: 41:     PPSLOCK = 0xAA;
 11611  1705  30AA               	movlw	170
 11612  1706  008F               	movwf	15	;volsfr
 11613  1707                     l4067:
 11614                           
 11615                           ;Init.c: 42:     PPSLOCKbits.PPSLOCKED = 0x01;
 11616  1707  140F               	bsf	15,0	;volsfr
 11617  1708                     l4069:
 11618                           
 11619                           ;Init.c: 43:     INTCONbits.GIE = 1;
 11620  1708  178B               	bsf	11,7	;volatile
 11621  1709                     l4071:
 11622                           
 11623                           ;Init.c: 44:     INTCONbits.PEIE = 1;
 11624  1709  170B               	bsf	11,6	;volatile
 11625  170A                     l318:
 11626  170A  0008               	return
 11627  170B                     __end_of_InitPinOut:
 11628                           
 11629                           	psect	text33
 11630  1762                     __ptext33:	
 11631 ;; *************** function _Init345 *****************
 11632 ;; Defined at:
 11633 ;;		line 47 in file "Init.c"
 11634 ;; Parameters:    Size  Location     Type
 11635 ;;		None
 11636 ;; Auto vars:     Size  Location     Type
 11637 ;;		None
 11638 ;; Return value:  Size  Location     Type
 11639 ;;                  1    wreg      void 
 11640 ;; Registers used:
 11641 ;;		wreg, status,2, status,0, pclath, cstack
 11642 ;; Tracked objects:
 11643 ;;		On entry : 0/0
 11644 ;;		On exit  : 0/0
 11645 ;;		Unchanged: 0/0
 11646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11651 ;;Total ram usage:        0 bytes
 11652 ;; Hardware stack levels used: 1
 11653 ;; Hardware stack levels required when called: 4
 11654 ;; This function calls:
 11655 ;;		_I2C_start
 11656 ;;		_I2C_stop
 11657 ;;		_I2C_wait
 11658 ;;		_WriteI2C
 11659 ;; This function is called by:
 11660 ;;		_main
 11661 ;; This function uses a non-reentrant model
 11662 ;;
 11663                           
 11664  1762                     _Init345:	
 11665                           ;psect for function _Init345
 11666                           
 11667  1762                     l4157:	
 11668                           ;incstack = 0
 11669                           ; Regs used in _Init345: [wreg+status,2+status,0+pclath+cstack]
 11670                           
 11671                           
 11672                           ;Init.c: 49:     I2C_start();
 11673  1762  3195  2551  3197   	fcall	_I2C_start
 11674  1765                     l4159:
 11675                           
 11676                           ;Init.c: 50:     WriteI2C((0x1D << 1 )| 0x00); __nop();
 11677  1765  303A               	movlw	58
 11678  1766  3188  2001  3197   	fcall	_WriteI2C
 11679  1769                     l4161:
 11680  1769  0000               	nop
 11681  176A                     l4163:
 11682                           
 11683                           ;Init.c: 51:     I2C_wait();
 11684  176A  3195  255F  3197   	fcall	_I2C_wait
 11685                           
 11686                           ;Init.c: 52:     WriteI2C(0x31); __nop();
 11687  176D  3031               	movlw	49
 11688  176E  3188  2001  3197   	fcall	_WriteI2C
 11689  1771                     l4165:
 11690  1771  0000               	nop
 11691                           
 11692                           ;Init.c: 53:     WriteI2C(0x3B); __nop();
 11693  1772  303B               	movlw	59
 11694  1773  3188  2001  3197   	fcall	_WriteI2C
 11695  1776                     l4167:
 11696  1776  0000               	nop
 11697  1777                     l4169:
 11698                           
 11699                           ;Init.c: 54:     I2C_stop();
 11700  1777  3195  2558  3197   	fcall	_I2C_stop
 11701  177A                     l4171:
 11702                           
 11703                           ;Init.c: 55:     I2C_start();
 11704  177A  3195  2551  3197   	fcall	_I2C_start
 11705                           
 11706                           ;Init.c: 56:     WriteI2C((0x1D << 1 )| 0x00); __nop();
 11707  177D  303A               	movlw	58
 11708  177E  3188  2001  3197   	fcall	_WriteI2C
 11709  1781                     l4173:
 11710  1781  0000               	nop
 11711  1782                     l4175:
 11712                           
 11713                           ;Init.c: 57:     I2C_wait();
 11714  1782  3195  255F  3197   	fcall	_I2C_wait
 11715  1785                     l4177:
 11716                           
 11717                           ;Init.c: 58:     WriteI2C(0x2D); __nop();
 11718  1785  302D               	movlw	45
 11719  1786  3188  2001  3197   	fcall	_WriteI2C
 11720  1789                     l4179:
 11721  1789  0000               	nop
 11722  178A                     l4181:
 11723                           
 11724                           ;Init.c: 59:     WriteI2C(0x08); __nop();
 11725  178A  3008               	movlw	8
 11726  178B  3188  2001  3197   	fcall	_WriteI2C
 11727  178E                     l4183:
 11728  178E  0000               	nop
 11729  178F                     l4185:
 11730                           
 11731                           ;Init.c: 60:     I2C_stop();
 11732  178F  3195  2558  3197   	fcall	_I2C_stop
 11733  1792                     l321:
 11734  1792  0008               	return
 11735  1793                     __end_of_Init345:
 11736                           
 11737                           	psect	text34
 11738  0849                     __ptext34:	
 11739 ;; *************** function _Avg *****************
 11740 ;; Defined at:
 11741 ;;		line 64 in file "Init.c"
 11742 ;; Parameters:    Size  Location     Type
 11743 ;;  x               2    3[BANK0 ] int 
 11744 ;;  y               2    5[BANK0 ] int 
 11745 ;;  z               2    7[BANK0 ] int 
 11746 ;; Auto vars:     Size  Location     Type
 11747 ;;		None
 11748 ;; Return value:  Size  Location     Type
 11749 ;;                  1    wreg      void 
 11750 ;; Registers used:
 11751 ;;		wreg, status,2, status,0, pclath, cstack
 11752 ;; Tracked objects:
 11753 ;;		On entry : 0/0
 11754 ;;		On exit  : 0/0
 11755 ;;		Unchanged: 0/0
 11756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11757 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11760 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11761 ;;Total ram usage:        6 bytes
 11762 ;; Hardware stack levels used: 1
 11763 ;; Hardware stack levels required when called: 4
 11764 ;; This function calls:
 11765 ;;		_I2C_start
 11766 ;;		_I2C_stop
 11767 ;;		_I2C_wait
 11768 ;;		_WriteI2C
 11769 ;; This function is called by:
 11770 ;;		_main
 11771 ;; This function uses a non-reentrant model
 11772 ;;
 11773                           
 11774  0849                     _Avg:	
 11775                           ;psect for function _Avg
 11776                           
 11777  0849                     l4197:	
 11778                           ;incstack = 0
 11779                           ; Regs used in _Avg: [wreg+status,2+status,0+pclath+cstack]
 11780                           
 11781                           
 11782                           ;Init.c: 65:     I2C_start();
 11783  0849  3195  2551  3188   	fcall	_I2C_start
 11784  084C                     l4199:
 11785                           
 11786                           ;Init.c: 66:     WriteI2C((0x1D << 1 )| 0x00); __nop();
 11787  084C  303A               	movlw	58
 11788  084D  3188  2001  3188   	fcall	_WriteI2C
 11789  0850                     l4201:
 11790  0850  0000               	nop
 11791  0851                     l4203:
 11792                           
 11793                           ;Init.c: 67:     I2C_wait();
 11794  0851  3195  255F  3188   	fcall	_I2C_wait
 11795                           
 11796                           ;Init.c: 68:     WriteI2C(0x1E); __nop();
 11797  0854  301E               	movlw	30
 11798  0855  3188  2001  3188   	fcall	_WriteI2C
 11799  0858                     l4205:
 11800  0858  0000               	nop
 11801                           
 11802                           ;Init.c: 69:     WriteI2C(x); __nop();
 11803  0859  0020               	movlb	0	; select bank0
 11804  085A  0823               	movf	Avg@x,w
 11805  085B  3188  2001  3188   	fcall	_WriteI2C
 11806  085E                     l4207:
 11807  085E  0000               	nop
 11808  085F                     l4209:
 11809                           
 11810                           ;Init.c: 70:     I2C_stop();
 11811  085F  3195  2558  3188   	fcall	_I2C_stop
 11812  0862                     l4211:
 11813                           
 11814                           ;Init.c: 72:     I2C_start();
 11815  0862  3195  2551  3188   	fcall	_I2C_start
 11816                           
 11817                           ;Init.c: 73:     WriteI2C((0x1D << 1 )| 0x00); __nop();
 11818  0865  303A               	movlw	58
 11819  0866  3188  2001  3188   	fcall	_WriteI2C
 11820  0869                     l4213:
 11821  0869  0000               	nop
 11822  086A                     l4215:
 11823                           
 11824                           ;Init.c: 74:     I2C_wait();
 11825  086A  3195  255F  3188   	fcall	_I2C_wait
 11826  086D                     l4217:
 11827                           
 11828                           ;Init.c: 75:     WriteI2C(0x1F); __nop();
 11829  086D  301F               	movlw	31
 11830  086E  3188  2001  3188   	fcall	_WriteI2C
 11831  0871                     l4219:
 11832  0871  0000               	nop
 11833  0872                     l4221:
 11834                           
 11835                           ;Init.c: 76:     WriteI2C(y); __nop();
 11836  0872  0020               	movlb	0	; select bank0
 11837  0873  0825               	movf	Avg@y,w
 11838  0874  3188  2001  3188   	fcall	_WriteI2C
 11839  0877                     l4223:
 11840  0877  0000               	nop
 11841  0878                     l4225:
 11842                           
 11843                           ;Init.c: 77:     I2C_stop();
 11844  0878  3195  2558  3188   	fcall	_I2C_stop
 11845  087B                     l4227:
 11846                           
 11847                           ;Init.c: 79:     I2C_start();
 11848  087B  3195  2551  3188   	fcall	_I2C_start
 11849  087E                     l4229:
 11850                           
 11851                           ;Init.c: 80:     WriteI2C((0x1D << 1 )| 0x00); __nop();
 11852  087E  303A               	movlw	58
 11853  087F  3188  2001  3188   	fcall	_WriteI2C
 11854  0882                     l4231:
 11855  0882  0000               	nop
 11856                           
 11857                           ;Init.c: 81:     I2C_wait();
 11858  0883  3195  255F  3188   	fcall	_I2C_wait
 11859  0886                     l4233:
 11860                           
 11861                           ;Init.c: 82:     WriteI2C(0x20); __nop();
 11862  0886  3020               	movlw	32
 11863  0887  3188  2001  3188   	fcall	_WriteI2C
 11864  088A                     l4235:
 11865  088A  0000               	nop
 11866  088B                     l4237:
 11867                           
 11868                           ;Init.c: 83:     WriteI2C(z); __nop();
 11869  088B  0020               	movlb	0	; select bank0
 11870  088C  0827               	movf	Avg@z,w
 11871  088D  3188  2001  3188   	fcall	_WriteI2C
 11872  0890                     l4239:
 11873  0890  0000               	nop
 11874                           
 11875                           ;Init.c: 84:     I2C_stop();
 11876  0891  3195  2558  3188   	fcall	_I2C_stop
 11877  0894                     l324:
 11878  0894  0008               	return
 11879  0895                     __end_of_Avg:
 11880                           
 11881                           	psect	text35
 11882  0801                     __ptext35:	
 11883 ;; *************** function _WriteI2C *****************
 11884 ;; Defined at:
 11885 ;;		line 108 in file "I2C.c"
 11886 ;; Parameters:    Size  Location     Type
 11887 ;;  byte            1    wreg     unsigned char 
 11888 ;; Auto vars:     Size  Location     Type
 11889 ;;  byte            1    2[BANK0 ] unsigned char 
 11890 ;; Return value:  Size  Location     Type
 11891 ;;                  1    wreg      void 
 11892 ;; Registers used:
 11893 ;;		wreg, status,2, status,0, pclath, cstack
 11894 ;; Tracked objects:
 11895 ;;		On entry : 0/0
 11896 ;;		On exit  : 0/0
 11897 ;;		Unchanged: 0/0
 11898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11900 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11902 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11903 ;;Total ram usage:        1 bytes
 11904 ;; Hardware stack levels used: 1
 11905 ;; Hardware stack levels required when called: 3
 11906 ;; This function calls:
 11907 ;;		_I2C_wait
 11908 ;;		_WaitAck
 11909 ;; This function is called by:
 11910 ;;		_valorAngle
 11911 ;;		_Init345
 11912 ;;		_Avg
 11913 ;; This function uses a non-reentrant model
 11914 ;;
 11915                           
 11916  0801                     _WriteI2C:	
 11917                           ;psect for function _WriteI2C
 11918                           
 11919                           
 11920                           ;incstack = 0
 11921                           ; Regs used in _WriteI2C: [wreg+status,2+status,0+pclath+cstack]
 11922                           ;WriteI2C@byte stored from wreg
 11923  0801  0020               	movlb	0	; select bank0
 11924  0802  00A2               	movwf	WriteI2C@byte
 11925  0803                     l3995:
 11926                           
 11927                           ;I2C.c: 111:  SSP1BUF = byte;
 11928  0803  0822               	movf	WriteI2C@byte,w
 11929  0804  0023               	movlb	3	; select bank3
 11930  0805  008C               	movwf	12	;volatile
 11931  0806                     l3997:
 11932                           
 11933                           ;I2C.c: 112:  I2C_wait();
 11934  0806  3195  255F  3188   	fcall	_I2C_wait
 11935                           
 11936                           ;I2C.c: 113:     WaitAck();
 11937  0809  3195  25CF  3188   	fcall	_WaitAck
 11938  080C                     l497:
 11939  080C  0008               	return
 11940  080D                     __end_of_WriteI2C:
 11941                           
 11942                           	psect	text36
 11943  15CF                     __ptext36:	
 11944 ;; *************** function _WaitAck *****************
 11945 ;; Defined at:
 11946 ;;		line 97 in file "I2C.c"
 11947 ;; Parameters:    Size  Location     Type
 11948 ;;		None
 11949 ;; Auto vars:     Size  Location     Type
 11950 ;;  count           2    0[BANK0 ] int 
 11951 ;; Return value:  Size  Location     Type
 11952 ;;                  1    wreg      void 
 11953 ;; Registers used:
 11954 ;;		wreg, status,2, status,0
 11955 ;; Tracked objects:
 11956 ;;		On entry : 0/0
 11957 ;;		On exit  : 0/0
 11958 ;;		Unchanged: 0/0
 11959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11961 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11963 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11964 ;;Total ram usage:        2 bytes
 11965 ;; Hardware stack levels used: 1
 11966 ;; Hardware stack levels required when called: 2
 11967 ;; This function calls:
 11968 ;;		Nothing
 11969 ;; This function is called by:
 11970 ;;		_WriteI2C
 11971 ;;		_I2C_receive
 11972 ;; This function uses a non-reentrant model
 11973 ;;
 11974                           
 11975  15CF                     _WaitAck:	
 11976                           ;psect for function _WaitAck
 11977                           
 11978  15CF                     l3943:	
 11979                           ;incstack = 0
 11980                           ; Regs used in _WaitAck: [wreg+status,2+status,0]
 11981                           
 11982                           
 11983                           ;I2C.c: 98:  int count = 2;
 11984  15CF  3002               	movlw	2
 11985  15D0  0020               	movlb	0	; select bank0
 11986  15D1  00A0               	movwf	WaitAck@count
 11987  15D2  3000               	movlw	0
 11988  15D3  00A1               	movwf	WaitAck@count+1
 11989                           
 11990                           ;I2C.c: 99:  while (SSP1CON2bits.ACKSTAT) {
 11991  15D4  2DE2               	goto	l490
 11992  15D5                     l3945:
 11993                           
 11994                           ;I2C.c: 100:   if (--count == 0) {
 11995  15D5  30FF               	movlw	255
 11996  15D6  0020               	movlb	0	; select bank0
 11997  15D7  07A0               	addwf	WaitAck@count,f
 11998  15D8  30FF               	movlw	255
 11999  15D9  3DA1               	addwfc	WaitAck@count+1,f
 12000  15DA  0820               	movf	WaitAck@count,w
 12001  15DB  0421               	iorwf	WaitAck@count+1,w
 12002  15DC  1D03               	btfss	3,2
 12003  15DD  2DDF               	goto	u4301
 12004  15DE  2DE0               	goto	u4300
 12005  15DF                     u4301:
 12006  15DF  2DE2               	goto	l490
 12007  15E0                     u4300:
 12008  15E0                     l3947:
 12009  15E0  0064               	clrwdt	;# 
 12010                           
 12011                           ;I2C.c: 104:    break;
 12012  15E1  2DE7               	goto	l494
 12013  15E2                     l490:	
 12014                           ;I2C.c: 106:  }
 12015                           
 12016                           
 12017                           ;I2C.c: 99:  while (SSP1CON2bits.ACKSTAT) {
 12018  15E2  0023               	movlb	3	; select bank3
 12019  15E3  1B11               	btfsc	17,6	;volatile
 12020  15E4  2DE6               	goto	u4311
 12021  15E5  2DE7               	goto	u4310
 12022  15E6                     u4311:
 12023  15E6  2DD5               	goto	l3945
 12024  15E7                     u4310:
 12025  15E7                     l494:
 12026  15E7  0008               	return
 12027  15E8                     __end_of_WaitAck:
 12028                           
 12029                           	psect	text37
 12030  155F                     __ptext37:	
 12031 ;; *************** function _I2C_wait *****************
 12032 ;; Defined at:
 12033 ;;		line 9 in file "I2C.c"
 12034 ;; Parameters:    Size  Location     Type
 12035 ;;		None
 12036 ;; Auto vars:     Size  Location     Type
 12037 ;;		None
 12038 ;; Return value:  Size  Location     Type
 12039 ;;                  1    wreg      void 
 12040 ;; Registers used:
 12041 ;;		None
 12042 ;; Tracked objects:
 12043 ;;		On entry : 0/0
 12044 ;;		On exit  : 0/0
 12045 ;;		Unchanged: 0/0
 12046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12051 ;;Total ram usage:        0 bytes
 12052 ;; Hardware stack levels used: 1
 12053 ;; Hardware stack levels required when called: 2
 12054 ;; This function calls:
 12055 ;;		Nothing
 12056 ;; This function is called by:
 12057 ;;		_valorAngle
 12058 ;;		_Init345
 12059 ;;		_Avg
 12060 ;;		_WriteI2C
 12061 ;;		_I2C_read
 12062 ;;		_I2C_write
 12063 ;;		_I2C_send
 12064 ;;		_I2C_receive
 12065 ;; This function uses a non-reentrant model
 12066 ;;
 12067                           
 12068  155F                     _I2C_wait:	
 12069                           ;psect for function _I2C_wait
 12070                           
 12071  155F                     l3941:	
 12072                           ;incstack = 0
 12073                           ; Regs used in _I2C_wait: []
 12074                           
 12075  155F                     l430:	
 12076                           ;I2C.c: 10:     while(PIR3bits.SSP1IF == 0);
 12077                           
 12078  155F  002E               	movlb	14	; select bank14
 12079  1560  1C0F               	btfss	15,0	;volatile
 12080  1561  2D63               	goto	u4291
 12081  1562  2D64               	goto	u4290
 12082  1563                     u4291:
 12083  1563  2D5F               	goto	l430
 12084  1564                     u4290:
 12085  1564                     l432:
 12086                           
 12087                           ;I2C.c: 11:     PIR3bits.SSP1IF = 0;
 12088  1564  100F               	bcf	15,0	;volatile
 12089  1565                     l433:
 12090  1565  0008               	return
 12091  1566                     __end_of_I2C_wait:
 12092                           
 12093                           	psect	text38
 12094  1558                     __ptext38:	
 12095 ;; *************** function _I2C_stop *****************
 12096 ;; Defined at:
 12097 ;;		line 37 in file "I2C.c"
 12098 ;; Parameters:    Size  Location     Type
 12099 ;;		None
 12100 ;; Auto vars:     Size  Location     Type
 12101 ;;		None
 12102 ;; Return value:  Size  Location     Type
 12103 ;;                  1    wreg      void 
 12104 ;; Registers used:
 12105 ;;		None
 12106 ;; Tracked objects:
 12107 ;;		On entry : 0/0
 12108 ;;		On exit  : 0/0
 12109 ;;		Unchanged: 0/0
 12110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12115 ;;Total ram usage:        0 bytes
 12116 ;; Hardware stack levels used: 1
 12117 ;; Hardware stack levels required when called: 2
 12118 ;; This function calls:
 12119 ;;		Nothing
 12120 ;; This function is called by:
 12121 ;;		_valorAngle
 12122 ;;		_Init345
 12123 ;;		_Avg
 12124 ;;		_I2C_send
 12125 ;;		_I2C_receive
 12126 ;; This function uses a non-reentrant model
 12127 ;;
 12128                           
 12129  1558                     _I2C_stop:	
 12130                           ;psect for function _I2C_stop
 12131                           
 12132  1558                     l4003:	
 12133                           ;incstack = 0
 12134                           ; Regs used in _I2C_stop: []
 12135                           
 12136                           
 12137                           ;I2C.c: 38:     SSP1CON2bits.PEN = 1;
 12138  1558  0023               	movlb	3	; select bank3
 12139  1559  1511               	bsf	17,2	;volatile
 12140  155A                     l460:	
 12141                           ;I2C.c: 39:     while (SSP1CON2bits.PEN);
 12142                           
 12143  155A  1911               	btfsc	17,2	;volatile
 12144  155B  2D5D               	goto	u4391
 12145  155C  2D5E               	goto	u4390
 12146  155D                     u4391:
 12147  155D  2D5A               	goto	l460
 12148  155E                     u4390:
 12149  155E                     l463:
 12150  155E  0008               	return
 12151  155F                     __end_of_I2C_stop:
 12152                           
 12153                           	psect	text39
 12154  1551                     __ptext39:	
 12155 ;; *************** function _I2C_start *****************
 12156 ;; Defined at:
 12157 ;;		line 14 in file "I2C.c"
 12158 ;; Parameters:    Size  Location     Type
 12159 ;;		None
 12160 ;; Auto vars:     Size  Location     Type
 12161 ;;		None
 12162 ;; Return value:  Size  Location     Type
 12163 ;;                  1    wreg      void 
 12164 ;; Registers used:
 12165 ;;		None
 12166 ;; Tracked objects:
 12167 ;;		On entry : 0/0
 12168 ;;		On exit  : 0/0
 12169 ;;		Unchanged: 0/0
 12170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12175 ;;Total ram usage:        0 bytes
 12176 ;; Hardware stack levels used: 1
 12177 ;; Hardware stack levels required when called: 2
 12178 ;; This function calls:
 12179 ;;		Nothing
 12180 ;; This function is called by:
 12181 ;;		_valorAngle
 12182 ;;		_Init345
 12183 ;;		_Avg
 12184 ;;		_I2C_send
 12185 ;;		_I2C_receive
 12186 ;; This function uses a non-reentrant model
 12187 ;;
 12188                           
 12189  1551                     _I2C_start:	
 12190                           ;psect for function _I2C_start
 12191                           
 12192  1551                     l3993:	
 12193                           ;incstack = 0
 12194                           ; Regs used in _I2C_start: []
 12195                           
 12196                           
 12197                           ;I2C.c: 15:     SSP1CON2bits.SEN = 1;
 12198  1551  0023               	movlb	3	; select bank3
 12199  1552  1411               	bsf	17,0	;volatile
 12200  1553                     l436:	
 12201                           ;I2C.c: 16:     while (SSP1CON2bits.SEN);
 12202                           
 12203  1553  1811               	btfsc	17,0	;volatile
 12204  1554  2D56               	goto	u4361
 12205  1555  2D57               	goto	u4360
 12206  1556                     u4361:
 12207  1556  2D53               	goto	l436
 12208  1557                     u4360:
 12209  1557                     l439:
 12210  1557  0008               	return
 12211  1558                     __end_of_I2C_start:
 12212                           
 12213                           	psect	intentry
 12214  0004                     __pintentry:	
 12215 ;; *************** function _INTERRUPT_TMR2 *****************
 12216 ;; Defined at:
 12217 ;;		line 66 in file "timer.c"
 12218 ;; Parameters:    Size  Location     Type
 12219 ;;		None
 12220 ;; Auto vars:     Size  Location     Type
 12221 ;;  status          1    5[COMMON] _Bool 
 12222 ;; Return value:  Size  Location     Type
 12223 ;;                  1    wreg      void 
 12224 ;; Registers used:
 12225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12226 ;; Tracked objects:
 12227 ;;		On entry : 0/0
 12228 ;;		On exit  : 0/0
 12229 ;;		Unchanged: 0/0
 12230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12233 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12235 ;;Total ram usage:        2 bytes
 12236 ;; Hardware stack levels used: 1
 12237 ;; Hardware stack levels required when called: 1
 12238 ;; This function calls:
 12239 ;;		i1___bmul
 12240 ;; This function is called by:
 12241 ;;		Interrupt level 1
 12242 ;; This function uses a non-reentrant model
 12243 ;;
 12244                           
 12245  0004                     _INTERRUPT_TMR2:
 12246                           
 12247                           ;incstack = 0
 12248  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 12249                           
 12250                           ; Regs used in _INTERRUPT_TMR2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12251  0005  3180               	pagesel	$
 12252  0006                     i1l4525:
 12253                           
 12254                           ;timer.c: 67:   _Bool status = PIR4bits.TMR2IF;
 12255  0006  3000               	movlw	0
 12256  0007  002E               	movlb	14	; select bank14
 12257  0008  1890               	btfsc	16,1	;volatile
 12258  0009  3001               	movlw	1
 12259  000A  00F5               	movwf	INTERRUPT_TMR2@status
 12260  000B                     i1l4527:
 12261                           
 12262                           ;timer.c: 69:     if(status){
 12263  000B  0875               	movf	INTERRUPT_TMR2@status,w
 12264  000C  1903               	btfsc	3,2
 12265  000D  280F               	goto	u483_21
 12266  000E  2810               	goto	u483_20
 12267  000F                     u483_21:
 12268  000F  2851               	goto	i1l370
 12269  0010                     u483_20:
 12270  0010                     i1l4529:
 12271                           
 12272                           ;timer.c: 70:         h_Tics++;
 12273  0010  3001               	movlw	1
 12274  0011  07F8               	addwf	_h_Tics,f
 12275  0012  3000               	movlw	0
 12276  0013  3DF9               	addwfc	_h_Tics+1,f
 12277                           
 12278                           ;timer.c: 71:         if (h_Tics>=30000) {
 12279  0014  3075               	movlw	117
 12280  0015  0279               	subwf	_h_Tics+1,w
 12281  0016  3030               	movlw	48
 12282  0017  1903               	skipnz
 12283  0018  0278               	subwf	_h_Tics,w
 12284  0019  1C03               	skipc
 12285  001A  281C               	goto	u484_21
 12286  001B  281D               	goto	u484_20
 12287  001C                     u484_21:
 12288  001C  284F               	goto	i1l4547
 12289  001D                     u484_20:
 12290  001D                     i1l4531:
 12291                           
 12292                           ;timer.c: 73:             for (counter=0;counter<26;counter++)
 12293  001D  01FA               	clrf	_counter
 12294  001E                     i1l4533:
 12295  001E  301A               	movlw	26
 12296  001F  027A               	subwf	_counter,w
 12297  0020  1C03               	skipc
 12298  0021  2823               	goto	u485_21
 12299  0022  2824               	goto	u485_20
 12300  0023                     u485_21:
 12301  0023  2825               	goto	i1l4537
 12302  0024                     u485_20:
 12303  0024  284D               	goto	i1l4545
 12304  0025                     i1l4537:
 12305                           
 12306                           ;timer.c: 74:                 if (s_Timers[counter].b_busy==1)
 12307  0025  3003               	movlw	3
 12308  0026  00F4               	movwf	??_INTERRUPT_TMR2
 12309  0027  0874               	movf	??_INTERRUPT_TMR2,w
 12310  0028  00F0               	movwf	i1___bmul@multiplicand
 12311  0029  087A               	movf	_counter,w
 12312  002A  3195  258D  3180   	fcall	i1___bmul
 12313  002D  3E22               	addlw	(low ((_s_Timers| (0+512)+2)))& (0+255)
 12314  002E  0086               	movwf	6
 12315  002F  3002               	movlw	2	; select bank4/5
 12316  0030  0087               	movwf	7
 12317  0031  0301               	decf	1,w
 12318  0032  1D03               	btfss	3,2
 12319  0033  2835               	goto	u486_21
 12320  0034  2836               	goto	u486_20
 12321  0035                     u486_21:
 12322  0035  2848               	goto	i1l4541
 12323  0036                     u486_20:
 12324  0036                     i1l4539:
 12325                           
 12326                           ;timer.c: 75:                     s_Timers[counter].h_TicsInicials -= h_Tics;
 12327  0036  3003               	movlw	3
 12328  0037  00F4               	movwf	??_INTERRUPT_TMR2
 12329  0038  0874               	movf	??_INTERRUPT_TMR2,w
 12330  0039  00F0               	movwf	i1___bmul@multiplicand
 12331  003A  087A               	movf	_counter,w
 12332  003B  3195  258D  3180   	fcall	i1___bmul
 12333  003E  3E20               	addlw	(low (_s_Timers| (0+512)))& (0+255)
 12334  003F  0086               	movwf	6
 12335  0040  3002               	movlw	2	; select bank4/5
 12336  0041  0087               	movwf	7
 12337  0042  0878               	movf	_h_Tics,w
 12338  0043  0281               	subwf	1,f
 12339  0044  3141               	addfsr 1,1
 12340  0045  0879               	movf	_h_Tics+1,w
 12341  0046  3B81               	subwfb	1,f
 12342  0047  317F               	addfsr 1,-1
 12343  0048                     i1l4541:
 12344  0048  3001               	movlw	1
 12345  0049  00F4               	movwf	??_INTERRUPT_TMR2
 12346  004A  0874               	movf	??_INTERRUPT_TMR2,w
 12347  004B  07FA               	addwf	_counter,f
 12348  004C  281E               	goto	i1l4533
 12349  004D                     i1l4545:
 12350                           
 12351                           ;timer.c: 76:             h_Tics=0;
 12352  004D  01F8               	clrf	_h_Tics
 12353  004E  01F9               	clrf	_h_Tics+1
 12354  004F                     i1l4547:
 12355                           
 12356                           ;timer.c: 79:         PIR4bits.TMR2IF = 0;
 12357  004F  002E               	movlb	14	; select bank14
 12358  0050  1090               	bcf	16,1	;volatile
 12359  0051                     i1l370:
 12360  0051  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 12361  0052  0009               	retfie
 12362  0053                     __end_of_INTERRUPT_TMR2:
 12363                           
 12364                           	psect	text41
 12365  158D                     __ptext41:	
 12366 ;; *************** function i1___bmul *****************
 12367 ;; Defined at:
 12368 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul8.c"
 12369 ;; Parameters:    Size  Location     Type
 12370 ;;  multiplier      1    wreg     unsigned char 
 12371 ;;  multiplicand    1    0[COMMON] unsigned char 
 12372 ;; Auto vars:     Size  Location     Type
 12373 ;;  multiplier      1    3[COMMON] unsigned char 
 12374 ;;  product         1    2[COMMON] unsigned char 
 12375 ;; Return value:  Size  Location     Type
 12376 ;;                  1    wreg      unsigned char 
 12377 ;; Registers used:
 12378 ;;		wreg, status,2, status,0
 12379 ;; Tracked objects:
 12380 ;;		On entry : 0/0
 12381 ;;		On exit  : 0/0
 12382 ;;		Unchanged: 0/0
 12383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12384 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12385 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12386 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12387 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12388 ;;Total ram usage:        4 bytes
 12389 ;; Hardware stack levels used: 1
 12390 ;; This function calls:
 12391 ;;		Nothing
 12392 ;; This function is called by:
 12393 ;;		_INTERRUPT_TMR2
 12394 ;; This function uses a non-reentrant model
 12395 ;;
 12396                           
 12397  158D                     i1___bmul:	
 12398                           ;psect for function i1___bmul
 12399                           
 12400                           
 12401                           ;incstack = 0
 12402                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
 12403                           ;i1___bmul@multiplier stored from wreg
 12404  158D  00F3               	movwf	i1___bmul@multiplier
 12405  158E                     i1l3479:
 12406  158E  01F2               	clrf	i1___bmul@product
 12407  158F                     i1l3481:
 12408  158F  1C73               	btfss	i1___bmul@multiplier,0
 12409  1590  2D92               	goto	u362_21
 12410  1591  2D93               	goto	u362_20
 12411  1592                     u362_21:
 12412  1592  2D97               	goto	i1l3485
 12413  1593                     u362_20:
 12414  1593                     i1l3483:
 12415  1593  0870               	movf	i1___bmul@multiplicand,w
 12416  1594  00F1               	movwf	??i1___bmul
 12417  1595  0871               	movf	??i1___bmul,w
 12418  1596  07F2               	addwf	i1___bmul@product,f
 12419  1597                     i1l3485:
 12420  1597  1003               	clrc
 12421  1598  0DF0               	rlf	i1___bmul@multiplicand,f
 12422  1599                     i1l3487:
 12423  1599  1003               	clrc
 12424  159A  0CF3               	rrf	i1___bmul@multiplier,f
 12425  159B  0873               	movf	i1___bmul@multiplier,w
 12426  159C  1D03               	btfss	3,2
 12427  159D  2D9F               	goto	u363_21
 12428  159E  2DA0               	goto	u363_20
 12429  159F                     u363_21:
 12430  159F  2D8F               	goto	i1l3481
 12431  15A0                     u363_20:
 12432  15A0                     i1l3489:
 12433  15A0  0872               	movf	i1___bmul@product,w
 12434  15A1                     i1l681:
 12435  15A1  0008               	return
 12436  15A2                     __end_ofi1___bmul:
 12437  007E                     btemp	set	126	;btemp
 12438  007E                     int$flags	set	126
 12439  007E                     wtemp0	set	126
 12440                           
 12441                           	psect	config
 12442                           
 12443                           ;Config register CONFIG1 @ 0x8007
 12444                           ;	External Oscillator mode selection bits
 12445                           ;	FEXTOSC = OFF, Oscillator not enabled
 12446                           ;	Power-up default value for COSC bits
 12447                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 12448                           ;	Clock Out Enable bit
 12449                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 12450                           ;	Clock Switch Enable bit
 12451                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 12452                           ;	Fail-Safe Clock Monitor Enable bit
 12453                           ;	FCMEN = ON, FSCM timer enabled
 12454  8007                     	org	32775
 12455  8007  3FEC               	dw	16364
 12456                           
 12457                           ;Config register CONFIG2 @ 0x8008
 12458                           ;	Master Clear Enable bit
 12459                           ;	MCLRE = ON, MCLR pin is Master Clear function
 12460                           ;	Power-up Timer Enable bit
 12461                           ;	PWRTE = OFF, PWRT disabled
 12462                           ;	Low-Power BOR enable bit
 12463                           ;	LPBOREN = OFF, ULPBOR disabled
 12464                           ;	Brown-out reset enable bits
 12465                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 12466                           ;	Brown-out Reset Voltage Selection
 12467                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 12468                           ;	Zero-cross detect disable
 12469                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 12470                           ;	Peripheral Pin Select one-way control
 12471                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 12472                           ;	Stack Overflow/Underflow Reset Enable bit
 12473                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 12474                           ;	Background Debugger
 12475                           ;	DEBUG = OFF, Background Debugger disabled
 12476  8008                     	org	32776
 12477  8008  3FFF               	dw	16383
 12478                           
 12479                           ;Config register CONFIG3 @ 0x8009
 12480                           ;	WDT Period Select bits
 12481                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12482                           ;	WDT operating mode
 12483                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 12484                           ;	WDT Window Select bits
 12485                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 12486                           ;	WDT input clock selector
 12487                           ;	WDTCCS = SC, Software Control
 12488  8009                     	org	32777
 12489  8009  3F9F               	dw	16287
 12490                           
 12491                           ;Config register CONFIG4 @ 0x800A
 12492                           ;	UserNVM self-write protection bits
 12493                           ;	WRT = OFF, Write protection off
 12494                           ;	Scanner Enable bit
 12495                           ;	SCANE = available, Scanner module is available for use
 12496                           ;	Low Voltage Programming Enable bit
 12497                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 12498  800A                     	org	32778
 12499  800A  3FFF               	dw	16383
 12500                           
 12501                           ;Config register CONFIG5 @ 0x800B
 12502                           ;	UserNVM Program memory code protection bit
 12503                           ;	CP = OFF, Program Memory code protection disabled
 12504                           ;	DataNVM code protection bit
 12505                           ;	CPD = OFF, Data EEPROM code protection disabled
 12506  800B                     	org	32779
 12507  800B  3FFF               	dw	16383

Data Sizes:
    Strings     64
    Constant    0
    Data        0
    BSS         305
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     79      79
    BANK1            80     19      79
    BANK2            80      3      69
    BANK3            80      0      32
    BANK4            80      0      78
    BANK5            80      0      64
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_8(CODE[12]), STR_7(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_8(CODE[12]), STR_7(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_8(CODE[12]), STR_7(CODE[11]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 30
		 -> main@tmp(BANK2[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1514$source	PTR const unsigned char  size(1) Largest target is 0

    f...source	PTR const unsigned char  size(1) Largest target is 0

    S1514$buffer	PTR unsigned char  size(1) Largest target is 0

    f...buffer	PTR unsigned char  size(1) Largest target is 0

    SiPuts@s	PTR unsigned char  size(2) Largest target is 30
		 -> main@tmp(BANK2[30]), STR_6(CODE[7]), STR_5(CODE[7]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[15]), STR_1(CODE[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_TMR2 in COMMON

    _INTERRUPT_TMR2->i1___bmul

Critical Paths under _main in BANK0

    _main->_sprintf
    _valorAngle->_WriteI2C
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _fabsf->___xxtofl
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___flge->_fabsf
    ___fladd->___flmul
    _TiResetTics->___bmul
    _TiInitTimer->___bmul
    _TiGetTimer->___bmul
    _TiGetTics->___bmul
    _SiPuts->_SiSendChar
    _Init345->_WriteI2C
    _Avg->_WriteI2C
    _WriteI2C->_WaitAck

Critical Paths under _INTERRUPT_TMR2 in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _INTERRUPT_TMR2 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_TMR2 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_TMR2 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_TMR2 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_TMR2 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_TMR2 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_TMR2 in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_TMR2 in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_TMR2 in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_TMR2 in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_TMR2 in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_TMR2 in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   20958
                                              0 BANK2      3     3      0
                                _Avg
                            _Init345
                         _InitPinOut
                             _SiInit
                             _SiPuts
                          _TiGetTics
                         _TiGetTimer
                        _TiInitTimer
                        _TiResetTics
                            ___fladd
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                              _fabsf
                      _initMSSP1_I2C
                            _sprintf
                         _valorAngle
 ---------------------------------------------------------------------------------
 (1) _valorAngle                                           7     5      2     161
                                              3 BANK0      7     5      2
                 _I2C_repeated_start
                          _I2C_start
                           _I2C_stop
                           _I2C_wait
                          _NotAckI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _NotAckI2C                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_repeated_start                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    15      4    8111
                                             78 BANK0      1     1      0
                                              3 BANK1     16    12      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    7553
                                             73 BANK0      5     2      3
                                              0 BANK1      3     3      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    7134
                                             57 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    5413
                                             27 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3201
                                             16 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     166
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1429
                                              8 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1037
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             19 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              0 BANK0     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              0 BANK0     27    11     16
 ---------------------------------------------------------------------------------
 (1) _initMSSP1_I2C                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fabsf                                                8     4      4     251
                                             14 BANK0      8     4      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     930
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     457
                                             60 BANK0     11     7      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    4253
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     486
                                             22 BANK0     12     4      8
                           ___xxtofl (ARG)
                              _fabsf (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    2566
                                             40 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _TiResetTics                                          3     1      2     718
                                              4 BANK0      3     1      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          1     1      0     327
                                              4 BANK0      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _TiGetTimer                                           5     3      2     457
                                              4 BANK0      5     3      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _TiGetTics                                            5     3      2     572
                                              4 BANK0      5     3      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     327
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _SiPuts                                               3     1      2     816
                                              1 BANK0      3     1      2
                         _SiSendChar
 ---------------------------------------------------------------------------------
 (2) _SiSendChar                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SiInit                                               2     0      2      90
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _InitPinOut                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init345                                              0     0      0      65
                          _I2C_start
                           _I2C_stop
                           _I2C_wait
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _Avg                                                  6     0      6     698
                                              3 BANK0      6     0      6
                          _I2C_start
                           _I2C_stop
                           _I2C_wait
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             1     1      0      65
                                              2 BANK0      1     1      0
                           _I2C_wait
                            _WaitAck
 ---------------------------------------------------------------------------------
 (3) _WaitAck                                              2     2      0      34
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _I2C_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_TMR2                                       2     2      0     140
                                              4 COMMON     2     2      0
                           i1___bmul
 ---------------------------------------------------------------------------------
 (10) i1___bmul                                            4     3      1     106
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Avg
     _I2C_start
     _I2C_stop
     _I2C_wait
     _WriteI2C
       _I2C_wait
       _WaitAck
   _Init345
     _I2C_start
     _I2C_stop
     _I2C_wait
     _WriteI2C
   _InitPinOut
   _SiInit
   _SiPuts
     _SiSendChar
   _TiGetTics
     ___bmul
   _TiGetTimer
     ___bmul
   _TiInitTimer
     ___bmul
   _TiResetTics
     ___bmul
   ___fladd
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flge
     ___xxtofl (ARG)
     _fabsf (ARG)
       ___xxtofl (ARG)
   ___flmul
   ___fltol
     ___fladd (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _fabsf
   _initMSSP1_I2C
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
   _valorAngle
     _I2C_repeated_start
     _I2C_start
     _I2C_stop
     _I2C_wait
     _NotAckI2C
     _WriteI2C

 _INTERRUPT_TMR2 (ROOT)
   i1___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     13      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      3      45       9       86.2%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4E      13       97.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     19C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     19C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Oct 11 16:59:30 2022

         TiResetTics@Handle 0024              ___bmul@product 0022                          _Fi 00A6  
       __Umul8_16@word_mpld 0026                         l203 17FF                         l240 15CE  
                       l321 1792                         l209 1632                         l243 1571  
                       l324 0894                         l244 1570                         l252 1600  
                       l430 155F                         l318 170A                         l246 157A  
                       l432 1564                         l360 1619                         l433 1565  
                       l353 0848                         l442 1568                         l450 07FC  
                       l347 1735                         l451 07FD                         l179 0098  
                       l436 1553                         l460 155A                         l188 012F  
                       l357 158C                         l445 156C                         l439 1557  
                       l463 155E                         l448 07F8                         l490 15E2  
                       l494 15E7                         l497 080C                         l681 15B7  
                       l841 09E9                         l833 097C                         l755 078D  
                       l836 09D0                         l756 079E                         l960 0EC7  
                       l856 0949                         l768 0C4D                         l849 095E  
                       l769 0C5E                         l962 0EA3                         l859 095E  
                       l956 0E26                         l981 0F7B                         l990 0FD4  
                       l977 0F59                         l969 0FFF                         l987 0F9D  
                       l998 0FF6                         l999 0FFF                         _Avg 0849  
                       _abs 164E                         _pad 079F                         wreg 0009  
               main@Xmostra 00C6                ___flmul@aexp 003C                ___flmul@bexp 0041  
               main@Ymostra 00C4                 main@Zmostra 00C8                ___flmul@sign 003B  
              ___flmul@temp 0046                ___flmul@prod 0042                        ?_Avg 0023  
              ___fltol@exp1 0066                        l1110 0A6E                        l1102 0A48  
                      l1202 1669                        l1123 1761                        ?_abs 0033  
                      l1052 0699                        l1116 16B6                        l1109 0A62  
                      l1214 08E9                        l1222 16DF                        l1150 07B9  
                      l1071 167D                        l1231 164D                        l1064 068D  
                      l1073 168D                        l1225 07FE                        l1153 07DB  
                      l1058 0615                        l1155 07F4                        l1163 0CCE  
                      l1164 0CE4                        l3101 0DC8                        l1181 0DC7  
                      l1158 0CA8                        l3111 0DDC                        l3103 0DCE  
                      l1167 0D54                        l1159 0CB1                        l1096 0A0D  
                      l3201 0ED0                        l3121 0DF4                        l3113 0DE1  
                      l3105 0DD2                        l4001 07F5                        l1098 0A96  
                      l4003 1558                        l4011 15A5                        l3211 0EE9  
                      l3131 0E08                        l3123 0DF9                        l3115 0DE9  
                      l3107 0DD6                        l3051 0998                        l1195 17C6  
                      l1188 0B71                        l4005 156F                        l4013 15A9  
                      l4101 1713                        l3221 0EFE                        l3213 0EEF  
                      l3205 0ED9                        l3141 0E1C                        l3133 0E09  
                      l3125 0DFF                        l3117 0DEA                        l3109 0DD7  
                      l3061 09E8                        l3053 099C                        l3045 095F  
                      l4007 1576                        l4015 15AD                        l4111 172C  
                      l4103 1721                        l3231 0F48                        l3215 0EF1  
                      l3207 0EE1                        l3223 0F03                        l3151 0E38  
                      l3135 0E0E                        l3143 0E1E                        l3127 0E00  
                      l3119 0DEC                        l3055 09B4                        l3047 0974  
                      l4031 1684                        l4023 166C                        l3071 08FF  
                      l1199 1669                        l4201 0850                        l4121 15C0  
                      l4017 15AF                        l4009 15A4                        l4113 172F  
                      l3241 0F6F                        l3225 0F19                        l3233 0F51  
                      l3217 0EF5                        l3209 0EE5                        l3161 0E4C  
                      l3153 0E3C                        l3145 0E2C                        l3137 0E13  
                      l3129 0E04                        l3057 09B8                        l3049 0990  
                      l4033 1689                        l4025 166E                        l3081 0921  
                      l3073 0912                        l3065 08EA                        l4041 17A0  
                      l4211 0862                        l4203 0851                        l4051 16E7  
                      l4131 15C9                        l4123 15C2                        l4019 15B6  
                      l4115 1731                        l4107 1727                        l3251 0F84  
                      l3243 0F76                        l3235 0F61                        l3227 0F3D  
                      l3219 0EF6                        l3171 0E60                        l3163 0E50  
                      l3155 0E40                        l3147 0E30                        l3139 0E1B  
                      l3059 09E6                        l4027 1675                        l3075 0913  
                      l3067 08F6                        l4043 17B6                        l4221 0872  
                      l4213 0869                        l4205 0858                        l4061 16ED  
                      l4053 16E9                        l4133 15CB                        l4125 15C3  
                      l4117 1732                        l4109 1729                        l3261 0F94  
                      l3253 0F89                        l3245 0F7A                        l3237 0F66  
                      l3229 0F43                        l3181 0E71                        l3173 0E64  
                      l3165 0E54                        l3157 0E44                        l3149 0E34  
                      l4029 1679                        l4301 0473                        l3077 091B  
                      l4045 17BF                        l4037 1795                        l4231 0882  
                      l4223 0877                        l4215 086A                        l4207 085E  
                      l4071 1709                        l4063 16F3                        l4055 16EA  
                      l4127 15C5                        l4119 15B8                        l4151 1601  
                      l4143 0820                        l4135 080D                        l3271 0FAF  
                      l3263 0F9A                        l3247 0F7F                        l3255 0F8B  
                      l3191 0EB3                        l3183 0E88                        l3175 0E68  
                      l3167 0E58                        l3159 0E48                        l4311 0486  
                      l4303 0477                        l3095 0940                        l3087 0929  
                      l3079 091D                        l4039 179D                        l4233 0886  
                      l4225 0878                        l4217 086D                        l4209 085F  
                      l4161 1769                        l4065 16F4                        l4057 16EB  
                      l4049 16E0                        l4129 15C7                        l4153 1606  
                      l4145 0831                        l4137 0810                        l3281 0FE6  
                      l3273 0FB3                        l3249 0F82                        l3257 0F8F  
                      l3193 0EB4                        l3185 0EA7                        l3177 0E6C  
                      l3169 0E5C                        l4401 0654                        l4321 04A2  
                      l4313 048E                        l4305 047B                        l3097 094E  
                      l3089 0939                        l3441 0A05                        l4081 1622  
                      l4073 161A                        l4241 17C9                        l4235 088A  
                      l4227 087B                        l4219 0871                        l4171 177A  
                      l4163 176A                        l4067 1707                        l4059 16EC  
                      l4147 0840                        l4139 081B                        l3291 0FFA  
                      l3283 0FEB                        l3275 0FD0                        l3267 0FA2  
                      l3259 0F90                        l3195 0EBC                        l3187 0EAD  
                      l3179 0E70                        l4411 0684                        l4403 065E  
                      l4331 04DF                        l4315 0490                        l4307 047C  
                      l3099 0953                        l3451 0A2E                        l3443 0A15  
                      l3435 09EC                        l4091 162F                        l4083 1625  
                      l4075 161D                        l4251 17E2                        l4243 17CC  
                      l4237 088B                        l4229 087E                        l4181 178A  
                      l4173 1781                        l4165 1771                        l4157 1762  
                      l4069 1708                        l3293 0FFE                        l3285 0FEC  
                      l3277 0FD9                        l3269 0FA7                        l3189 0EAF  
                      l3197 0EC0                        l4413 0688                        l4405 066C  
                      l4341 0527                        l4333 04EC                        l4325 04AB  
                      l4317 0498                        l4309 0481                        l3461 0A58  
                      l3453 0A35                        l3437 09F1                        l4093 1631  
                      l4085 1627                        l4077 161E                        l4261 17FA  
                      l4253 17E4                        l4245 17D0                        l4501 03A2  
                      l4421 0086                        l4239 0890                        l4183 178E  
                      l4175 1782                        l4167 1776                        l4159 1765  
                      l4191 15E9                        l4095 170B                        l3287 0FF0  
                      l3279 0FDE                        l3199 0ECB                        l4415 0689  
                      l4407 0675                        l4351 0563                        l4343 0534  
                      l4335 0506                        l4327 04B8                        l4319 049D  
                      l3471 0A89                        l3463 0A5C                        l3455 0A39  
                      l3447 0A1E                        l3439 09F5                        l4087 162A  
                      l4079 1621                        l4271 1744                        l4255 17E9  
                      l4247 17D8                        l4503 03D9                        l4431 00A5  
                      l4423 008C                        l4185 178F                        l4177 1785  
                      l4169 1777                        l4193 15F1                        l4097 170C  
                      l3289 0FF2                        l4417 0691                        l4409 0677  
                      l4361 05B4                        l4353 056A                        l4345 053B  
                      l4337 0513                        l4329 04C5                        l4281 0443  
                      l3473 0A8D                        l3465 0A66                        l3457 0A41  
                      l3449 0A23                        l4265 168E                        l4089 162C  
                      l3801 06F7                        l4273 1746                        l4257 17EC  
                      l4249 17DB                        l4505 03F9                        l4441 00D0  
                      l4433 00AA                        l4425 008F                        l4179 1789  
                      l4195 15F6                        l4187 157B                        l4371 05E9  
                      l4363 05CB                        l4355 057E                        l4347 0548  
                      l4339 0520                        l4291 0457                        l4283 0449  
                      l3475 0A8E                        l3467 0A70                        l3459 0A4F  
                      l3811 071D                        l3803 0702                        l4275 1748  
                      l4259 17F8                        l4507 0406                        l4451 0109  
                      l4443 00D8                        l4435 00BE                        l4427 0096  
                      l4197 0849                        l4189 15E8                        l4381 05FA  
                      l4373 05EA                        l4365 05D2                        l4357 058B  
                      l4349 054F                        l4293 045C                        l4285 044D  
                      l3469 0A84                        l3821 075C                        l3813 0721  
                      l3805 070E                        l3901 0CE0                        l4277 1757  
                      l4269 1738                        l4509 041B                        l4461 0178  
                      l4453 010F                        l4445 00E6                        l4437 00C1  
                      l4429 009A                        l4517 0424                        ?_pad 0030  
                      l4199 084C                        l4391 061F                        l4383 05FE  
                      l4375 05F1                        l4367 05DE                        l4359 059F  
                      l4295 0464                        l4287 0451                        l3815 0729  
                      l3807 0711                        l3823 076A                        l3831 0B7E  
                      l3911 0D23                        l3903 0CE8                        l4471 0235  
                      l4463 018D                        l4455 011F                        l4447 00FA  
                      l4439 00C6                        l4393 0627                        l4385 0612  
                      l4369 05E5                        l4377 05F5                        l4297 0466  
                      l4289 0452                        l3825 076F                        l3817 074B  
                      l3809 0719                        l3841 0BDA                        l3833 0BA0  
                      l3761 08A5                        l3921 0D8A                        l3913 0D27  
                      l3905 0CEB                        l4481 0338                        l4473 02AF  
                      l4465 01A2                        l4457 0124                        l4449 00FF  
                      l4395 062B                        l4379 05F9                        l4299 046E  
                      l3819 075B                        l3851 0C1C                        l3843 0BE2  
                      l3835 0BAB                        l3827 0B72                        l3763 08AF  
                      l3755 0895                        l3771 16B9                        l3931 0DA3  
                      l3915 0D62                        l3923 0D8E                        l3907 0CF0  
                      l4491 0355                        l4483 033D                        l4475 02B3  
                      l4467 01B7                        l4459 0130                        l3941 155F  
                      l4397 0643                        l4389 061A                        l3845 0BE6  
                      l3853 0C2A                        l3837 0BCA                        l3829 0B74  
                      l3765 08CD                        l3757 089B                        l3773 16BC  
                      l3781 163A                        l3861 07AD                        l3933 0DA8  
                      l3925 0D95                        l3917 0D6F                        l3909 0D1F  
                      l4493 035D                        l4485 0342                        l4477 032D  
                      l4469 0231                        l3943 15CF                        l4399 0647  
                      l3791 069C                        l3855 0C2F                        l3847 0BEA  
                      l3839 0BD7                        l3767 08E0                        l3759 08A0  
                      l3775 16CA                        l3783 163E                        l3871 07CD  
                      l3863 07B2                        l3935 0DAC                        l3927 0D99  
                      l3919 0D7C                        l3951 0AAA                        l4655 042A  
                      l4495 0362                        l4487 0346                        l4479 0331  
                      l3945 15D5                        l3793 06A6                        l3849 0C0C  
                      l3881 165C                        l3777 16CF                        l3785 1647  
                      l3873 07DF                        l3865 07B7                        l3857 07A1  
                      l3929 0D9D                        l3937 0DB5                        l3961 0ADE  
                      l3953 0AB2                        l4489 034D                        l4497 0367  
                      l3947 15E0                        l3795 06C8                        l3779 1635  
                      l3875 07E8                        l3867 07BC                        l3859 07A5  
                      l3891 0CAD                        l3883 0C61                        l3971 0B2A  
                      l3963 0AE6                        l3955 0AB7                        l4499 036C  
                      l3797 06D3                        l3789 069A                        l3869 07C8  
                      l3893 0CC0                        l3885 0C71                        l3981 0B4B  
                      l3973 0B32                        l3965 0AFF                        l3957 0ABB  
                      l3949 0A99                        l3799 06F2                        l3879 164E  
                      l3895 0CC6                        l3887 0C84                        l3975 0B3D  
                      l3959 0ACD                        l3993 1551                        l3897 0CD6  
                      l3889 0C8A                        l3969 0B19                        l3985 0B4E  
                      l3995 0803                        l3899 0CDC                        l3987 0B67  
                      l3979 0B43                        l3997 0806                        l3999 1566  
                      STR_1 1800                        STR_2 1813                        STR_3 1839  
                      STR_4 1839                        STR_5 1839                        STR_6 1839  
                      STR_7 182E                        STR_8 1822                        u3010 0F19  
                      u3011 0F18                        u3100 0F94                        u3020 0F48  
                      u3101 0F93                        u3021 0F47                        u3013 0F15  
                      u3005 0EF8                        u3110 0F9A                        u3030 0F61  
                      u3111 0F99                        u3031 0F60                        u3200 0FF0  
                      u3120 0FA1                        u3040 0F66                        u4000 0BAB  
                      u3201 0FEF                        u3121 0FA0                        u3041 0F65  
                      u4001 0BAA                        u3210 0FFE                        u3130 0FA7  
                      u3211 0FFD                        u3131 0FA6                        u3140 0FB3  
                      u3060 0F7A                        u4020 0BD7                        u4100 07DB  
                      u3141 0FB2                        u3061 0F79                        u4021 0BD6  
                      u4101 07DA                        u3150 0FC1                        u3070 0F7F  
                      u4030 0BEA                        u4110 07DF                        u3071 0F7E  
                      u3055 0F70                        u4031 0BE9                        u4111 07DE  
                      u3160 0FD0                        u3080 0F89                        u4040 0C0C  
                      u4120 165C                        u4200 0CE0                        u3161 0FCF  
                      u3081 0F88                        u4041 0C0B                        u4121 165B  
                      u4105 07D7                        u4201 0CDF                        u3170 0FD9  
                      u3090 0F8F                        u4050 0C2A                        u4210 0D62  
                      u4130 0C7C                        _T2PR 028D                        u3171 0FD8  
                      u3155 0FBD                        u3091 0F8E                        u4051 0C29  
                      u4211 0D61                        u4131 0C7A                        u4300 15E0  
                      u3180 0FDE                        u2700 090C                        u3500 0A15  
                      u4060 0C2F                        u4220 0D6F                        u4140 0C7D  
                      u4301 15DF                        u3181 0FDD                        u3501 0A14  
                      u4061 0C2E                        u4045 0C08                        u4125 1658  
                      u4221 0D6E                        u4310 15E7                        u3190 0FEB  
                      u2710 0921                        u4230 0D7C                        u4150 0C8A  
                      u4311 15E6                        u3191 0FEA                        u2711 0920  
                      u4231 0D7B                        u4215 0D5E                        u4151 0C89  
                      u4400 1576                        u2800 0DDC                        u2640 0974  
                      u2720 0928                        u3600 0A89                        u3520 0A34  
                      u4080 07A5                        u4240 0D8A                        u4320 0AAA  
                      u4401 1575                        u2801 0DDB                        u2641 0973  
                      u2721 0927                        u2705 0908                        u3601 0A88  
                      u3521 0A33                        u4081 07A4                        u4241 0D89  
                      u4321 0AA9                        u4410 15A9                        u2810 0DE1  
                      u2650 0990                        u3610 0A8D                        u4090 07B2  
                      u4250 0D8E                        u4170 0CAD                        u4330 0ACD  
                      u4411 15A8                        u2811 0DE0                        u2651 098F  
                      u3611 0A8C                        u3515 0A28                        u4091 07B1  
                      u4251 0D8D                        u4235 0D78                        u4171 0CAC  
                      u4331 0ACC                        u4500 1600                        u4420 15B6  
                      u2900 0E93                        u2820 0DFF                        u2660 099C  
                      u2740 0938                        u3540 0A4E                        u4260 0D95  
                      u4180 0CC0                        u4340 0ADE                        Avg@x 0023  
                      u4501 15FF                        u4421 15B5                        u2821 0DFE  
                      u2661 099B                        u2741 0937                        u3541 0A4D  
                      u4261 0D94                        u4245 0D86                        u4181 0CBF  
                      u4341 0ADD                        Avg@y 0025                        u2910 0EA7  
                      u2830 0E08                        u2670 09B8                        u4430 1679  
                      u4510 0451                        u2750 093F                        u4270 0D99  
                      u4190 0CDC                        u4350 0B2A                        Avg@z 0027  
                      u2911 0EA6                        u2831 0E07                        u2671 09B7  
                      u4431 1678                        u4511 0450                        u2751 093E  
                      u2735 092A                        u3535 0A42                        u4271 0D98  
                      u4191 0CDB                        u4351 0B29                        u4360 1557  
                      u2920 0EB3                        u2840 0E0E                        u2680 09E6  
                      u4520 0457                        u3560 0A5C                        u3480 09F1  
                      u4280 0DA3                        u4361 1556                        u2921 0EB2  
                      u2841 0E0D                        u2681 09E5                        u4521 0456  
                      u3561 0A5B                        u3481 09F0                        u4281 0DA2  
                      u4185 0CBC                        u4290 1564                        u2850 0E13  
                      u4450 1689                        u4610 05AA                        u4530 045C  
                      u2770 094E                        u2690 08F6                        u3570 0A62  
                      u3490 09F5                        u3810 089B                        u4370 156C  
                      u4291 1563                        u2851 0E12                        u4451 1688  
                      u4531 045B                        u2771 094D                        u2691 08F5  
                      u3571 0A61                        u3555 0A52                        u3491 09F4  
                      u3811 089A                        u4371 156B                        u2940 0EC7  
                      u2860 0E2C                        u4700 0619                        u4620 05C1  
                      u4540 047B                        u2780 0953                        u3580 0A66  
                      u3820 08A0                        u4460 17BF                        u4380 07FC  
                      u2941 0EC6                        u2861 0E2B                        u2685 09E2  
                      u4445 167E                        u4701 0618                        u4605 0550  
                      u4541 047A                        u2781 0952                        u2765 0941  
                      u3581 0A65                        u3821 089F                        u4461 17BE  
                      u4381 07FB                        u4390 155E                        u4470 1712  
                      u2950 0ECB                        u2870 0E30                        u2790 0DD6  
                      u4710 061F                        u4550 0481                        u3590 0A7A  
                      u3910 06FF                        u3830 08AF                        u4391 155D  
                      u4471 1711                        u2951 0ECA                        u2935 0EB6  
                      u2871 0E2F                        u2791 0DD5                        u4711 061E  
                      u4615 05A6                        u4551 0480                        u3831 08AE  
                      u4480 081B                        u2960 0ED0                        u2880 0E88  
                      u4720 062B                        u4560 0486                        u3920 070E  
                      u3840 08CD                        u4800 034D                        u4481 081A  
                      u2961 0ECF                        u2881 0E87                        u4721 062A  
                      u4625 05BD                        u4561 0485                        u3921 070D  
                      u3841 08CC                        u4801 034C                        u4490 0831  
                      u2970 0EE5                        u2890 0E92                        u4730 0639  
                      u4650 05E9                        u4570 049D                        u3930 0721  
                      u3850 16DF                        u4810 03A2                        u4491 0830  
                      u2971 0EE4                        u2891 0E90                        u4651 05E8  
                      u4635 05CC                        u4571 049C                        u3595 0A76  
                      u3931 0720                        u3851 16DE                        u4811 03A1  
                      u2980 0EE9                        u4740 0654                        u4580 04A2  
                      u3940 074B                        u3860 1647                        u4820 03D9  
                      u2981 0EE8                        u2885 0E84                        u4741 0653  
                      u4645 05DF                        u4581 04A1                        u3941 074A  
                      u3845 08C9                        u3861 1646                        u4821 03D8  
                      u2990 0EF5                        u4750 066C                        u4670 05F9  
                      u3950 076A                        u3870 06A6                        u2991 0EF4  
                      u4751 066B                        u4735 0635                        u4671 05F8  
                      u3951 0769                        u3871 06A5                        u4760 0688  
                      u4680 05FE                        u3960 076F                        u4761 0687  
                      u4745 0650                        u4681 05FD                        u4665 05EB  
                      u3961 076E                        u3945 0747                        u4690 0612  
                      u3890 06D3                        u4770 00BE                        u4755 0668  
                      u4691 0611                        u4595 0521                        u3891 06D2  
                      u4771 00BD                        u3980 0B7E                        u4780 00FA  
                      u3981 0B7D                        u4781 00F9                        u4790 0338  
                      u4791 0337                  SiInit@Baud 0020                        abs@a 0033  
                      _dbuf 01A0                        _main 0086                        _dtoa 0C5F  
                      _prec 00A4                        _nout 00A0                        pad@i 0034  
                      pad@p 0031                        fsr0h 0005                        fsr1h 0007  
                      indf0 0000                        fsr0l 0004                        indf1 0001  
                      fsr1l 0006                        pad@w 0036                        btemp 007E  
          __end_of_I2C_wait 1566                        start 0053            __end_of_I2C_stop 155F  
         TiGetTimer@counter 0028           ___bmul@multiplier 0023             __end_of_Init345 1793  
                     ??_Avg 0029                       ??_abs 0035                       ??_pad 0033  
           __end_of_WaitAck 15E8               ___fltol@sign1 0065             __end_of___aodiv 079F  
           __end_of___fladd 1000                       ?_main 0070                       ?_dtoa 003B  
           __end_of___aomod 0C5F             __end_of___flmul 069A             __end_of___fltol 095F  
             ??_TiInitTimer 0024                       _T2CON 028E                       _T2TMR 028C  
                     i1l370 0051                       i1l681 15A1                       _OSCEN 0891  
              vfpfcnvrt@fmt 0059                       _TRISA 0011                       _TRISB 0012  
                     _TRISC 0013                       _RXPPS 0ECB                       _Inici 00A8  
                     _fabsf 168E                       _flags 0076                       _fputc 0895  
                     _fputs 16B7                       pad@fp 0038                       _width 00A2  
                     main@T 00D4                       _putch 07FE                       main@i 00C2  
                     main@j 00BE                       dtoa@d 003B                       main@r 00C0  
                     dtoa@i 0057                       main@x 00DA                       main@y 00D8  
                     dtoa@n 004F                       main@z 00D6                       dtoa@p 0049  
                     dtoa@s 004D                       dtoa@w 004B            __end_ofi1___bmul 15A2  
             ??_TiResetTics 0026                       status 0003           __end_of_I2C_start 1558  
                     wtemp0 007E             __end_of_sprintf 1762               _initMSSP1_I2C 161A  
             main@Xoriginal 0140               main@Yoriginal 013E                  _TiGetTimer 080D  
                _InitPinOut 16E0             __initialization 0055               main@Zoriginal 013C  
              __end_of_main 0443                __end_of_dtoa 0DC8                 SiSendChar@c 0020  
                _SiSendChar 156D                      ??_main 0162                      ??_dtoa 0043  
                    ?_fabsf 002E         __end_of_TiInitTimer 1736                      ?_fputc 0020  
                    ?_fputs 0028            __end_of_WriteI2C 080D                      _ANSELA 0F38  
                    ?_putch 0070                      _ANSELB 0F43                      _ANSELC 0F4E  
                    _RC1STA 011D                      _RC3PPS 0F23                      _RC4PPS 0F24  
                    _RC5PPS 0F25                      _ODCONA 0F3A                      _ODCONB 0F45  
                    _ODCONC 0F50                      i1l3481 158F                      i1l3483 1593  
                    i1l4531 001D                      i1l3485 1597                      i1l4541 0048  
                    i1l4533 001E                      i1l4525 0006                      i1l3487 1599  
                    i1l3479 158E                      i1l4527 000B                      i1l3489 15A0  
                    i1l4545 004D                      i1l4537 0025                      i1l4529 0010  
                    i1l4539 0036                      i1l4547 004F                      u362_20 1593  
                    u362_21 1592                      u363_20 15A0                      u363_21 159F  
                    u483_20 0010                      u483_21 000F                      u484_20 001D  
                    u484_21 001C                      _OSCFRQ 0893                      u485_20 0024  
                    u485_21 0023                      u486_20 0036                      u486_21 0035  
                    u401lld 0BCA                      _TX1REG 011A                      u407lld 0C4D  
                    u416lld 0CA8                      _TX1STA 011E                      u390lld 06F2  
                    u388lld 06C5                   ??_Init345 0023                      u397lld 078D  
            ?_initMSSP1_I2C 0070                      u399lld 0B9D            __end_of___xxtofl 0A97  
                    _SiInit 15B8                      _SiPuts 15E8                   ??_WaitAck 0020  
       __end_of_TiResetTics 158D                vfprintf@cfmt 00DD                      _Quants 0134  
                    ___flge 095F                      ___bmul 15A2                      _h_Tics 0078  
                 ??___aodiv 0030                   ??___fladd 0050                   ??___aomod 0030  
                 ??___flmul 0036                   ??___fltol 0060                      fabsf@u 0032  
                    fabsf@x 002E                      pad@buf 0030                      main@Xa 0138  
                    main@Ya 0136                      main@Za 013A                      main@x0 00B4  
                    main@x1 00B2                      main@y0 00B0                      main@y1 00AE  
                    main@z0 00AC                      main@z1 00AA                      dtoa@fp 0046  
                    _strlen 1633                WriteI2C@byte 0022                      fputc@c 0020  
                    fputs@c 002C                      fputs@i 002D                      fputs@s 002F  
                 ?_I2C_wait 0070                   ?_I2C_stop 0070                      putch@c 0070  
          __end_of_vfprintf 17C7                   ??_sprintf 006E                  ___flge@ff1 0036  
                ___flge@ff2 003A                ___xxtofl@arg 002A                ___xxtofl@exp 0029  
              ___xxtofl@val 0020     __end_of__initialization 0082                  ___fltol@f1 005C  
       ___bmul@multiplicand 0020                 ?_TiGetTimer 0024                 ?_InitPinOut 0070  
__end_of_I2C_repeated_start 156D              __pcstackCOMMON 0070               __end_of_fabsf 16B7  
             __end_of_fputc 08EA               __end_of_fputs 16E0                 ?_SiSendChar 0070  
             __end_of_putch 07FF                   ?i1___bmul 0070           __end_of_TiGetTics 161A  
               _TiInitTimer 170B           __end_of_NotAckI2C 07FE                  ??_I2C_wait 0020  
                ??_I2C_stop 0020                     ??_fabsf 0032            i1___bmul@product 0072  
            _INTERRUPT_TMR2 0004                     ??_fputc 0023                     ??_fputs 0029  
                   ??_putch 0020                  __pbssBANK1 00A0                  __pbssBANK2 0120  
                __pbssBANK3 01A0                  __pbssBANK4 0220                  __pbssBANK5 02A0  
           ??_initMSSP1_I2C 0020                 _TiResetTics 157B                     ?_SiInit 0020  
         __end_of__Umul8_16 168E                     ?_SiPuts 0021                  __pmaintext 0086  
                   ?___flge 0036                     ?___bmul 0020                  __pintentry 0004  
                 ?_WriteI2C 0070                  ??i1___bmul 0071                     ?_strlen 0020  
                 ?___xxtofl 0020                     _SP1BRGH 011C                     _SP1BRGL 011B  
    __end_of_INTERRUPT_TMR2 0053                     _OSCCON1 088D                     _OSCCON3 088F  
                   _OSCTUNE 0892                     _SSP1ADD 018D                     _PPSLOCK 0E8F  
                   _SSP1BUF 018C            main@contadorInit 00BC                     _Init345 1762  
                   SiPuts@s 0021                     _WaitAck 15CF                   _I2C_start 1551  
                   ___aodiv 069A                     ___fladd 0DC8                     ___aomod 0B72  
                   ___flmul 0443                     ___fltol 08EA                   ?_vfprintf 0069  
                ??_WriteI2C 0022                     __ptext1 17C7                     __ptext2 07F5  
                   __ptext3 1566                     __ptext4 1736                     __ptext5 1793  
                   __ptext6 0A97                     __ptext7 0C5F                     __ptext8 079F  
                   __ptext9 1633                     _counter 007A                  ??___xxtofl 0024  
           ?_INTERRUPT_TMR2 0070         i1___bmul@multiplier 0073                     main@cal 00BA  
                   _sprintf 1736                     clrloop0 154C                     main@res 00D0  
                   main@tmp 0144        end_of_initialization 0082                     fputc@fp 0022  
           TiGetTics@Handle 0024                     fputs@fp 0028                  ?_I2C_start 0070  
         __end_of_vfpfcnvrt 0B72             TiGetTics@actual 0027                  _valorAngle 17C7  
                ??_vfprintf 006C                     strlen@a 0023                     strlen@s 0024  
               ___fladd@grs 005B               ___xxtofl@sign 0028                 ___flmul@grs 003D  
              ??_TiGetTimer 0026                ??_InitPinOut 0020              __end_of_SiInit 15CF  
            __end_of_SiPuts 1601                ??_SiSendChar 0020              __end_of___flge 09EA  
            __end_of___bmul 15B8                 vfpfcnvrt@ap 005A                 vfpfcnvrt@fp 0068  
               vfpfcnvrt@ll 0060                   _BufferRx3 02A0                ?_TiInitTimer 0070  
        _I2C_repeated_start 1566              __end_of_strlen 164E         start_initialization 0055  
                 _TiGetTics 1601                 __end_of_Avg 0895                 __end_of_abs 166A  
               __end_of_pad 07F5          __end_of_TiGetTimer 0849          __end_of_InitPinOut 170B  
                 _NotAckI2C 07F5         ?_I2C_repeated_start 0070                ?_TiResetTics 0024  
        __end_of_SiSendChar 157B                    ??_SiInit 0022                    ??_SiPuts 0023  
               ??_I2C_start 0020                 vfprintf@fmt 0069                 ?_valorAngle 0023  
                  ??___flge 003E                    ??___bmul 0021        ??_I2C_repeated_start 0020  
                 __Umul8_16 166A                    ??_strlen 0022                WaitAck@count 0020  
                 ___fladd@a 004C                   ___fladd@b 0048                   ___flmul@a 0032  
                 ___flmul@b 002E                 __pbssCOMMON 0076                   ___latbits 0002  
      INTERRUPT_TMR2@status 0075               __pcstackBANK0 0020               __pcstackBANK1 00DC  
             __pcstackBANK2 0162                  ?_TiGetTics 0024            ___aodiv@dividend 0028  
                ?_NotAckI2C 0070       __end_of_initMSSP1_I2C 1633                    ?_Init345 0070  
                  ?_WaitAck 0070                   _dtoa$1596 0047                    ?___aodiv 0020  
                  ?___fladd 0048                    ?___aomod 0020            ___aodiv@quotient 0033  
                  ?___flmul 002E                    ?___fltol 005C                  ?__Umul8_16 0020  
          ??_INTERRUPT_TMR2 0074                    _BAUD1CON 011F                   fabsf@F465 0120  
                  _I2C_wait 155F                    _I2C_stop 1558                    ?_sprintf 00DF  
                  _T2CLKCON 0290                    _LATBbits 0017                   clear_ram0 154B  
                  _PIE3bits 0719                    _PIE4bits 071A       i1___bmul@multiplicand 0070  
                  _PIR3bits 070F                    _PIR4bits 0710                    _SSP1CON1 0190  
                  _SSP1CON2 0191                    _SSP1CON3 0192                    _SSP1STAT 018F  
                 _vfpfcnvrt 0A97                    i1___bmul 158D                   main@Estat 00D2  
               ??_TiGetTics 0026               valorAngle@eix 0029               valorAngle@tmp 0027  
               ??_NotAckI2C 0020                  vfprintf@ap 006B                  vfprintf@fp 00DC  
               ??__Umul8_16 0022                  ?_vfpfcnvrt 0059                    _WriteI2C 0801  
           ___aodiv@divisor 0020             ___aodiv@counter 0031                  sprintf@fmt 00DF  
                  ___xxtofl 09EA                    __ptext10 16B7                    __ptext11 0895  
                  __ptext20 0443                    __ptext12 07FE                    __ptext21 166A  
                  __ptext13 164E                    __ptext30 156D                    __ptext22 095F  
                  __ptext14 0B72                    __ptext31 15B8                    __ptext23 0DC8  
                  __ptext15 069A                    __ptext32 16E0                    __ptext24 157B  
                  __ptext16 161A                    __ptext41 158D                    __ptext33 1762  
                  __ptext25 170B                    __ptext17 168E                    __ptext34 0849  
                  __ptext26 080D                    __ptext18 09EA                    __ptext35 0801  
                  __ptext27 1601                    __ptext19 08EA                    __ptext36 15CF  
                  __ptext28 15A2                    __ptext37 155F                    __ptext29 15E8  
                  __ptext38 1558                    __ptext39 1551                _SSP1CON1bits 0190  
              _SSP1CON2bits 0191                    _s_Timers 0220                  _RC1STAbits 011D  
              ??_valorAngle 0025                    int$flags 007E                    _vfprintf 1793  
                  main@Xant 00CE                    main@Yant 00CC                    main@Zant 00CA  
                  main@accX 0130                    main@accY 012C                    main@accZ 0128  
              _SSP1STATbits 018F                    main@xcal 00B8                    main@ycal 00B6  
                  main@zcal 0142                    main@roll 0124            ___aomod@dividend 0028  
                _INTCONbits 000B          __end_of_valorAngle 1800                    intlevel1 0000  
                 sprintf@ap 00E3                 _PPSLOCKbits 0E8F             ___aomod@divisor 0020  
               ??_vfpfcnvrt 005B             ___aomod@counter 0031               __pstringtext1 1800  
             __pstringtext2 1813               __pstringtext3 1822               __pstringtext4 182E  
             __pstringtext5 1839               __pstringtext6 0000      __Umul8_16@multiplicand 0020  
                  sprintf@f 00E5                    sprintf@s 00E4                  _SSP1DATPPS 0EC6  
                _SSP1CLKPPS 0EC5                  _TX1STAbits 011E               ___fladd@signs 0058  
              ___aodiv@sign 0032                ___fladd@aexp 0059                ___fladd@bexp 005A  
      __Umul8_16@multiplier 0028                ___aomod@sign 0032           __Umul8_16@product 0024  
